# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-04 10:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../doc/reference/configuration/index.rst:5
msgid "Configuration reference"
msgstr ""

#: ../doc/reference/configuration/index.rst:7
msgid "This reference covers all options and parameters which can be set for Tarantool on the command line or in an :ref:`initialization file <index-init_label>`."
msgstr ""

#: ../doc/reference/configuration/index.rst:10
msgid "Tarantool is started by entering either of the following command:"
msgstr ""

#: ../doc/reference/configuration/index.rst:49
msgid "$ **tarantool**\n"
"\n"
"$ **tarantool** *options*\n"
"\n"
"$ **tarantool** *lua-initialization-file* **[** *arguments* **]**"
msgstr ""

#: ../doc/reference/configuration/index.rst:23
msgid "Command options"
msgstr ""

#: ../doc/reference/configuration/index.rst:27
msgid "Print an annotated list of all available options and exit."
msgstr ""

#: ../doc/reference/configuration/index.rst:33
msgid "Print product name and version, for example:"
msgstr ""

#: ../doc/reference/configuration/index.rst:35
msgid "$ ./tarantool --version\n"
"Tarantool 1.7.0-1216-g73f7154\n"
"Target: Linux-x86_64-Debug\n"
"..."
msgstr ""

#: ../doc/reference/configuration/index.rst:42
msgid "In this example:"
msgstr ""

#: ../doc/reference/configuration/index.rst:44
msgid "“Tarantool” is the name of the reusable asynchronous networking programming framework."
msgstr ""

#: ../doc/reference/configuration/index.rst:47
msgid "The 3-number version follows the standard ``<major>-<minor>-<patch>`` scheme, in which ``<major>`` number is changed only rarely, ``<minor>`` is incremented for each new milestone and indicates possible incompatible changes, and ``<patch>`` stands for the number of bug fix releases made after the start of the milestone. For non-released versions only, there may be a commit number and commit SHA1 to indicate how much this particular build has diverged from the last release."
msgstr ""

#: ../doc/reference/configuration/index.rst:55
msgid "“Target” is the platform tarantool was built on. Some platform-specific details may follow this line."
msgstr ""

#: ../doc/reference/configuration/index.rst:60
msgid "Tarantool uses `git describe <http://www.kernel.org/pub/software/scm/git/docs/git-describe.html>`_ to produce its version id, and this id can be used at any time to check out the corresponding source from our `git repository <http://github.com/tarantool/tarantool.git>`_."
msgstr ""

#: ../doc/reference/configuration/index.rst:70
msgid "URI"
msgstr ""

#: ../doc/reference/configuration/index.rst:72
msgid "Some configuration parameters and some functions depend on a URI, or \"Universal Resource Identifier\". The URI string format is similar to the `generic syntax for a URI schema <http://en.wikipedia.org/wiki/URI_scheme#Generic_syntax>`_. So it may contain (in order) a user name for login, a password, a host name or host IP address, and a port number. Only the port number is always mandatory. The password is mandatory if the user name is specified, unless the user name is 'guest'. So, formally, the URI syntax is ``[host:]port`` or ``[username:password@]host:port``. If host is omitted, then '0.0.0.0' or '[::]' is assumed, meaning respectively any IPv4 address or any IPv6 address, on the local machine. If username:password is omitted, then 'guest' is assumed. Some examples:"
msgstr ""

#: ../doc/reference/configuration/index.rst:91
msgid "URI fragment"
msgstr ""

#: ../doc/reference/configuration/index.rst:91
msgid "Example"
msgstr ""

#: ../doc/reference/configuration/index.rst:93
msgid "port"
msgstr ""

#: ../doc/reference/configuration/index.rst:93
msgid "3301"
msgstr ""

#: ../doc/reference/configuration/index.rst:95
msgid "host:port"
msgstr ""

#: ../doc/reference/configuration/index.rst:95
msgid "127.0.0.1:3301"
msgstr ""

#: ../doc/reference/configuration/index.rst:97
msgid "username:password@host:port"
msgstr ""

#: ../doc/reference/configuration/index.rst:97
msgid "notguest:sesame@mail.ru:3301"
msgstr ""

#: ../doc/reference/configuration/index.rst:100
msgid "In certain circumstances a Unix domain socket may be used where a URI is expected, for example \"unix/:/tmp/unix_domain_socket.sock\" or simply \"/tmp/unix_domain_socket.sock\"."
msgstr ""

#: ../doc/reference/configuration/index.rst:104
msgid "A method for parsing URIs is illustrated in :ref:`Module uri <uri-parse>`."
msgstr ""

#: ../doc/reference/configuration/index.rst:110
msgid "Initialization file"
msgstr ""

#: ../doc/reference/configuration/index.rst:112
msgid "If the command to start Tarantool includes :codeitalic:`lua-initialization-file`, then Tarantool begins by invoking the Lua program in the file, which by convention may have the name \"``script.lua``\". The Lua program may get further arguments from the command line or may use operating-system functions, such as ``getenv()``. The Lua program almost always begins by invoking ``box.cfg()``, if the database server will be used or if ports need to be opened. For example, suppose ``script.lua`` contains the lines"
msgstr ""

#: ../doc/reference/configuration/index.rst:120
msgid "#!/usr/bin/env tarantool\n"
"box.cfg{\n"
"    listen              = os.getenv(\"LISTEN_URI\"),\n"
"    memtx_memory        = 100000,\n"
"    pid_file            = \"tarantool.pid\",\n"
"    rows_per_wal        = 50\n"
"}\n"
"print('Starting ', arg[1])"
msgstr ""

#: ../doc/reference/configuration/index.rst:131
msgid "and suppose the environment variable LISTEN_URI contains 3301, and suppose the command line is ``~/tarantool/src/tarantool script.lua ARG``. Then the screen might look like this:"
msgstr ""

#: ../doc/reference/configuration/index.rst:135
msgid "$ export LISTEN_URI=3301\n"
"$ ~/tarantool/src/tarantool script.lua ARG\n"
"... main/101/script.lua C> version 1.7.0-1216-g73f7154\n"
"... main/101/script.lua C> log level 5\n"
"... main/101/script.lua I> mapping 107374184 bytes for a shared arena...\n"
"... main/101/script.lua I> recovery start\n"
"... main/101/script.lua I> recovering from './00000000000000000000.snap'\n"
"... main/101/script.lua I> primary: bound to 0.0.0.0:3301\n"
"... main/102/leave_local_hot_standby I> ready to accept requests\n"
"Starting  ARG\n"
"... main C> entering the event loop"
msgstr ""

#: ../doc/reference/configuration/index.rst:149
msgid "If you wish to start an interactive session on the same terminal after initialization is complete, you can use :ref:`console.start() <console-start>`."
msgstr ""

#: ../doc/reference/configuration/index.rst:165
msgid "Configuration parameters"
msgstr ""

#: ../doc/reference/configuration/index.rst:167
msgid "Configuration parameters have the form:"
msgstr ""

#: ../doc/reference/configuration/index.rst:169
msgid ":extsamp:`{**{box.cfg}**}{[{*{key = value}*} [, {*{key = value ...}*}]]}`"
msgstr ""

#: ../doc/reference/configuration/index.rst:171
msgid "Since ``box.cfg`` may contain many configuration parameters and since some of the parameters (such as directory addresses) are semi-permanent, it's best to keep ``box.cfg`` in a Lua file. Typically this Lua file is the initialization file which is specified on the tarantool command line."
msgstr ""

#: ../doc/reference/configuration/index.rst:176
msgid "Most configuration parameters are for allocating resources, opening ports, and specifying database behavior. All parameters are optional. A few parameters are dynamic, that is, they can be changed at runtime by calling ``box.cfg{}`` a second time."
msgstr ""

#: ../doc/reference/configuration/index.rst:181
msgid "To see all the non-null parameters, say ``box.cfg`` (no parentheses). To see a particular parameter, for example the listen address, say ``box.cfg.listen``."
msgstr ""

#: ../doc/reference/configuration/index.rst:184
msgid "The following sections describe all parameters for basic operation, for storage, for binary logging and snapshots, for replication, for networking, for logging, and for feedback."
msgstr ""

#: ../doc/reference/configuration/index.rst:190
msgid "Basic parameters"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:1
msgid ":ref:`background <cfg_basic-background>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:2
msgid ":ref:`custom_proc_title <cfg_basic-custom_proc_title>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:3
msgid ":ref:`listen <cfg_basic-listen>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:4
msgid ":ref:`memtx_dir <cfg_basic-memtx_dir>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:5
msgid ":ref:`pid_file <cfg_basic-pid_file>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:6
msgid ":ref:`read_only <cfg_basic-read_only>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:7
msgid ":ref:`sql_cache_size <cfg_basic-sql_cache_size>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:8
msgid ":ref:`vinyl_dir <cfg_basic-vinyl_dir>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:9
msgid ":ref:`vinyl_timeout <cfg_basic-vinyl_timeout>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:10
msgid ":ref:`username <cfg_basic-username>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:11
msgid ":ref:`wal_dir <cfg_basic-wal_dir>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:12
msgid ":ref:`work_dir <cfg_basic-work_dir>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:13
msgid ":ref:`worker_pool_threads <cfg_basic-worker_pool_threads>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:14
msgid ":ref:`strip_core <cfg_basic-strip_core>`"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:20
msgid "Run the server as a background task. The :ref:`log <cfg_logging-log>` and :ref:`pid_file <cfg_basic-pid_file>` parameters must be non-null for this to work."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:24
#: ../doc/reference/configuration/cfg_basic.rst:113
#: ../doc/reference/configuration/cfg_basic.rst:245
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:22
#: ../doc/reference/configuration/cfg_hot_standby.rst:48
#: ../doc/reference/configuration/cfg_replication.rst:251
#: ../doc/reference/configuration/cfg_logging.rst:134
#: ../doc/reference/configuration/cfg_logging.rst:291
#: ../doc/reference/configuration/cfg_deprecated.rst:25
#: ../doc/reference/configuration/cfg_deprecated.rst:55
#: ../doc/reference/configuration/cfg_deprecated.rst:66
msgid "Type: boolean"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:25
#: ../doc/reference/configuration/cfg_basic.rst:114
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:23
#: ../doc/reference/configuration/cfg_hot_standby.rst:49
#: ../doc/reference/configuration/cfg_replication.rst:252
#: ../doc/reference/configuration/cfg_deprecated.rst:26
msgid "Default: false"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:26
#: ../doc/reference/configuration/cfg_basic.rst:88
#: ../doc/reference/configuration/cfg_basic.rst:99
#: ../doc/reference/configuration/cfg_basic.rst:154
#: ../doc/reference/configuration/cfg_basic.rst:181
#: ../doc/reference/configuration/cfg_basic.rst:195
#: ../doc/reference/configuration/cfg_basic.rst:220
#: ../doc/reference/configuration/cfg_basic.rst:247
#: ../doc/reference/configuration/cfg_storage.rst:43
#: ../doc/reference/configuration/cfg_storage.rst:55
#: ../doc/reference/configuration/cfg_storage.rst:69
#: ../doc/reference/configuration/cfg_storage.rst:93
#: ../doc/reference/configuration/cfg_storage.rst:115
#: ../doc/reference/configuration/cfg_storage.rst:139
#: ../doc/reference/configuration/cfg_storage.rst:152
#: ../doc/reference/configuration/cfg_storage.rst:164
#: ../doc/reference/configuration/cfg_storage.rst:175
#: ../doc/reference/configuration/cfg_storage.rst:186
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:24
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:37
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:52
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:86
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:98
#: ../doc/reference/configuration/cfg_hot_standby.rst:50
#: ../doc/reference/configuration/cfg_replication.rst:360
#: ../doc/reference/configuration/cfg_replication.rst:382
#: ../doc/reference/configuration/cfg_logging.rst:112
#: ../doc/reference/configuration/cfg_logging.rst:136
#: ../doc/reference/configuration/cfg_deprecated.rst:27
#: ../doc/reference/configuration/cfg_deprecated.rst:57
#: ../doc/reference/configuration/cfg_deprecated.rst:95
#: ../doc/reference/configuration/cfg_deprecated.rst:110
msgid "Dynamic: no"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:32
msgid "Add the given string to the server's process title (what’s shown in the COMMAND column for ``ps -ef`` and ``top -c`` commands)."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:36
msgid "For example, ordinarily :samp:`ps -ef` shows the Tarantool server process thus:"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:39
msgid "$ ps -ef | grep tarantool\n"
"1000     14939 14188  1 10:53 pts/2    00:00:13 tarantool <running>"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:44
msgid "But if the configuration parameters include ``custom_proc_title='sessions'`` then the output looks like:"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:47
msgid "$ ps -ef | grep tarantool\n"
"1000     14939 14188  1 10:53 pts/2    00:00:16 tarantool <running>: sessions"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:52
#: ../doc/reference/configuration/cfg_basic.rst:86
#: ../doc/reference/configuration/cfg_basic.rst:97
#: ../doc/reference/configuration/cfg_basic.rst:152
#: ../doc/reference/configuration/cfg_basic.rst:179
#: ../doc/reference/configuration/cfg_basic.rst:193
#: ../doc/reference/configuration/cfg_basic.rst:218
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:84
#: ../doc/reference/configuration/cfg_replication.rst:45
#: ../doc/reference/configuration/cfg_replication.rst:358
#: ../doc/reference/configuration/cfg_replication.rst:380
#: ../doc/reference/configuration/cfg_logging.rst:110
#: ../doc/reference/configuration/cfg_logging.rst:189
#: ../doc/reference/configuration/cfg_logging.rst:302
msgid "Type: string"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:53
#: ../doc/reference/configuration/cfg_basic.rst:75
#: ../doc/reference/configuration/cfg_basic.rst:98
#: ../doc/reference/configuration/cfg_basic.rst:180
#: ../doc/reference/configuration/cfg_basic.rst:219
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:69
#: ../doc/reference/configuration/cfg_replication.rst:46
#: ../doc/reference/configuration/cfg_replication.rst:231
#: ../doc/reference/configuration/cfg_replication.rst:359
#: ../doc/reference/configuration/cfg_replication.rst:381
#: ../doc/reference/configuration/cfg_networking.rst:15
#: ../doc/reference/configuration/cfg_logging.rst:111
msgid "Default: null"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:54
#: ../doc/reference/configuration/cfg_basic.rst:76
#: ../doc/reference/configuration/cfg_basic.rst:115
#: ../doc/reference/configuration/cfg_basic.rst:142
#: ../doc/reference/configuration/cfg_basic.rst:171
#: ../doc/reference/configuration/cfg_basic.rst:234
#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:71
#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:100
#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:112
#: ../doc/reference/configuration/cfg_deprecated.rst:68
msgid "Dynamic: yes"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:60
msgid "The read/write data port number or :ref:`URI <index-uri>` (Universal Resource Identifier) string. Has no default value, so **must be specified** if connections will occur from remote clients that do not use the :ref:`“admin port” <admin-security>`. Connections made with :samp:`listen = {URI}` are called \"binary port\" or \"binary protocol\" connections."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:67
msgid "A typical value is 3301."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:71
msgid "A replica also binds to this port, and accepts connections, but these connections can only serve reads until the replica becomes a master."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:74
msgid "Type: integer or string"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:82
msgid "A directory where memtx stores snapshot (.snap) files. Can be relative to :ref:`work_dir <cfg_basic-work_dir>`. If not specified, defaults to ``work_dir``. See also :ref:`wal_dir <cfg_basic-wal_dir>`."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:87
#: ../doc/reference/configuration/cfg_basic.rst:153
#: ../doc/reference/configuration/cfg_basic.rst:194
msgid "Default: \".\""
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:94
msgid "Store the process id in this file. Can be relative to :ref:`work_dir <cfg_basic-work_dir>`. A typical value is “:file:`tarantool.pid`”."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:105
msgid "Say ``box.cfg{read_only=true...}`` to put the server instance in read-only mode. After this, any requests that try to change persistent data will fail with error :errcode:`ER_READONLY`. Read-only mode should be used for master-replica :ref:`replication <replication>`. Read-only mode does not affect data-change requests for spaces defined as :ref:`temporary <box_schema-space_create>`. Although read-only mode prevents the server from writing to the :ref:`WAL <internals-wal>`, it does not prevent writing diagnostics with the :ref:`log module <log-module>`."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:117
msgid "Setting ``read_only == true`` affects spaces differently depending on the options that were used during :ref:`box.schema.space.create <box_schema-space_create>`, as summarized by this chart:"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:124
msgid "Option"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:124
msgid "Can be created?"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:124
msgid "Can be written to?"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:124
msgid "Is replicated?"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:124
msgid "Is persistent?"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:126
msgid "(default)"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:126
#: ../doc/reference/configuration/cfg_basic.rst:126
#: ../doc/reference/configuration/cfg_basic.rst:128
#: ../doc/reference/configuration/cfg_basic.rst:128
#: ../doc/reference/configuration/cfg_basic.rst:128
#: ../doc/reference/configuration/cfg_basic.rst:130
#: ../doc/reference/configuration/cfg_basic.rst:130
msgid "no"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:126
#: ../doc/reference/configuration/cfg_basic.rst:126
#: ../doc/reference/configuration/cfg_basic.rst:128
#: ../doc/reference/configuration/cfg_basic.rst:130
#: ../doc/reference/configuration/cfg_basic.rst:130
msgid "yes"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:128
msgid "temporary"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:130
msgid "is_local"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:137
msgid "The maximum number of bytes in the cache for :ref:`SQL prepared statements <box-sql_box_prepare>`. (The number of bytes that are actually used can be seen with :ref:`box.info.sql().cache.size <box_introspection-box_info>`.)"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:140
msgid "Type: number"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:141
msgid "Default: 5242880"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:148
msgid "A directory where vinyl files or subdirectories will be stored. Can be relative to :ref:`work_dir <cfg_basic-work_dir>`. If not specified, defaults to ``work_dir``."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:160
msgid "The vinyl storage engine has a scheduler which does compaction. When vinyl is low on available memory, the compaction scheduler may be unable to keep up with incoming update requests. In that situation, queries may time out after ``vinyl_timeout`` seconds. This should rarely occur, since normally vinyl would throttle inserts when it is running low on compaction bandwidth. Compaction can also be ordered manually with :ref:`index_object:compact() <box_index-compact>`."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:169
#: ../doc/reference/configuration/cfg_storage.rst:28
#: ../doc/reference/configuration/cfg_storage.rst:67
#: ../doc/reference/configuration/cfg_storage.rst:162
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:68
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:96
#: ../doc/reference/configuration/cfg_replication.rst:202
#: ../doc/reference/configuration/cfg_replication.rst:275
#: ../doc/reference/configuration/cfg_replication.rst:292
#: ../doc/reference/configuration/cfg_networking.rst:14
#: ../doc/reference/configuration/cfg_logging.rst:146
#: ../doc/reference/configuration/cfg_logging.rst:312
#: ../doc/reference/configuration/cfg_deprecated.rst:93
#: ../doc/reference/configuration/cfg_deprecated.rst:108
msgid "Type: float"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:170
msgid "Default: 60"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:177
msgid "UNIX user name to switch to after start."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:187
msgid "A directory where write-ahead log (.xlog) files are stored. Can be relative to :ref:`work_dir <cfg_basic-work_dir>`. Sometimes ``wal_dir`` and :ref:`memtx_dir <cfg_basic-memtx_dir>` are specified with different values, so that write-ahead log files and snapshot files can be stored on different disks. If not specified, defaults to ``work_dir``."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:201
msgid "A directory where database working files will be stored. The server instance switches to ``work_dir`` with :manpage:`chdir(2)` after start. Can be relative to the current directory. If not specified, defaults to the current directory. Other directory parameters may be relative to ``work_dir``, for example:"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:207
msgid "box.cfg{\n"
"    work_dir = '/home/user/A',\n"
"    wal_dir = 'B',\n"
"    memtx_dir = 'C'\n"
"}"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:215
msgid "will put xlog files in ``/home/user/A/B``, snapshot files in ``/home/user/A/C``, and all other files or subdirectories in ``/home/user/A``."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:227
msgid "The maximum number of threads to use during execution of certain internal processes (currently :ref:`socket.getaddrinfo() <socket-getaddrinfo>` and :ref:`coio_call() <c_api-coio-coio_call>`)."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:232
#: ../doc/reference/configuration/cfg_storage.rst:41
#: ../doc/reference/configuration/cfg_storage.rst:53
#: ../doc/reference/configuration/cfg_storage.rst:78
#: ../doc/reference/configuration/cfg_storage.rst:91
#: ../doc/reference/configuration/cfg_storage.rst:101
#: ../doc/reference/configuration/cfg_storage.rst:113
#: ../doc/reference/configuration/cfg_storage.rst:137
#: ../doc/reference/configuration/cfg_storage.rst:150
#: ../doc/reference/configuration/cfg_storage.rst:173
#: ../doc/reference/configuration/cfg_storage.rst:184
#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:69
#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:98
#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:110
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:35
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:50
#: ../doc/reference/configuration/cfg_replication.rst:230
#: ../doc/reference/configuration/cfg_replication.rst:309
#: ../doc/reference/configuration/cfg_networking.rst:50
#: ../doc/reference/configuration/cfg_networking.rst:67
#: ../doc/reference/configuration/cfg_logging.rst:28
msgid "Type: integer"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:233
#: ../doc/reference/configuration/cfg_replication.rst:203
msgid "Default: 4"
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:240
msgid "Whether coredump files should include memory allocated for tuples. (This can be large if Tarantool runs under heavy load.) Setting to ``true`` means \"do not include\". In an older version of Tarantool the default value of this parameter was ``false``."
msgstr ""

#: ../doc/reference/configuration/cfg_basic.rst:246
#: ../doc/reference/configuration/cfg_logging.rst:292
#: ../doc/reference/configuration/cfg_deprecated.rst:56
#: ../doc/reference/configuration/cfg_deprecated.rst:67
msgid "Default: true"
msgstr ""

#: ../doc/reference/configuration/index.rst:196
msgid "Configuring the storage"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:1
msgid ":ref:`memtx_memory <cfg_storage-memtx_memory>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:2
msgid ":ref:`memtx_max_tuple_size <cfg_storage-memtx_max_tuple_size>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:3
msgid ":ref:`memtx_min_tuple_size <cfg_storage-memtx_min_tuple_size>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:4
msgid ":ref:`vinyl_bloom_fpr <cfg_storage-vinyl_bloom_fpr>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:5
msgid ":ref:`vinyl_cache <cfg_storage-vinyl_cache>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:6
msgid ":ref:`vinyl_max_tuple_size <cfg_storage-vinyl_max_tuple_size>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:7
msgid ":ref:`vinyl_memory <cfg_storage-vinyl_memory>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:8
msgid ":ref:`vinyl_page_size <cfg_storage-vinyl_page_size>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:9
msgid ":ref:`vinyl_range_size <cfg_storage-vinyl_range_size>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:10
msgid ":ref:`vinyl_run_count_per_level <cfg_storage-vinyl_run_count_per_level>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:11
msgid ":ref:`vinyl_run_size_ratio <cfg_storage-vinyl_run_size_ratio>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:12
msgid ":ref:`vinyl_read_threads <cfg_storage-vinyl_read_threads>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:13
msgid ":ref:`vinyl_write_threads <cfg_storage-vinyl_write_threads>`"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:19
msgid "How much memory Tarantool allocates to actually store tuples, in bytes. When the limit is reached, :ref:`INSERT <box_space-insert>` or :ref:`UPDATE <box_space-insert>` requests begin failing with error :errcode:`ER_MEMORY_ISSUE`. The server does not go beyond the ``memtx_memory`` limit to allocate tuples, but there is additional memory used to store indexes and connection information. Depending on actual configuration and workload, Tarantool can consume up to 20% more than the ``memtx_memory`` limit."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:29
msgid "Default: 256 * 1024 * 1024 = 268435456"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:30
#: ../doc/reference/configuration/cfg_storage.rst:103
msgid "Dynamic: **yes** but it cannot be decreased"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:36
msgid "Size of the largest allocation unit, in bytes, for the memtx storage engine. It can be increased if it is necessary to store large tuples. See also: :ref:`vinyl_max_tuple_size <cfg_storage-vinyl_max_tuple_size>`."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:42
#: ../doc/reference/configuration/cfg_storage.rst:92
msgid "Default: 1024 * 1024 = 1048576"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:49
msgid "Size of the smallest allocation unit, in bytes. It can be decreased if most of the tuples are very small. The value must be between 8 and 1048280 inclusive."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:54
msgid "Default: 16"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:61
msgid "Bloom filter false positive rate -- the suitable probability of the `bloom filter <https://en.wikipedia.org/wiki/Bloom_filter>`_ to give a wrong result. The ``vinyl_bloom_fpr`` setting is a default value for one of the options in the :ref:`Options for space_object:create_index() <box_space-create_index>` chart."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:68
msgid "Default = 0.05"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:75
msgid "The cache size for the vinyl storage engine, in bytes. The cache can be resized dynamically."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:79
#: ../doc/reference/configuration/cfg_storage.rst:102
msgid "Default = 128 * 1024 * 1024 = 134217728"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:80
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:70
#: ../doc/reference/configuration/cfg_replication.rst:47
#: ../doc/reference/configuration/cfg_replication.rst:204
#: ../doc/reference/configuration/cfg_replication.rst:232
#: ../doc/reference/configuration/cfg_replication.rst:253
#: ../doc/reference/configuration/cfg_replication.rst:277
#: ../doc/reference/configuration/cfg_replication.rst:294
#: ../doc/reference/configuration/cfg_replication.rst:311
#: ../doc/reference/configuration/cfg_networking.rst:16
#: ../doc/reference/configuration/cfg_networking.rst:52
#: ../doc/reference/configuration/cfg_networking.rst:69
#: ../doc/reference/configuration/cfg_logging.rst:30
#: ../doc/reference/configuration/cfg_logging.rst:148
#: ../doc/reference/configuration/cfg_logging.rst:191
#: ../doc/reference/configuration/cfg_logging.rst:293
#: ../doc/reference/configuration/cfg_logging.rst:304
#: ../doc/reference/configuration/cfg_logging.rst:314
msgid "Dynamic: **yes**"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:86
msgid "Size of the largest allocation unit, in bytes, for the vinyl storage engine. It can be increased if it is necessary to store large tuples. See also: :ref:`memtx_max_tuple_size <cfg_storage-memtx_max_tuple_size>`."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:99
msgid "The maximum number of in-memory bytes that vinyl uses."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:109
msgid "Page size, in bytes. Page is a read/write unit for vinyl disk operations. The ``vinyl_page_size`` setting is a default value for one of the options in the :ref:`Options for space_object:create_index() <box_space-create_index>` chart."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:114
msgid "Default = 8 * 1024 = 8192"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:121
msgid "The default maximum range size for a vinyl index, in bytes. The maximum range size affects the decision whether to :ref:`split <engines-vinyl_split>` a range."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:125
msgid "If ``vinyl_range_size`` is not nil and not 0, then it is used as the default value for the ``range_size`` option in the :ref:`Options for space_object:create_index() <box_space-create_index>` chart."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:130
msgid "If ``vinyl_range_size`` is nil or 0, and ``range_size`` is not specified when the index is created, then Tarantool sets a value later depending on performance considerations. To see the actual value, use :ref:`index_object:stat().range_size <box_index-stat>`."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:135
msgid "In Tarantool versions prior to 1.10.2, ``vinyl_range_size`` default value was 1073741824."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:138
msgid "Default = nil"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:145
msgid "The maximal number of runs per level in vinyl LSM tree. If this number is exceeded, a new level is created. The ``vinyl_run_count_per_level`` setting is a default value for one of the options in the :ref:`Options for space_object:create_index() <box_space-create_index>` chart."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:151
#: ../doc/reference/configuration/cfg_storage.rst:185
msgid "Default = 2"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:158
msgid "Ratio between the sizes of different levels in the LSM tree. The ``vinyl_run_size_ratio`` setting is a default value for one of the options in the :ref:`Options for space_object:create_index() <box_space-create_index>` chart."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:163
msgid "Default = 3.5"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:170
msgid "The maximum number of read threads that vinyl can use for some concurrent operations, such as I/O and compression."
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:174
msgid "Default = 1"
msgstr ""

#: ../doc/reference/configuration/cfg_storage.rst:181
msgid "The maximum number of write threads that vinyl can use for some concurrent operations, such as I/O and compression."
msgstr ""

#: ../doc/reference/configuration/index.rst:204
msgid "Checkpoint daemon"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:1
msgid ":ref:`checkpoint_count <cfg_checkpoint_daemon-checkpoint_count>`"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:2
msgid ":ref:`checkpoint_interval <cfg_checkpoint_daemon-checkpoint_interval>`"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:3
msgid ":ref:`checkpoint_wal_threshold <cfg_checkpoint_daemon-checkpoint_wal_threshold>`"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:5
msgid "The checkpoint daemon is a fiber which is constantly running. At intervals, it may make new :ref:`snapshot (.snap) files <index-box_persistence>` and then may delete old snapshot files."
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:9
msgid "The :ref:`checkpoint_interval <cfg_checkpoint_daemon-checkpoint_interval>` and :ref:`checkpoint_count <cfg_checkpoint_daemon-checkpoint_count>` configuration settings determine how long the intervals are, and how many snapshots should exist before deletions occur."
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:16
msgid "**Tarantool garbage collector**"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:18
msgid "The checkpoint daemon may activate the Tarantool garbage collector which deletes old files. This garbage collector is distinct from the `Lua garbage collector <https://www.lua.org/manual/5.1/manual.html#2.10>`_ which is for Lua objects, and distinct from a Tarantool garbage collector which specializes in :ref:`handling shard buckets <vshard-gc>`."
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:25
msgid "If the checkpoint daemon deletes an old snapshot file, then the Tarantool garbage collector will also delete any :ref:`write-ahead log (.xlog) <internals-wal>` files which are older than the snapshot file and which contain information that is present in the snapshot file. It will also delete obsolete vinyl ``.run`` files."
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:31
msgid "The checkpoint daemon and the Tarantool garbage collector will not delete a file if:"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:33
msgid "a **backup** is ongoing and the file has not been backed up (see :ref:`\"Hot backup\" <admin-backups-hot_backup_vinyl_memtx>`), or"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:36
msgid "**replication** is ongoing and the file has not been relayed to a replica (see :ref:`\"Replication architecture\" <replication-architecture>`),"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:39
msgid "a replica is connecting, or"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:41
msgid "a replica has fallen behind. The progress of each replica is tracked; if a replica's position is far from being up to date, then the server stops to give it a chance to catch up. If an administrator concludes that a replica is permanently down, then the correct procedure is to restart the server, or (preferably) :ref:`remove the replica from the cluster <replication-remove_instances>`."
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:53
msgid "The interval between actions by the checkpoint daemon, in seconds. If ``checkpoint_interval`` is set to a value greater than zero, and there is activity which causes change to a database, then the checkpoint daemon will call :ref:`box.snapshot <box-snapshot>` every ``checkpoint_interval`` seconds, creating a new snapshot file each time. If ``checkpoint_interval`` is set to zero, then the checkpoint daemon is disabled."
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:60
msgid "For example:"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:62
msgid "box.cfg{checkpoint_interval=60}"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:66
msgid "will cause the checkpoint daemon to create a new database snapshot once per minute, if there is activity."
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:70
msgid "Default: 3600 (one hour)"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:77
msgid "The maximum number of snapshots that may exist on the :ref:`memtx_dir <cfg_basic-memtx_dir>` directory before the checkpoint daemon will delete old snapshots. If ``checkpoint_count`` equals zero, then the checkpoint daemon does not delete old snapshots. For example:"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:83
msgid "box.cfg{\n"
"    checkpoint_interval = 3600,\n"
"    checkpoint_count  = 10\n"
"}"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:90
msgid "will cause the checkpoint daemon to create a new snapshot each hour until it has created ten snapshots. After that, it will delete the oldest snapshot (and any associated write-ahead-log files) after creating a new one."
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:94
msgid "Remember that, as noted earlier, snapshots will not be deleted if replication is ongoing and the file has not been relayed to a replica. Therefore ``checkpoint_count`` has no effect unless all replicas are alive."
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:99
#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:97
msgid "Default: 2"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:106
msgid "The threshold for the total size in bytes of all WAL files created since the last checkpoint. Once the configured threshold is exceeded, the WAL thread notifies the checkpoint daemon that it must make a new checkpoint and delete old WAL files."
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:111
msgid "Default: 10^18 (a large number so in effect there is no limit by default)"
msgstr ""

#: ../doc/reference/configuration/cfg_snapshot_daemon.rst:114
msgid "This parameter was added in version 2.1. It enables administrators to handle a problem that could occur with calculating how much disk space to allocate for a partition containing WAL files. For example, suppose :ref:`checkpoint_interval <cfg_checkpoint_daemon-checkpoint_interval>` = 2 and :ref:`checkpoint_count <cfg_checkpoint_daemon-checkpoint_count>` = 5 and the average amount that Tarantool writes between each checkpoint interval = 1 GB. Then one could calculate that the necessary amount is (2*5*1) 10GB. But this calculation would be wrong if, instead of writing 1 GB during one checkpoint interval, Tarantool encounters an unusual spike and tries to write 11 GB, causing an operating-system ENOSPC (\"no space\") error. By setting checkpoint_wal_threshold to a lower value, say 9 GB, an administrator could prevent the error."
msgstr ""

#: ../doc/reference/configuration/index.rst:210
msgid "Binary logging and snapshots"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:1
msgid ":ref:`force_recovery <cfg_binary_logging_snapshots-force_recovery>`,"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:2
msgid ":ref:`rows_per_wal <cfg_binary_logging_snapshots-rows_per_wal>`,"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:3
msgid ":ref:`wal_max_size <cfg_binary_logging_snapshots-wal_max_size>`,"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:4
msgid ":ref:`snap_io_rate_limit <cfg_binary_logging_snapshots-snap_io_rate_limit>`,"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:5
msgid ":ref:`wal_mode <cfg_binary_logging_snapshots-wal_mode>`,"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:6
msgid ":ref:`wal_dir_rescan_delay <cfg_binary_logging_snapshots-wal_dir_rescan_delay>`"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:12
msgid "If ``force_recovery`` equals true, Tarantool tries to continue if there is an error while reading a :ref:`snapshot file<index-box_persistence>` (at server instance start) or a :ref:`write-ahead log file<internals-wal>` (at server instance start or when applying an update at a replica): skips invalid records, reads as much data as possible and lets the process finish with a warning. Users can prevent the error from recurring by writing to the database and executing :ref:`box.snapshot() <box-snapshot>`."
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:20
msgid "Otherwise, Tarantool aborts recovery if there is an error while reading."
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:30
msgid "How many log records to store in a single write-ahead log file. When this limit is reached, Tarantool creates another WAL file named :samp:`{<first-lsn-in-wal>}.xlog`. This can be useful for simple rsync-based backups."
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:36
msgid "Default: 500000"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:43
msgid "The maximum number of bytes in a single write-ahead log file. When a request would cause an .xlog file to become larger than ``wal_max_size``, Tarantool creates another WAL file -- the same effect that happens when the :ref:`rows_per_wal <cfg_binary_logging_snapshots-rows_per_wal>` limit is reached."
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:51
msgid "Default: 268435456 (256 * 1024 * 1024)"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:58
msgid "Reduce the throttling effect of :ref:`box.snapshot <box-snapshot>` on INSERT/UPDATE/DELETE performance by setting a limit on how many megabytes per second it can write to disk. The same can be achieved by splitting :ref:`wal_dir <cfg_basic-wal_dir>` and :ref:`memtx_dir <cfg_basic-memtx_dir>` locations and moving snapshots to a separate disk. The limit also affects what :ref:`box.stat.vinyl().regulator <box_introspection-box_stat_vinyl_regulator>` may show for the write rate of dumps to .run and .index files."
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:76
msgid "Specify fiber-WAL-disk synchronization mode as:"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:78
msgid "``none``: write-ahead log is not maintained;"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:79
msgid "``write``: :ref:`fibers <fiber-fibers>` wait for their data to be written to the write-ahead log (no :manpage:`fsync(2)`);"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:81
msgid "``fsync``: fibers wait for their data, :manpage:`fsync(2)` follows each :manpage:`write(2)`;"
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:85
msgid "Default: \"write\""
msgstr ""

#: ../doc/reference/configuration/cfg_binary_logging_snapshots.rst:92
msgid "Number of seconds between periodic scans of the write-ahead-log file directory, when checking for changes to write-ahead-log files for the sake of :ref:`replication <replication>` or :ref:`hot standby <index-hot_standby>`."
msgstr ""

#: ../doc/reference/configuration/index.rst:218
msgid "Hot standby"
msgstr ""

#: ../doc/reference/configuration/cfg_hot_standby.rst:3
msgid "Whether to start the server in **hot standby** mode."
msgstr ""

#: ../doc/reference/configuration/cfg_hot_standby.rst:5
msgid "Hot standby is a feature which provides a simple form of failover without :ref:`replication <replication>`."
msgstr ""

#: ../doc/reference/configuration/cfg_hot_standby.rst:8
msgid "The expectation is that there will be two instances of the server using the same configuration. The first one to start will be the \"primary\" instance. The second one to start will be the \"standby\" instance."
msgstr ""

#: ../doc/reference/configuration/cfg_hot_standby.rst:12
msgid "To initiate the standby instance, start a second instance of the Tarantool server on the same computer with the same :ref:`box.cfg <box_introspection-box_cfg>` configuration settings -- including the same directories and same non-null URIs -- and with the additional configuration setting ``hot_standby = true``. Expect to see a notification ending with the words ``I> Entering hot standby mode``. This is fine. It means that the standby instance is ready to take over if the primary instance goes down."
msgstr ""

#: ../doc/reference/configuration/cfg_hot_standby.rst:22
msgid "The standby instance will initialize and will try to take a lock on :ref:`wal_dir <cfg_basic-wal_dir>`, but will fail because the primary instance has made a lock on ``wal_dir``. So the standby instance goes into a loop, reading the write ahead log which the primary instance is writing (so the two instances are always in sync), and trying to take the lock. If the primary instance goes down for any reason, the lock will be released. In this case, the standby instance will succeed in taking the lock, will connect on the :ref:`listen <cfg_basic-listen>` address and will become the primary instance. Expect to see a notification ending with the words ``I> ready to accept requests``."
msgstr ""

#: ../doc/reference/configuration/cfg_hot_standby.rst:35
msgid "Thus there is no noticeable downtime if the primary instance goes down."
msgstr ""

#: ../doc/reference/configuration/cfg_hot_standby.rst:37
msgid "Hot standby feature has no effect:"
msgstr ""

#: ../doc/reference/configuration/cfg_hot_standby.rst:39
msgid "if :ref:`wal_dir_rescan_delay = a large number <cfg_binary_logging_snapshots-wal_dir_rescan_delay>` (on Mac OS and FreeBSD); on these platforms, it is designed so that the loop repeats every ``wal_dir_rescan_delay`` seconds."
msgstr ""

#: ../doc/reference/configuration/cfg_hot_standby.rst:43
msgid "if :ref:`wal_mode = 'none' <cfg_binary_logging_snapshots-wal_mode>`; it is designed to work with ``wal_mode = 'write'`` or ``wal_mode = 'fsync'``."
msgstr ""

#: ../doc/reference/configuration/cfg_hot_standby.rst:45
msgid "for spaces created with :ref:`engine = 'vinyl' <box_schema-space_create>`; it is designed to work for spaces created with ``engine = 'memtx'``."
msgstr ""

#: ../doc/reference/configuration/index.rst:224
msgid "Replication"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:1
msgid ":ref:`replication <cfg_replication-replication>`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:2
msgid ":ref:`replication_anon <cfg_replication-replication_anon>`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:3
msgid ":ref:`replication_connect_timeout <cfg_replication-replication_connect_timeout>`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:4
msgid ":ref:`replication_connect_quorum <cfg_replication-replication_connect_quorum>`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:5
msgid ":ref:`replication_skip_conflict <cfg_replication-replication_skip_conflict>`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:6
msgid ":ref:`replication_sync_lag <cfg_replication-replication_sync_lag>`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:7
msgid ":ref:`replication_sync_timeout <cfg_replication-replication_sync_timeout>`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:8
msgid ":ref:`replication_timeout <cfg_replication-replication_timeout>`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:9
msgid ":ref:`replicaset_uuid <cfg_replication-replicaset_uuid>`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:10
msgid ":ref:`instance_uuid <cfg_replication-instance_uuid>`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:16
msgid "If ``replication`` is not an empty string, the instance is considered to be a Tarantool :ref:`replica <replication>`. The replica will try to connect to the master specified in ``replication`` with a :ref:`URI <index-uri>` (Universal Resource Identifier), for example:"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:21
msgid ":samp:`{konstantin}:{secret_password}@{tarantool.org}:{3301}`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:23
msgid "If there is more than one replication source in a replica set, specify an array of URIs, for example (replace 'uri' and 'uri2' in this example with valid URIs):"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:27
msgid ":extsamp:`box.cfg{ replication = { {*{'uri1'}*}, {*{'uri2'}*} } }`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:29
msgid "If one of the URIs is \"self\" -- that is, if one of the URIs is for the instance where ``box.cfg{}`` is being executed on -- then it is ignored. Thus it is possible to use the same ``replication`` specification on multiple server instances, as shown in :ref:`these examples <replication-bootstrap>`."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:35
msgid "The default user name is 'guest'."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:37
msgid "A read-only replica does not accept data-change requests on the :ref:`listen <cfg_basic-listen>` port."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:40
msgid "The ``replication`` parameter is dynamic, that is, to enter master mode, simply set ``replication`` to an empty string and issue:"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:43
msgid ":extsamp:`box.cfg{ replication = {*{new-value}*} }`"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:53
msgid "A Tarantool replica can be anonymous. This type of replica is read-only (but you still can write to temporary and replica-local spaces), and it isn't present in the ``_cluster`` table."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:57
msgid "Since an anonymous replica isn't registered in the ``_cluster`` table, there is no limitation for anonymous replicas count in a replica set: you can have as many of them as you want."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:61
msgid "In order to make a replica anonymous, pass the option ``replication_anon=true`` to ``box.cfg`` and set ``read_only`` to ``true``."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:65
msgid "Let's go through anonymous replica bootstrap. Suppose we have got a master configured with"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:68
msgid "box.cfg{listen=3301}"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:72
msgid "and created a local space called \"loc\":"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:74
msgid "box.schema.space.create('loc', {is_local=true})\n"
"box.space.loc:create_index(\"pk\")"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:79
msgid "Now, to configure an anonymous replica, we need to issue ``box.cfg``, as usual."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:82
msgid "box.cfg{replication_anon=true, read_only=true, replication=3301}"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:86
msgid "As mentioned above, ``replication_anon`` may be set to ``true`` only together with ``read_only``. The instance will fetch the master's snapshot and start following its changes. It will receive no id, so its id value will remain zero."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:91
msgid "tarantool> box.info.id\n"
"---\n"
"- 0\n"
"...\n"
"tarantool> box.info.replication\n"
"---\n"
"- 1:\n"
"    id: 1\n"
"    uuid: 3c84f8d9-e34d-4651-969c-3d0ed214c60f\n"
"    lsn: 4\n"
"    upstream:\n"
"    status: follow\n"
"    idle: 0.6912029999985\n"
"    peer:\n"
"    lag: 0.00014615058898926\n"
"..."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:110
msgid "Now we can use the replica. For example, we can do inserts into the local space:"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:113
msgid "tarantool> for i = 1,10 do\n"
"    > box.space.loc:insert{i}\n"
"    > end\n"
"---\n"
"..."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:121
msgid "Note that while the instance is anonymous, it will increase the 0-th component of its ``vclock``:"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:124
msgid "tarantool> box.info.vclock\n"
"---\n"
"- {0: 10, 1: 4}\n"
"..."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:131
msgid "Let's now promote the anonymous replica to a regular one:"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:133
msgid "tarantool> box.cfg{replication_anon=false}\n"
"2019-12-13 20:34:37.423 [71329] main I> assigned id 2 to replica 6a9c2ed2-b9e1-4c57-a0e8-51a46def7661\n"
"2019-12-13 20:34:37.424 [71329] main/102/interactive I> set 'replication_anon' configuration option to false\n"
"---\n"
"...\n"
"\n"
"tarantool> 2019-12-13 20:34:37.424 [71329] main/117/applier/ I> subscribed\n"
"2019-12-13 20:34:37.424 [71329] main/117/applier/ I> remote vclock {1: 5} local vclock {0: 10, 1: 5}\n"
"2019-12-13 20:34:37.425 [71329] main/118/applierw/ C> leaving orphan mode"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:145
msgid "The replica has just received an id equal to 2. We can make it read-write now."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:147
msgid "box.cfg{read_only=false}\n"
"2019-12-13 20:35:46.392 [71329] main/102/interactive I> set 'read_only' configuration option to false\n"
"---\n"
"...\n"
"\n"
"tarantool> box.schema.space.create('test')\n"
"---\n"
"- engine: memtx\n"
"before_replace: 'function: 0x01109f9dc8'\n"
"on_replace: 'function: 0x01109f9d90'\n"
"ck_constraint: []\n"
"field_count: 0\n"
"temporary: false\n"
"index: []\n"
"is_local: false\n"
"enabled: false\n"
"name: test\n"
"id: 513\n"
"- created\n"
"...\n"
"\n"
"tarantool> box.info.vclock\n"
"---\n"
"- {0: 10, 1: 5, 2: 2}\n"
"..."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:175
msgid "Now the replica tracks its changes in the 2nd ``vclock`` component, as expected. It can also become a replication master from now on."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:179
msgid "Notes:"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:181
msgid "You cannot replicate from an anonymous instance."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:182
msgid "To promote an anonymous instance to a regular one, first start it as anonymous, and only then issue ``box.cfg{replication_anon=false}``"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:185
msgid "In order for the deanonymization to succeed, the instance must replicate from some read-write instance, otherwise it cannot be added to the ``_cluster`` table."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:193
msgid "The number of seconds that a replica will wait when trying to connect to a master in a cluster. See :ref:`orphan status <replication-orphan_status>` for details."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:197
msgid "This parameter is different from :ref:`replication_timeout <cfg_replication-replication_timeout>`, which is only used to automatically reconnect replication when it gets no heartbeats."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:210
msgid "By default a replica will try to connect to all the masters, or it will not start. (The default is recommended so that all replicas will receive the same replica set UUID.)"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:214
msgid "However, by specifying ``replication_connect_quorum = N``, where N is a number greater than or equal to zero, users can state that the replica only needs to connect to N masters."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:218
msgid "This parameter has effect during bootstrap and during :ref:`configuration update <replication-configuration_update>`. Setting ``replication_connect_quorum = 0`` makes Tarantool require no immediate reconnect only in case of recovery. See :ref:`orphan status <replication-orphan_status>` for details."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:224
#: ../doc/reference/configuration/cfg_replication.rst:245
#: ../doc/reference/configuration/cfg_replication.rst:352
#: ../doc/reference/configuration/cfg_replication.rst:374
msgid "Example:"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:226
msgid "box.cfg{replication_connect_quorum=2}"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:238
msgid "By default, if a replica adds a unique key that another replica has added, replication :ref:`stops <replication-replication_stops>` with error = ER_TUPLE_FOUND."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:242
msgid "However, by specifying ``replication_skip_conflict = true``, users can state that such errors may be ignored."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:247
msgid "box.cfg{replication_skip_conflict=true}"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:260
msgid "The maximum :ref:`lag <box_info_replication_upstream_lag>` allowed for a replica. When a replica :ref:`syncs <replication-orphan_status>` (gets updates from a master), it may not catch up completely. The number of seconds that the replica is behind the master is called the \"lag\". Syncing is considered to be complete when the replica's lag is less than or equal to ``replication_sync_lag``."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:267
msgid "If a user sets ``replication_sync_lag`` to nil or to 365 * 100 * 86400 (TIMEOUT_INFINITY), then lag does not matter -- the replica is always considered to be \"synced\". Also, the lag is ignored (assumed to be infinite) in case the master is running Tarantool older than 1.7.7, which does not send :ref:`heartbeat messages <heartbeat>`."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:272
msgid "This parameter is ignored during bootstrap. See :ref:`orphan status <replication-orphan_status>` for details."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:276
msgid "Default: 10"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:283
msgid "The number of seconds that a replica will wait when trying to sync with a master in a cluster, or a :ref:`quorum <cfg_replication-replication_connect_quorum>` of masters, after connecting or during :ref:`configuration update <replication-configuration_update>`. This could fail indefinitely if ``replication_sync_lag`` is smaller than network latency, or if the replica cannot keep pace with master updates. If ``replication_sync_timeout`` expires, the replica enters :ref:`orphan status <replication-orphan_status>`."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:293
msgid "Default: 300"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:300
msgid "If the master has no updates to send to the replicas, it sends heartbeat messages every ``replication_timeout`` seconds, and each replica sends an ACK packet back."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:303
msgid "Both master and replicas are programmed to drop the connection if they get no response in four ``replication_timeout`` seconds. If the connection is dropped, a replica tries to reconnect to the master."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:307
msgid "See more in :ref:`Monitoring a replica set <replication-monitoring>`."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:310
msgid "Default: 1"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:317
msgid "As described in section :ref:`\"Replication architecture\" <replication-architecture>`, each replica set is identified by a `universally unique identifier <https://en.wikipedia.org/wiki/Universally_unique_identifier>`_ called **replica set UUID**, and each instance is identified by an **instance UUID**."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:324
msgid "Ordinarily it is sufficient to let the system generate and format the UUID strings which will be permanently stored."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:327
msgid "However, some administrators may prefer to store Tarantool configuration information in a central repository, for example `Apache ZooKeeper <https://zookeeper.apache.org>`_. Such administrators can assign their own UUID values for either -- or both -- instances (:ref:`instance_uuid <cfg_replication-instance_uuid>`) and replica set (``replicaset_uuid``), when starting up for the first time."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:334
msgid "General rules:"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:336
msgid "The values must be true unique identifiers, not shared by other instances or replica sets within the common infrastructure."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:339
msgid "The values must be used consistently, not changed after initial setup (the initial values are stored in :ref:`snapshot files <index-box_persistence>` and are checked whenever the system is restarted)."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:343
msgid "The values must comply with `RFC 4122 <https://tools.ietf.org/html/rfc4122>`_. The `nil UUID <https://tools.ietf.org/html/rfc4122#section-4.1.7>`_ is not allowed."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:347
msgid "The UUID format includes sixteen octets represented as 32 hexadecimal (base 16) digits, displayed in five groups separated by hyphens, in the form ``8-4-4-4-12`` for a total of 36 characters (32 alphanumeric characters and four hyphens)."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:354
msgid "box.cfg{replicaset_uuid='7b853d13-508b-4b8e-82e6-806f088ea6e9'}"
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:366
msgid "For replication administration purposes, it is possible to set the `universally unique identifiers <https://en.wikipedia.org/wiki/Universally_unique_identifier>`_ of the instance (``instance_uuid``) and the replica set (``replicaset_uuid``), instead of having the system generate the values."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:371
msgid "See the description of :ref:`replicaset_uuid <cfg_replication-replicaset_uuid>` parameter for details."
msgstr ""

#: ../doc/reference/configuration/cfg_replication.rst:376
msgid "box.cfg{instance_uuid='037fec43-18a9-4e12-a684-a42b716fcd02'}"
msgstr ""

#: ../doc/reference/configuration/index.rst:230
msgid "Networking"
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:1
msgid ":ref:`io_collect_interval <cfg_networking-io_collect_interval>`,"
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:2
msgid ":ref:`net_msg_max <cfg_networking-net_msg_max>`"
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:3
msgid ":ref:`readahead <cfg_networking-readahead>`,"
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:9
msgid "The instance will sleep for io_collect_interval seconds between iterations of the event loop. Can be used to reduce CPU load in deployments in which the number of client connections is large, but requests are not so frequent (for example, each connection issues just a handful of requests per second)."
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:22
msgid "To handle messages, Tarantool allocates fibers. To prevent fiber overhead from affecting the whole system, Tarantool restricts how many messages the fibers handle, so that some pending requests are blocked."
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:27
msgid "On powerful systems, increase ``net_msg_max`` and the scheduler will immediately start processing pending requests."
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:30
msgid "On weaker systems, decrease ``net_msg_max`` and the overhead may decrease although this may take some time because the scheduler must wait until already-running requests finish."
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:34
msgid "When ``net_msg_max`` is reached, Tarantool suspends processing of incoming packages until it has processed earlier messages. This is not a direct restriction of the number of fibers that handle network messages, rather it is a system-wide restriction of channel bandwidth. This in turn causes restriction of the number of incoming network messages that the :ref:`transaction processor thread <atomic-threads_fibers_yields>` handles, and therefore indirectly affects the fibers that handle network messages. (The number of fibers is smaller than the number of messages because messages can be released as soon as they are delivered, while incoming requests might not be processed until some time after delivery.)"
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:48
msgid "On typical systems, the default value (768) is correct."
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:51
msgid "Default: 768"
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:58
msgid "The size of the read-ahead buffer associated with a client connection. The larger the buffer, the more memory an active connection consumes and the more requests can be read from the operating system buffer in a single system call. The rule of thumb is to make sure the buffer can contain at least a few dozen requests. Therefore, if a typical tuple in a request is large, e.g. a few kilobytes or even megabytes, the read-ahead buffer size should be increased. If batched request processing is not used, it’s prudent to leave this setting at its default."
msgstr ""

#: ../doc/reference/configuration/cfg_networking.rst:68
msgid "Default: 16320"
msgstr ""

#: ../doc/reference/configuration/index.rst:236
msgid "Logging"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:3
msgid ":ref:`log_level <cfg_logging-log_level>`"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:4
msgid ":ref:`log <cfg_logging-log>`"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:5
msgid ":ref:`log_nonblock <cfg_logging-log_nonblock>`"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:6
msgid ":ref:`too_long_threshold <cfg_logging-too_long_threshold>`"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:7
msgid ":ref:`log_format <cfg_logging-log_format>`"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:13
msgid "What level of detail the :ref:`log <admin-logs>` will have. There are seven levels:"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:15
msgid "1 – ``SYSERROR``"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:16
msgid "2 – ``ERROR``"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:17
msgid "3 – ``CRITICAL``"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:18
msgid "4 – ``WARNING``"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:19
msgid "5 – ``INFO``"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:20
msgid "6 – ``VERBOSE``"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:21
msgid "7 – ``DEBUG``"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:23
msgid "By setting log_level, one can enable logging of all classes below or equal to the given level. Tarantool prints its logs to the standard error stream by default, but this can be changed with the :ref:`log <cfg_logging-log>` configuration parameter."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:29
msgid "Default: 5"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:32
msgid "Warning: prior to Tarantool 1.7.5 there were only six levels and ``DEBUG`` was level 6. Starting with Tarantool 1.7.5 ``VERBOSE`` is level 6 and ``DEBUG`` is level 7. ``VERBOSE`` is a new level for monitoring repetitive events which would cause too much log writing if ``INFO`` were used instead."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:41
msgid "By default, Tarantool sends the log to the standard error stream (``stderr``). If ``log`` is specified, Tarantool sends the log to a file, or to a pipe, or to the system logger."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:45
msgid "Example setting for sending the log to a file:"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:47
msgid "box.cfg{log = 'tarantool.log'}\n"
"-- or\n"
"box.cfg{log = 'file:tarantool.log'}"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:53
msgid "This will open the file ``tarantool.log`` for output on the server’s default directory. If the ``log`` string has no prefix or has the prefix \"file:\", then the string is interpreted as a file path."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:57
msgid "Example setting for sending the log to a pipe:"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:59
msgid "box.cfg{log = '| cronolog tarantool.log'}\n"
"-- or\n"
"box.cfg{log = 'pipe: cronolog tarantool.log'}'"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:65
msgid "This will start the program `cronolog <https://linux.die.net/man/1/cronolog>`_ when the server starts, and will send all log messages to the standard input (``stdin``) of cronolog. If the ``log`` string begins with '|' or has the prefix \"pipe:\", then the string is interpreted as a Unix `pipeline <https://en.wikipedia.org/wiki/Pipeline_%28Unix%29>`_."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:71
msgid "Example setting for sending the log to syslog:"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:73
msgid "box.cfg{log = 'syslog:identity=tarantool'}\n"
"-- or\n"
"box.cfg{log = 'syslog:facility=user'}\n"
"-- or\n"
"box.cfg{log = 'syslog:identity=tarantool,facility=user'}\n"
"-- or\n"
"box.cfg{log = 'syslog:server=unix:/dev/log'}"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:83
msgid "If the ``log`` string begins with \"syslog:\", then it is interpreted as a message for the `syslogd <http://www.rfc-base.org/txt/rfc-5424.txt>`_ program which normally is running in the background of any Unix-like platform. The setting can be 'syslog:', 'syslog:facility=...', 'syslog:identity=...', 'syslog:server=...', or a combination."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:90
msgid "The ``syslog:identity`` setting is an arbitrary string which will be placed at the beginning of all messages. The default value is: tarantool."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:93
msgid "The ``syslog:facility`` setting is currently ignored but will be used in the future. The value must be one of the `syslog <https://en.wikipedia.org/wiki/Syslog>`_ keywords, which tell syslogd where the message should go. The possible values are: auth, authpriv, cron, daemon, ftp, kern, lpr, mail, news, security, syslog, user, uucp, local0, local1, local2, local3, local4, local5, local6, local7. The default value is: user."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:100
msgid "The ``syslog:server`` setting is the locator for the syslog server. It can be a Unix socket path beginning with \"unix:\", or an ipv4 port number. The default socket value is: dev/log (on Linux) or /var/run/syslog (on Mac OS). The default port value is: 514, the UDP port."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:105
msgid "When logging to a file, Tarantool reopens the log on `SIGHUP <https://en.wikipedia.org/wiki/SIGHUP>`_. When log is a program, its pid is saved in the :ref:`log.logger_pid <log-logger_pid>` variable. You need to send it a signal to rotate logs."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:118
msgid "If ``log_nonblock`` equals true, Tarantool does not block during logging when the system is not ready for writing, and drops the message instead. If :ref:`log_level <cfg_logging-log_level>` is high, and many messages go to the log, setting ``log_nonblock`` to true may improve logging performance at the cost of some log messages getting lost."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:124
msgid "This parameter has effect only if the output is going to \"syslog:\" or \"pipe:\". Setting ``log_nonblock`` to true is illegal if the output is going to a file."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:129
msgid "The default ``log_nonblock`` value is nil, which means that blocking behavior corresponds to the type of logger. This is a behavior change: in earlier versions of the Tarantool server, the default value was true."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:135
msgid "Default: nil"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:142
msgid "If processing a request takes longer than the given value (in seconds), warn about it in the log. Has effect only if :ref:`log_level <cfg_logging-log_level>` is more than or equal to 4 (WARNING)."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:147
msgid "Default: 0.5"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:154
msgid "Log entries have two possible formats:"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:156
msgid "'plain' (the default), or"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:157
msgid "'json' (with more detail and with JSON labels)."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:159
msgid "Here is what a log entry looks like after ``box.cfg{log_format='plain'}``:"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:161
msgid "2017-10-16 11:36:01.508 [18081] main/101/interactive I> set 'log_format' configuration option to \"plain\""
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:165
msgid "Here is what a log entry looks like after ``box.cfg{log_format='json'}``:"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:167
msgid "{\"time\": \"2017-10-16T11:36:17.996-0600\",\n"
"\"level\": \"INFO\",\n"
"\"message\": \"set 'log_format' configuration option to \\\"json\\\"\",\n"
"\"pid\": 18081,|\n"
"\"cord_name\": \"main\",\n"
"\"fiber_id\": 101,\n"
"\"fiber_name\": \"interactive\",\n"
"\"file\": \"builtin\\/box\\/load_cfg.lua\",\n"
"\"line\": 317}"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:179
msgid "The ``log_format='plain'`` entry has time, process id, cord name, :ref:`fiber_id <fiber_object-id>`, :ref:`fiber_name <fiber_object-name_get>`, :ref:`log level <cfg_logging-log_level>`, and message."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:184
msgid "The ``log_format='json'`` entry has the same things along with their labels, and in addition has the file name and line number of the Tarantool source."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:187
msgid "Setting ``log_format`` to 'json' is illegal if the output is going to \"syslog:\"."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:190
msgid "Default: 'plain'"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:197
msgid "Logging example"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:199
msgid "This will illustrate how \"rotation\" works, that is, what happens when the server instance is writing to a log and signals are used when archiving it."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:202
msgid "Start with two terminal shells, Terminal #1 and Terminal #2."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:204
msgid "On Terminal #1: start an interactive Tarantool session, then say the logging will go to `Log_file`, then put a message \"Log Line #1\" in the log file:"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:207
msgid "box.cfg{log='Log_file'}\n"
"log = require('log')\n"
"log.info('Log Line #1')"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:213
msgid "On Terminal #2: use ``mv`` so the log file is now named `Log_file.bak`. The result of this is: the next log message will go to `Log_file.bak`."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:1673
msgid "mv Log_file Log_file.bak"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:221
msgid "On Terminal #1: put a message \"Log Line #2\" in the log file."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:223
msgid "log.info('Log Line #2')"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:227
msgid "On Terminal #2: use ``ps`` to find the process ID of the Tarantool instance."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:1686
msgid "ps -A | grep tarantool"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:234
msgid "On Terminal #2: use ``kill -HUP`` to send a SIGHUP signal to the Tarantool instance. The result of this is: Tarantool will open `Log_file` again, and the next log message will go to `Log_file`. (The same effect could be accomplished by executing log.rotate() on the instance.)"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:1696
msgid "kill -HUP *process_id*"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:244
msgid "On Terminal #1: put a message \"Log Line #3\" in the log file."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:246
msgid "log.info('Log Line #3')"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:250
msgid "On Terminal #2: use ``less`` to examine files. `Log_file.bak` will have these lines, except that the date and time will depend on when the example is done:"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:1710
msgid "2015-11-30 15:13:06.373 [27469] main/101/interactive I> Log Line #1`\n"
"2015-11-30 15:14:25.973 [27469] main/101/interactive I> Log Line #2`"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:259
msgid "and `Log_file` will have"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:1718
msgid "log file has been reopened\n"
"2015-11-30 15:15:32.629 [27469] main/101/interactive I> Log Line #3"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:269
msgid "Feedback"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:271
msgid ":ref:`feedback_enabled <cfg_logging-feedback_enabled>`"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:272
msgid ":ref:`feedback_host <cfg_logging-feedback_host>`"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:273
msgid ":ref:`feedback_interval <cfg_logging-feedback_interval>`"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:275
msgid "By default a Tarantool daemon sends a small packet once per hour, to https://feedback.tarantool.io. The packet contains three values from :ref:`box.info <box_introspection-box_info>`: ``box.info.version``, ``box.info.uuid``, and ``box.info.cluster_uuid``. By changing the feedback configuration parameters, users can adjust or turn off this feature."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:286
msgid "Whether to send feedback."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:288
msgid "If this is set to ``true``, feedback will be sent as described above. If this is set to ``false``, no feedback will be sent."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:299
msgid "The address to which the packet is sent. Usually the recipient is Tarantool, but it can be any URL."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:303
msgid "Default: 'https://feedback.tarantool.io'"
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:310
msgid "The number of seconds between sendings, usually 3600 (1 hour)."
msgstr ""

#: ../doc/reference/configuration/cfg_logging.rst:313
msgid "Default: 3600"
msgstr ""

#: ../doc/reference/configuration/index.rst:242
msgid "Deprecated parameters"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:3
msgid "These parameters are deprecated since Tarantool version 1.7.4:"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:5
msgid ":ref:`coredump <cfg_basic-coredump_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:6
msgid ":ref:`logger <cfg_logging-logger_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:7
msgid ":ref:`logger_nonblock <cfg_logging-logger_nonblock_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:8
msgid ":ref:`panic_on_snap_error <cfg_binary_logging_snapshots-panic_on_snap_error_deprecated>`,"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:9
msgid ":ref:`panic_on_wal_error <cfg_binary_logging_snapshots-panic_on_wal_error_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:10
msgid ":ref:`replication_source <cfg_replication-replication_source_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:11
msgid ":ref:`slab_alloc_arena <cfg_storage-slab_alloc_arena_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:12
msgid ":ref:`slab_alloc_factor <cfg_storage-slab_alloc_factor_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:13
msgid ":ref:`slab_alloc_maximal <cfg_storage-slab_alloc_maximal_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:14
msgid ":ref:`slab_alloc_minimal <cfg_storage-slab_alloc_minimal_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:15
msgid ":ref:`snap_dir <cfg_basic-snap_dir_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:16
msgid ":ref:`snapshot_count <cfg_checkpoint_daemon-snapshot_count_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:17
msgid ":ref:`snapshot_period <cfg_checkpoint_daemon-snapshot_period_deprecated>`"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:23
#: ../doc/reference/configuration/cfg_deprecated.rst:101
msgid "**Deprecated**, do not use."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:33
msgid "**Deprecated** in favor of :ref:`log <cfg_logging-log>`. The parameter was only renamed, while the type, values and semantics remained intact."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:41
msgid "**Deprecated** in favor of :ref:`log_nonblock <cfg_logging-log_nonblock>`. The parameter was only renamed, while the type, values and semantics remained intact."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:49
#: ../doc/reference/configuration/cfg_deprecated.rst:63
msgid "**Deprecated** in favor of :ref:`force_recovery <cfg_binary_logging_snapshots-force_recovery>`."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:52
msgid "If there is an error while reading a snapshot file (at server instance start), abort."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:74
msgid "**Deprecated** in favor of :ref:`replication <cfg_replication-replication>`. The parameter was only renamed, while the type, values and semantics remained intact."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:83
msgid "**Deprecated** in favor of :ref:`memtx_memory <cfg_storage-memtx_memory>`."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:86
msgid "How much memory Tarantool allocates to actually store tuples, **in gigabytes**. When the limit is reached, INSERT or UPDATE requests begin failing with error :errcode:`ER_MEMORY_ISSUE`. While the server does not go beyond the defined limit to allocate tuples, there is additional memory used to store indexes and connection information. Depending on actual configuration and workload, Tarantool can consume up to 20% more than the limit set here."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:94
msgid "Default: 1.0"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:103
msgid "The multiplier for computing the sizes of memory chunks that tuples are stored in. A lower value may result in less wasted memory depending on the total amount of memory available and the distribution of item sizes."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:109
msgid "Default: 1.1"
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:116
msgid "**Deprecated** in favor of :ref:`memtx_max_tuple_size <cfg_storage-memtx_max_tuple_size>`. The parameter was only renamed, while the type, values and semantics remained intact."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:125
msgid "**Deprecated** in favor of :ref:`memtx_min_tuple_size <cfg_storage-memtx_min_tuple_size>`. The parameter was only renamed, while the type, values and semantics remained intact."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:134
msgid "**Deprecated** in favor of :ref:`memtx_dir <cfg_basic-memtx_dir>`. The parameter was only renamed, while the type, values and semantics remained intact."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:142
msgid "**Deprecated** in favor of :ref:`checkpoint_interval <cfg_checkpoint_daemon-checkpoint_interval>`. The parameter was only renamed, while the type, values and semantics remained intact."
msgstr ""

#: ../doc/reference/configuration/cfg_deprecated.rst:151
msgid "**Deprecated** in favor of :ref:`checkpoint_count <cfg_checkpoint_daemon-checkpoint_count>`. The parameter was only renamed, while the type, values and semantics remained intact."
msgstr ""

