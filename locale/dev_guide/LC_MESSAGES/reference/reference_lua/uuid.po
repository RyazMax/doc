# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-03 19:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../doc/reference/reference_lua/uuid.rst:3
msgid "Module `uuid`"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:7
msgid "Overview"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:9
msgid ""
"A \"UUID\" is a `Universally unique identifier`_. If an application "
"requires that a value be unique only within a single computer or on a "
"single database, then a simple counter is better than a UUID, because "
"getting a UUID is time-consuming (it requires a syscall_). For clusters "
"of computers, or widely distributed applications, UUIDs are better."
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:17
msgid "Index"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:19
msgid "Below is list of all ``uuid`` functions and members."
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:27
msgid "Name"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:27
msgid "Use"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:29
msgid ":ref:`uuid.nil <uuid-nil>`"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:29
#: ../doc/reference/reference_lua/uuid.rst:54
msgid "A nil object"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:31
msgid ""
":ref:`uuid() <uuid-__call>` |br| :ref:`uuid.bin() <uuid-bin>` |br| "
":ref:`uuid.str() <uuid-str>`"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:32
msgid "Get a UUID"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:35
msgid ""
":ref:`uuid.fromstr() <uuid-fromstr>` |br| :ref:`uuid.frombin() <uuid-"
"frombin>` |br| :ref:`uuid_object:bin() <uuid-object_bin>` |br| "
":ref:`uuid_object:str() <uuid-object_str>`"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:38
msgid "Get a converted UUID"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:44
msgid ":ref:`uuid_object:isnil() <uuid-isnil>`"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:44
msgid "Check if a UUID is an all-zero value"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst
msgid "return"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:60
#: ../doc/reference/reference_lua/uuid.rst:67
#: ../doc/reference/reference_lua/uuid.rst:74
msgid "a UUID"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst
msgid "rtype"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:61
#: ../doc/reference/reference_lua/uuid.rst:83
#: ../doc/reference/reference_lua/uuid.rst:91
msgid "cdata"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:68
msgid "16-byte string"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:75
msgid "36-byte binary string"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst
msgid "Parameters"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:81
msgid "UUID in 36-byte hexadecimal string"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:82
#: ../doc/reference/reference_lua/uuid.rst:90
msgid "converted UUID"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:89
msgid "UUID in 16-byte binary string"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:99
msgid "``byte-order`` can be one of next flags:"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:101
msgid "'l' - little-endian,"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:102
msgid "'b' - big-endian,"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:103
msgid "'h' - endianness depends on host (default),"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:104
msgid "'n' - endianness depends on network"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:106
msgid "one of ``'l'``, ``'b'``, ``'h'`` or ``'n'``."
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:108
#: ../doc/reference/reference_lua/uuid.rst:115
msgid "UUID converted from cdata input value."
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:109
msgid "16-byte binary string"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:116
msgid "36-byte hexadecimal string"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:122
msgid ""
"The all-zero UUID value can be expressed as uuid.NULL, or as "
"``uuid.fromstr('00000000-0000-0000-0000-000000000000')``. The comparison "
"with an all-zero value can also be expressed as ``uuid_with_type_cdata =="
" uuid.NULL``."
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:127
msgid "true if the value is all zero, otherwise false."
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:128
msgid "bool"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:132
msgid "Example"
msgstr ""

#: ../doc/reference/reference_lua/uuid.rst:134
msgid ""
"tarantool> uuid = require('uuid')\n"
"---\n"
"...\n"
"tarantool> uuid(), uuid.bin(), uuid.str()\n"
"---\n"
"- 16ffedc8-cbae-4f93-a05e-349f3ab70baa\n"
"- !!binary FvG+Vy1MfUC6kIyeM81DYw==\n"
"- 67c999d2-5dce-4e58-be16-ac1bcb93160f\n"
"...\n"
"tarantool> uu = uuid()\n"
"---\n"
"...\n"
"tarantool> #uu:bin(), #uu:str(), type(uu), uu:isnil()\n"
"---\n"
"- 16\n"
"- 36\n"
"- cdata\n"
"- false\n"
"..."
msgstr ""

