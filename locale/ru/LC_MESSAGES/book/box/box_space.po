# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-03 19:29+0000\n"
"PO-Revision-Date: 2019-12-20 21:24+0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"Generated-By: Babel 2.7.0\n"

#: ../doc/book/box/box_space.rst:5
msgid "Submodule `box.space`"
msgstr "Вложенный модуль `box.space`"

#: ../doc/book/box/box_space.rst:9
msgid "Overview"
msgstr "Общие сведения"

#: ../doc/book/box/box_space.rst:11
#, fuzzy
msgid ""
"The ``box.space`` submodule has the data-manipulation functions ``select``, "
"``insert``, ``replace``, ``update``, ``upsert``, ``delete``, ``get``, "
"``put``. It also has members, such as id, and whether or not a space is "
"enabled. Submodule source code is available in file `src/box/lua/schema.lua "
"<https://github.com/tarantool/tarantool/blob/2.1/src/box/lua/schema.lua>`_."
msgstr ""
"Вложенный модуль ``box.space`` включает в себя функции по управлению данными "
"``select`` (выборка), ``insert`` (вставка), ``replace`` (замена), ``update`` "
"(обновление), ``upsert`` (обновление и вставка), ``delete`` (удаление), "
"``get`` (получение), ``put`` (выдача). Также в модуле есть такие элементы, "
"как id, и указание на активность спейса. Код вложенного модуля находится в "
"файле `src/box/lua/schema.lua <https://github.com/tarantool/tarantool/"
"blob/1.7/src/box/lua/schema.lua>`_."

#: ../doc/book/box/box_space.rst:19
msgid "Index"
msgstr "Индекс"

#: ../doc/book/box/box_space.rst:21
msgid "Below is a list of all ``box.space`` functions and members."
msgstr "Ниже приведен перечень всех функций и элементов модуля ``box.space``."

#: ../doc/book/box/box_space.rst:29 ../doc/book/box/box_space.rst:295
#: ../doc/book/box/box_space.rst:2294
msgid "Name"
msgstr "Имя"

#: ../doc/book/box/box_space.rst:29
msgid "Use"
msgstr "Использование"

#: ../doc/book/box/box_space.rst:31
msgid ":ref:`space_object:auto_increment() <box_space-auto_increment>`"
msgstr ":ref:`space_object:auto_increment() <box_space-auto_increment>`"

#: ../doc/book/box/box_space.rst:31
msgid "Generate key + Insert a tuple"
msgstr "Генерация ключа + вставка кортежа"

#: ../doc/book/box/box_space.rst:34
msgid ":ref:`space_object:bsize() <box_space-bsize>`"
msgstr ":ref:`space_object:bsize() <box_space-bsize>`"

#: ../doc/book/box/box_space.rst:34
msgid "Get count of bytes"
msgstr "Подсчет байтов"

#: ../doc/book/box/box_space.rst:37
msgid ":ref:`space_object:count() <box_space-count>`"
msgstr ":ref:`space_object:count() <box_space-count>`"

#: ../doc/book/box/box_space.rst:37 ../doc/book/box/box_space.rst:61
msgid "Get count of tuples"
msgstr "Подсчет кортежей"

#: ../doc/book/box/box_space.rst:40
msgid ":ref:`space_object:create_index() <box_space-create_index>`"
msgstr ":ref:`space_object:create_index() <box_space-create_index>`"

#: ../doc/book/box/box_space.rst:40
msgid "Create an index"
msgstr "Создание индекса"

#: ../doc/book/box/box_space.rst:43
msgid ":ref:`space_object:delete() <box_space-delete>`"
msgstr ":ref:`space_object:delete() <box_space-delete>`"

#: ../doc/book/box/box_space.rst:43
msgid "Delete a tuple"
msgstr "Удаление кортежа"

#: ../doc/book/box/box_space.rst:46
msgid ":ref:`space_object:drop() <box_space-drop>`"
msgstr ":ref:`space_object:drop() <box_space-drop>`"

#: ../doc/book/box/box_space.rst:46
msgid "Destroy a space"
msgstr "Удаление спейса"

#: ../doc/book/box/box_space.rst:49
msgid ":ref:`space_object:format() <box_space-format>`"
msgstr ":ref:`space_object:format() <box_space-format>`"

#: ../doc/book/box/box_space.rst:49
msgid "Declare field names and types"
msgstr "Объявление имен и типов полей"

#: ../doc/book/box/box_space.rst:52
msgid ":ref:`space_object:frommap() <box_space-frommap>`"
msgstr ":ref:`space_object:frommap() <box_space-frommap>`"

#: ../doc/book/box/box_space.rst:52
msgid "Convert from map to tuple or table"
msgstr "Конвертация ассоциативного массива в кортеж или таблицу"

#: ../doc/book/box/box_space.rst:55
msgid ":ref:`space_object:get() <box_space-get>`"
msgstr ":ref:`space_object:get() <box_space-get>`"

#: ../doc/book/box/box_space.rst:55
msgid "Select a tuple"
msgstr "Выбор кортежа"

#: ../doc/book/box/box_space.rst:58
msgid ":ref:`space_object:insert() <box_space-insert>`"
msgstr ":ref:`space_object:insert() <box_space-insert>`"

#: ../doc/book/box/box_space.rst:58
msgid "Insert a tuple"
msgstr "Вставка кортежа"

#: ../doc/book/box/box_space.rst:61
msgid ":ref:`space_object:len() <box_space-len>`"
msgstr ":ref:`space_object:len() <box_space-len>`"

#: ../doc/book/box/box_space.rst:64
msgid ":ref:`space_object:on_replace() <box_space-on_replace>`"
msgstr ":ref:`space_object:on_replace() <box_space-on_replace>`"

#: ../doc/book/box/box_space.rst:64
msgid "Create a replace trigger with a function that cannot change the tuple"
msgstr "Создание триггера замены с функцией, которая не может изменять кортеж"

#: ../doc/book/box/box_space.rst:68
msgid ":ref:`space_object:before_replace() <box_space-before_replace>`"
msgstr ":ref:`space_object:before_replace() <box_space-before_replace>`"

#: ../doc/book/box/box_space.rst:68
msgid "Create a replace trigger with a function that can change the tuple"
msgstr "Создание триггера замены с функцией, которая может изменять кортеж"

#: ../doc/book/box/box_space.rst:72
msgid ":ref:`space_object:pairs() <box_space-pairs>`"
msgstr ":ref:`space_object:pairs() <box_space-pairs>`"

#: ../doc/book/box/box_space.rst:72
msgid "Prepare for iterating"
msgstr "Подготовка к итерации"

#: ../doc/book/box/box_space.rst:75
msgid ":ref:`space_object:put() <box_space-replace>`"
msgstr ":ref:`space_object:put() <box_space-replace>`"

#: ../doc/book/box/box_space.rst:75 ../doc/book/box/box_space.rst:81
msgid "Insert or replace a tuple"
msgstr "Вставка или замена кортежа"

#: ../doc/book/box/box_space.rst:78
msgid ":ref:`space_object:rename() <box_space-rename>`"
msgstr ":ref:`space_object:rename() <box_space-rename>`"

#: ../doc/book/box/box_space.rst:78
msgid "Rename a space"
msgstr "Переименование спейса"

#: ../doc/book/box/box_space.rst:81
msgid ":ref:`space_object:replace() <box_space-replace>`"
msgstr ":ref:`space_object:replace() <box_space-replace>`"

#: ../doc/book/box/box_space.rst:84
msgid ":ref:`space_object:run_triggers() <box_space-run_triggers>`"
msgstr ":ref:`space_object:run_triggers() <box_space-run_triggers>`"

#: ../doc/book/box/box_space.rst:84
msgid "Enable/disable a replace trigger"
msgstr "Включение/отключение триггера замены"

#: ../doc/book/box/box_space.rst:87
msgid ":ref:`space_object:select() <box_space-select>`"
msgstr ":ref:`space_object:select() <box_space-select>`"

#: ../doc/book/box/box_space.rst:87
msgid "Select one or more tuples"
msgstr "Выбор одного или более кортежей"

#: ../doc/book/box/box_space.rst:90
msgid ":ref:`space_object:truncate() <box_space-truncate>`"
msgstr ":ref:`space_object:truncate() <box_space-truncate>`"

#: ../doc/book/box/box_space.rst:90
msgid "Delete all tuples"
msgstr "Удаление всех кортежей"

#: ../doc/book/box/box_space.rst:93
msgid ":ref:`space_object:update() <box_space-update>`"
msgstr ":ref:`space_object:update() <box_space-update>`"

#: ../doc/book/box/box_space.rst:93 ../doc/book/box/box_space.rst:96
msgid "Update a tuple"
msgstr "Обновление кортежа"

#: ../doc/book/box/box_space.rst:96
msgid ":ref:`space_object:upsert() <box_space-upsert>`"
msgstr ":ref:`space_object:upsert() <box_space-upsert>`"

#: ../doc/book/box/box_space.rst:99
msgid ":ref:`space_object:user_defined() <box_space-user_defined>`"
msgstr ":ref:`space_object:user_defined() <box_space-user_defined>`"

#: ../doc/book/box/box_space.rst:99
msgid "Any function / method that any user wants to add"
msgstr "Любая функция / метод, которые хочет добавить любой пользователь"

#: ../doc/book/box/box_space.rst:102
#, fuzzy
msgid ""
":ref:`space_object:create_check_constraint() <box_space-"
"create_check_constraint>`"
msgstr ":ref:`space_object:create_index() <box_space-create_index>`"

#: ../doc/book/box/box_space.rst:102
msgid "Create a check constraint"
msgstr ""

#: ../doc/book/box/box_space.rst:105
msgid ":ref:`space_object.enabled <box_space-enabled>`"
msgstr ":ref:`space_object.enabled <box_space-enabled>`"

#: ../doc/book/box/box_space.rst:105
msgid "Flag, true if space is enabled"
msgstr "Флаг, если спейс активен -- true"

#: ../doc/book/box/box_space.rst:108
msgid ":ref:`space_object.field_count <box_space-field_count>`"
msgstr ":ref:`space_object.field_count <box_space-field_count>`"

#: ../doc/book/box/box_space.rst:108
msgid "Required number of fields"
msgstr "Необходимое количество полей"

#: ../doc/book/box/box_space.rst:111
msgid ":ref:`space_object.id <box_space-id>`"
msgstr ":ref:`space_object.id <box_space-id>`"

#: ../doc/book/box/box_space.rst:111
msgid "Numeric identifier of space"
msgstr "Числовой идентификатор спейса"

#: ../doc/book/box/box_space.rst:114
msgid ":ref:`space_object.index <box_space-space_index>`"
msgstr ":ref:`space_object.index <box_space-space_index>`"

#: ../doc/book/box/box_space.rst:114
msgid "Container of space's indexes"
msgstr "Контейнер для индексов спейса"

#: ../doc/book/box/box_space.rst:117
msgid ":ref:`box.space._cluster <box_space-cluster>`"
msgstr ":ref:`box.space._cluster <box_space-cluster>`"

#: ../doc/book/box/box_space.rst:117
msgid "(Metadata) List of replica sets"
msgstr "(Метаданные) Список наборов реплик"

#: ../doc/book/box/box_space.rst:120
msgid ":ref:`box.space._func <box_space-func>`"
msgstr ":ref:`box.space._func <box_space-func>`"

#: ../doc/book/box/box_space.rst:120
msgid "(Metadata) List of function tuples"
msgstr "(Метаданные) Список кортежей с функциями"

#: ../doc/book/box/box_space.rst:123
msgid ":ref:`box.space._index <box_space-index>`"
msgstr ":ref:`box.space._index <box_space-index>`"

#: ../doc/book/box/box_space.rst:123
msgid "(Metadata) List of indexes"
msgstr "(Метаданные) Список индексов"

#: ../doc/book/box/box_space.rst:126
msgid ":ref:`box.space._vindex <box_space-vindex>`"
msgstr ":ref:`box.space._vindex <box_space-vindex>`"

#: ../doc/book/box/box_space.rst:126
msgid "(Metadata) List of indexes accessible for the current user"
msgstr "(Метаданные) Список индексов, доступных текущему пользователю"

#: ../doc/book/box/box_space.rst:129
msgid ":ref:`box.space._priv <box_space-priv>`"
msgstr ":ref:`box.space._priv <box_space-priv>`"

#: ../doc/book/box/box_space.rst:129
msgid "(Metadata) List of privileges"
msgstr "(Метаданные) Список прав"

#: ../doc/book/box/box_space.rst:132
msgid ":ref:`box.space._vpriv <box_space-vpriv>`"
msgstr ":ref:`box.space._vpriv <box_space-vpriv>`"

#: ../doc/book/box/box_space.rst:132
msgid "(Metadata) List of privileges accessible for the current user"
msgstr "(Метаданные) Список прав, доступных текущему пользователю"

#: ../doc/book/box/box_space.rst:135
msgid ":ref:`box.space._schema <box_space-schema>`"
msgstr ":ref:`box.space._schema <box_space-schema>`"

#: ../doc/book/box/box_space.rst:135
msgid "(Metadata) List of schemas"
msgstr "(Метаданные) Список схем"

#: ../doc/book/box/box_space.rst:138
msgid ":ref:`box.space._sequence <box_space-sequence>`"
msgstr ":ref:`box.space._sequence <box_space-sequence>`"

#: ../doc/book/box/box_space.rst:138 ../doc/book/box/box_space.rst:141
msgid "(Metadata) List of sequences"
msgstr "(Метаданные) Список последовательностей"

#: ../doc/book/box/box_space.rst:141
msgid ":ref:`box.space._sequence_data <box_space-sequence_data>`"
msgstr ":ref:`box.space._sequence_data <box_space-sequence_data>`"

#: ../doc/book/box/box_space.rst:144
msgid ":ref:`box.space._space <box_space-space>`"
msgstr ":ref:`box.space._space <box_space-space>`"

#: ../doc/book/box/box_space.rst:144
msgid "(Metadata) List of spaces"
msgstr "(Метаданные) Список спейсов"

#: ../doc/book/box/box_space.rst:147
msgid ":ref:`box.space._vspace <box_space-vspace>`"
msgstr ":ref:`box.space._vspace <box_space-vspace>`"

#: ../doc/book/box/box_space.rst:147
msgid "(Metadata) List of spaces accessible for the current user"
msgstr "(Метаданные) Список спейсов, доступных текущему пользователю"

#: ../doc/book/box/box_space.rst:150
msgid ":ref:`box.space._user <box_space-user>`"
msgstr ":ref:`box.space._user <box_space-user>`"

#: ../doc/book/box/box_space.rst:150
msgid "(Metadata) List of users"
msgstr "(Метаданные) Список пользователей"

#: ../doc/book/box/box_space.rst:153
#, fuzzy
msgid ":ref:`box.space._ck_constraint <box_space-ck_constraint>`"
msgstr ":ref:`box.space._cluster <box_space-cluster>`"

#: ../doc/book/box/box_space.rst:153
#, fuzzy
msgid "(Metadata) List of check constraints"
msgstr "(Метаданные) Список схем"

#: ../doc/book/box/box_space.rst:156
msgid ":ref:`box.space._vuser <box_space-vuser>`"
msgstr ":ref:`box.space._vuser <box_space-vuser>`"

#: ../doc/book/box/box_space.rst:156
msgid "(Metadata) List of users accessible for the current user"
msgstr "(Метаданные) Список пользователей, доступных текущему пользователю"

#: ../doc/book/box/box_space.rst:159
#, fuzzy
msgid ":ref:`box.space._collation <box_space-collation>`"
msgstr ":ref:`box.space._cluster <box_space-cluster>`"

#: ../doc/book/box/box_space.rst:159
#, fuzzy
msgid "(Metadata) List of collations"
msgstr "(Метаданные) Список кортежей с функциями"

#: ../doc/book/box/box_space.rst:162
#, fuzzy
msgid ":ref:`box.space._vcollation <box_space-vcollation>`"
msgstr ":ref:`box.space._vindex <box_space-vindex>`"

#: ../doc/book/box/box_space.rst:162
#, fuzzy
msgid "(Metadata) List of collations accessible for the current user"
msgstr "(Метаданные) Список индексов, доступных текущему пользователю"

#: ../doc/book/box/box_space.rst:175
msgid ""
"Insert a new tuple using an auto-increment primary key. The space specified "
"by space_object must have an :ref:`'unsigned' or 'integer' or 'number' "
"<index-box_indexed-field-types>` primary key index of type ``TREE``. The "
"primary-key field will be incremented before the insert."
msgstr ""
"Вставка нового кортежа, используя первичный ключ с автоматическим "
"увеличением. В спейсе, указанном через space_object должен быть первичный "
"TREE-индекс типа :ref:`'unsigned' или 'integer', или 'number' <index-"
"box_indexed-field-types>`. Поле первичного ключа будет увеличиваться перед "
"вставкой."

#: ../doc/book/box/box_space.rst:181
msgid ""
"Since version 1.7.5 this method is deprecated – it is better to use a :ref:"
"`sequence <index-box_sequence>`."
msgstr ""
"Данный метод объявлен устаревшим с версии 1.7.5 -- лучше использовать :ref:"
"`последовательности <index-box_sequence>`."

#: ../doc/book/box/box_space.rst:0
msgid "Parameters"
msgstr "Параметры"

#: ../doc/book/box/box_space.rst:184 ../doc/book/box/box_space.rst:217
#: ../doc/book/box/box_space.rst:244 ../doc/book/box/box_space.rst:271
#: ../doc/book/box/box_space.rst:706 ../doc/book/box/box_space.rst:746
#: ../doc/book/box/box_space.rst:768 ../doc/book/box/box_space.rst:920
#: ../doc/book/box/box_space.rst:963 ../doc/book/box/box_space.rst:1016
#: ../doc/book/box/box_space.rst:1048 ../doc/book/box/box_space.rst:1250
#: ../doc/book/box/box_space.rst:1312 ../doc/book/box/box_space.rst:1342
#: ../doc/book/box/box_space.rst:1398 ../doc/book/box/box_space.rst:1500
#: ../doc/book/box/box_space.rst:1561 ../doc/book/box/box_space.rst:1682
#: ../doc/book/box/box_space.rst:1765
msgid "an :ref:`object reference <app_server-object_reference>`"
msgstr ":ref:`ссылка на объект <app_server-object_reference>`"

#: ../doc/book/box/box_space.rst:186
msgid "tuple's fields, other than the primary-key field"
msgstr "поля кортежа, не включая поле первичного ключа"

#: ../doc/book/box/box_space.rst:0
msgid "return"
msgstr "возвращается"

#: ../doc/book/box/box_space.rst:189 ../doc/book/box/box_space.rst:1346
msgid "the inserted tuple."
msgstr "вставленный кортеж."

#: ../doc/book/box/box_space.rst:0
msgid "rtype"
msgstr "тип возвращаемого значения"

#: ../doc/book/box/box_space.rst:190 ../doc/book/box/box_space.rst:712
#: ../doc/book/box/box_space.rst:969 ../doc/book/box/box_space.rst:1021
#: ../doc/book/box/box_space.rst:1347 ../doc/book/box/box_space.rst:1573
msgid "tuple"
msgstr "кортеж"

#: ../doc/book/box/box_space.rst:192
msgid ""
"**Complexity factors:** Index size, Index type, Number of indexes accessed, :"
"ref:`WAL settings <cfg_binary_logging_snapshots-rows_per_wal>`."
msgstr ""
"**Факторы сложности** Размер индекса, тип индекса, количество кортежей, к "
"которым получен доступ, :ref:`настройки журнала упреждающей записи (WAL) "
"<cfg_binary_logging_snapshots-rows_per_wal>`."

#: ../doc/book/box/box_space.rst:195 ../doc/book/box/box_space.rst:359
#: ../doc/book/box/box_space.rst:774 ../doc/book/box/box_space.rst:1261
#: ../doc/book/box/box_space.rst:1420 ../doc/book/box/box_space.rst:1695
msgid "**Possible errors:**"
msgstr "**Возможные ошибки:**"

#: ../doc/book/box/box_space.rst:197
msgid "index has wrong type;"
msgstr "неподходящий тип индекса;"

#: ../doc/book/box/box_space.rst:198
msgid "primary-key indexed field is not a number."
msgstr "проиндексированное поле первичного ключа не является числовым."

#: ../doc/book/box/box_space.rst:200 ../doc/book/box/box_space.rst:226
#: ../doc/book/box/box_space.rst:252 ../doc/book/box/box_space.rst:613
#: ../doc/book/box/box_space.rst:670 ../doc/book/box/box_space.rst:719
#: ../doc/book/box/box_space.rst:756 ../doc/book/box/box_space.rst:831
#: ../doc/book/box/box_space.rst:933 ../doc/book/box/box_space.rst:982
#: ../doc/book/box/box_space.rst:1026 ../doc/book/box/box_space.rst:1053
#: ../doc/book/box/box_space.rst:1229 ../doc/book/box/box_space.rst:1277
#: ../doc/book/box/box_space.rst:1320 ../doc/book/box/box_space.rst:1356
#: ../doc/book/box/box_space.rst:1377 ../doc/book/box/box_space.rst:1427
#: ../doc/book/box/box_space.rst:1515 ../doc/book/box/box_space.rst:1592
#: ../doc/book/box/box_space.rst:1704 ../doc/book/box/box_space.rst:1740
#: ../doc/book/box/box_space.rst:1792 ../doc/book/box/box_space.rst:1840
#: ../doc/book/box/box_space.rst:1858 ../doc/book/box/box_space.rst:1879
#: ../doc/book/box/box_space.rst:1949 ../doc/book/box/box_space.rst:2109
#: ../doc/book/box/box_space.rst:2388 ../doc/book/box/box_space.rst:2420
msgid "**Example:**"
msgstr "**Пример:**"

#: ../doc/book/box/box_space.rst:202
msgid ""
"tarantool> box.space.tester:auto_increment{'Fld#1', 'Fld#2'}\n"
"---\n"
"- [1, 'Fld#1', 'Fld#2']\n"
"...\n"
"tarantool> box.space.tester:auto_increment{'Fld#3'}\n"
"---\n"
"- [2, 'Fld#3']\n"
"..."
msgstr ""
"tarantool> box.space.tester:auto_increment{'Fld#1', 'Fld#2'}\n"
"---\n"
"- [1, 'Fld#1', 'Fld#2']\n"
"...\n"
"tarantool> box.space.tester:auto_increment{'Fld#3'}\n"
"---\n"
"- [2, 'Fld#3']\n"
"..."

#: ../doc/book/box/box_space.rst:220
msgid ""
"Number of bytes in the space. This number, which is stored in Tarantool's "
"internal memory, represents the total number of bytes in all tuples, not "
"including index keys. For a measure of index size, see :ref:`index_object:"
"bsize() <box_index-bsize>`."
msgstr ""
"Количество байтов в спейсе. Это число, которое хранится во внутренней памяти "
"Tarantool'а, представляет собой общее количество байтов во всех кортежах, "
"включая ключи индекса. Для получения информации об измерении размера "
"индекса, см. :ref:`index_object:bsize() <box_index-bsize>`."

#: ../doc/book/box/box_space.rst:228
msgid ""
"tarantool> box.space.tester:bsize()\n"
"---\n"
"- 22\n"
"..."
msgstr ""
"tarantool> box.space.tester:bsize()\n"
"---\n"
"- 22\n"
"..."

#: ../doc/book/box/box_space.rst:239
msgid ""
"Return the number of tuples. If compared with :ref:`len() <box_space-len>`, "
"this method works slower because ``count()`` scans the entire space to count "
"the tuples."
msgstr ""
"Возврат количества кортежей. Если сравнивать с :ref:`len() <box_space-len>`, "
"то данный метод работает медленнее, поскольку метод ``count()`` сканирует "
"весь спейс для подсчета кортежей."

#: ../doc/book/box/box_space.rst:246 ../doc/book/box/box_space.rst:708
#: ../doc/book/box/box_space.rst:1563
msgid ""
"primary-key field values, must be passed as a Lua table if key is multi-part"
msgstr ""
"значения поля первичного ключа, которые должны возвращаться в виде Lua-"
"таблицы, если ключ составной"

#: ../doc/book/box/box_space.rst:248
msgid "comparison method"
msgstr "метод сопоставления"

#: ../doc/book/box/box_space.rst:250
msgid "Number of tuples."
msgstr "Количество кортежей."

#: ../doc/book/box/box_space.rst:254
msgid ""
"tarantool> box.space.tester:count(2, {iterator='GE'})\n"
"---\n"
"- 1\n"
"..."
msgstr ""
"tarantool> box.space.tester:count(2, {iterator='GE'})\n"
"---\n"
"- 1\n"
"..."

#: ../doc/book/box/box_space.rst:265
msgid ""
"Create an :ref:`index <index-box_index>`. It is mandatory to create an index "
"for a space before trying to insert tuples into it, or select tuples from "
"it. The first created index, which will be used as the primary-key index, "
"must be unique."
msgstr ""
"Создание :ref:`индекса <index-box_index>`. Индекс обязательно должен "
"создаваться для спейса до вставки в него кортежей или выборки. Первый "
"созданный индекс, который будет использоваться в качестве первичного "
"индекса, должен быть уникальным."

#: ../doc/book/box/box_space.rst:273
msgid ""
"name of index, which should conform to the :ref:`rules for object names "
"<app_server-names>`"
msgstr ""
"имя индекса, которое должно соответствовать :ref:`правилам именования "
"объектов <app_server-names>`"

#: ../doc/book/box/box_space.rst:275
msgid "see \"Options for space_object:create_index()\", below"
msgstr "см. \"Параметры для space_object:create_index()\" ниже"

#: ../doc/book/box/box_space.rst:278
msgid "index object"
msgstr "объект индекса"

#: ../doc/book/box/box_space.rst:279
msgid "index_object"
msgstr "объект индекса"

#: ../doc/book/box/box_space.rst:283
msgid "**Options for space_object:create_index()**"
msgstr "**Параметры для space_object:create_index()**"

#: ../doc/book/box/box_space.rst:295
msgid "Effect"
msgstr "Эффект"

#: ../doc/book/box/box_space.rst:295 ../doc/book/box/box_space.rst:2294
msgid "Type"
msgstr "Type"

#: ../doc/book/box/box_space.rst:295
msgid "Default"
msgstr "Значение по умолчанию"

#: ../doc/book/box/box_space.rst:297
msgid "type"
msgstr "type"

#: ../doc/book/box/box_space.rst:297
msgid "type of index"
msgstr "тип индекса"

#: ../doc/book/box/box_space.rst:297
msgid ""
"string ('HASH' or 'TREE' or 'BITSET' or 'RTREE') Note re storage engine: "
"vinyl only supports 'TREE'"
msgstr ""
"строка ('HASH' или 'TREE', или 'BITSET', или 'RTREE') Примечание про движок "
"базы данных: vinyl поддерживает только 'TREE'"

#: ../doc/book/box/box_space.rst:297
msgid "'TREE'"
msgstr "'TREE'"

#: ../doc/book/box/box_space.rst:303
msgid "id"
msgstr "id"

#: ../doc/book/box/box_space.rst:303
msgid "unique identifier"
msgstr "уникальный идентификатор"

#: ../doc/book/box/box_space.rst:303 ../doc/book/box/box_space.rst:317
#: ../doc/book/box/box_space.rst:322 ../doc/book/box/box_space.rst:324
#: ../doc/book/box/box_space.rst:326 ../doc/book/box/box_space.rst:328
#: ../doc/book/box/box_space.rst:330
msgid "number"
msgstr "число"

#: ../doc/book/box/box_space.rst:303
msgid "last index's id, +1"
msgstr "идентификатор последнего индекса +1"

#: ../doc/book/box/box_space.rst:305
msgid "unique"
msgstr "unique"

#: ../doc/book/box/box_space.rst:305
msgid "index is unique"
msgstr "индекс уникален"

#: ../doc/book/box/box_space.rst:305 ../doc/book/box/box_space.rst:307
msgid "boolean"
msgstr "boolean (логический)"

#: ../doc/book/box/box_space.rst:305
msgid "``true``"
msgstr "``true`` (правда)"

#: ../doc/book/box/box_space.rst:307
msgid "if_not_exists"
msgstr "if_not_exists (если отсутствует)"

#: ../doc/book/box/box_space.rst:307
msgid "no error if duplicate name"
msgstr "ошибки нет, если имя дублируется"

#: ../doc/book/box/box_space.rst:307
msgid "``false``"
msgstr "``false`` (ложь)"

#: ../doc/book/box/box_space.rst:309
msgid "parts"
msgstr "parts"

#: ../doc/book/box/box_space.rst:309
msgid "field-numbers  + types"
msgstr "номера поля + типы"

#: ../doc/book/box/box_space.rst:309
#, fuzzy
msgid ""
"{field_no, ``'unsigned'`` or ``'string'`` or ``'integer'`` or ``'number'`` "
"or ``'boolean'`` or ``'varbinary'`` or ``'array'`` or ``'scalar'``, and "
"optional collation or is_nullable value or path}"
msgstr ""
"{field_no, 'unsigned' или 'string', или 'integer', или 'number', или "
"'boolean', или 'array', или 'scalar', возможна сортировка, возможно значение "
"is_nullable}"

#: ../doc/book/box/box_space.rst:309
#, fuzzy
msgid "``{field = 1, type = 'unsigned'}``"
msgstr "``{1, 'unsigned'}``"

#: ../doc/book/box/box_space.rst:317
msgid "dimension"
msgstr "dimension"

#: ../doc/book/box/box_space.rst:317
msgid "affects :ref:`RTREE <box_index-rtree>` only"
msgstr "только для :ref:`RTREE <box_index-rtree>`"

#: ../doc/book/box/box_space.rst:317 ../doc/book/box/box_space.rst:2304
msgid "2"
msgstr "2"

#: ../doc/book/box/box_space.rst:319
msgid "distance"
msgstr "distance"

#: ../doc/book/box/box_space.rst:319
msgid "affects RTREE only"
msgstr "только для RTREE"

#: ../doc/book/box/box_space.rst:319
msgid "string ('euclid' or 'manhattan')"
msgstr "строка ('euclid' или 'manhattan')"

#: ../doc/book/box/box_space.rst:319
msgid "'euclid'"
msgstr "'euclid' (Евклидова)"

#: ../doc/book/box/box_space.rst:322
msgid "bloom_fpr"
msgstr "bloom_fpr"

#: ../doc/book/box/box_space.rst:322 ../doc/book/box/box_space.rst:324
#: ../doc/book/box/box_space.rst:326 ../doc/book/box/box_space.rst:328
#: ../doc/book/box/box_space.rst:330
msgid "affects vinyl only"
msgstr "только для vinyl"

#: ../doc/book/box/box_space.rst:322
msgid "``vinyl_bloom_fpr``"
msgstr "``vinyl_bloom_fpr``"

#: ../doc/book/box/box_space.rst:324
msgid "page_size"
msgstr "page_size"

#: ../doc/book/box/box_space.rst:324
msgid "``vinyl_page_size``"
msgstr "``vinyl_page_size``"

#: ../doc/book/box/box_space.rst:326
msgid "range_size"
msgstr "range_size"

#: ../doc/book/box/box_space.rst:326
msgid "``vinyl_range_size``"
msgstr "``vinyl_range_size``"

#: ../doc/book/box/box_space.rst:328
msgid "run_count_per_level"
msgstr "run_count_per_level"

#: ../doc/book/box/box_space.rst:328
msgid "``vinyl_run_count_per_level``"
msgstr "``vinyl_run_count_per_level``"

#: ../doc/book/box/box_space.rst:330
msgid "run_size_ratio"
msgstr "run_size_ratio"

#: ../doc/book/box/box_space.rst:330
msgid "``vinyl_run_size_ratio``"
msgstr "``vinyl_run_size_ratio``"

#: ../doc/book/box/box_space.rst:332
msgid "sequence"
msgstr "sequence"

#: ../doc/book/box/box_space.rst:332
msgid ""
"see section regarding :ref:`specifying a sequence in create_index() "
"<box_schema-sequence_create_index>`"
msgstr ""
"см. раздел об :ref:`указании последовательности для create_index() "
"<box_schema-sequence_create_index>`"

#: ../doc/book/box/box_space.rst:332
msgid "string or number"
msgstr "строка или число"

#: ../doc/book/box/box_space.rst:332 ../doc/book/box/box_space.rst:336
msgid "not present"
msgstr "отсутствует"

#: ../doc/book/box/box_space.rst:336
msgid "func"
msgstr ""

#: ../doc/book/box/box_space.rst:336
#, fuzzy
msgid ":ref:`functional index <box_space-index_func>`"
msgstr ":ref:`box.space._index <box_space-index>`"

#: ../doc/book/box/box_space.rst:336
msgid "string"
msgstr "string (строка)"

#: ../doc/book/box/box_space.rst:339
msgid ""
"The options in the above chart are also applicable for :ref:`index_object:"
"alter() <box_index-alter>`."
msgstr ""
"Параметры в вышеуказанной таблице также применимы к :ref:`index_object:"
"alter() <box_index-alter>`."

#: ../doc/book/box/box_space.rst:342
msgid ""
"**Note re storage engine:** vinyl has extra options which by default are "
"based on configuration parameters :ref:`vinyl_bloom_fpr <cfg_storage-"
"vinyl_bloom_fpr>`, :ref:`vinyl_page_size <cfg_storage-vinyl_page_size>`, :"
"ref:`vinyl_range_size <cfg_storage-vinyl_range_size>`, :ref:"
"`vinyl_run_count_per_level <cfg_storage-vinyl_run_count_per_level>`, and :"
"ref:`vinyl_run_size_ratio <cfg_storage-vinyl_run_size_ratio>` -- see the "
"description of those parameters. The current values can be seen by selecting "
"from :ref:`box.space._index <box_space-index>`."
msgstr ""
"**Примечание про движок базы данных:** в vinyl'е есть дополнительные "
"параметры, которые по умолчанию основаны на конфигурационных параметрах :ref:"
"`vinyl_bloom_fpr <cfg_storage-vinyl_bloom_fpr>`, :ref:`vinyl_page_size "
"<cfg_storage-vinyl_page_size>`, :ref:`vinyl_range_size <cfg_storage-"
"vinyl_range_size>`, :ref:`vinyl_run_count_per_level <cfg_storage-"
"vinyl_run_count_per_level>` и :ref:`vinyl_run_size_ratio <cfg_storage-"
"vinyl_run_size_ratio>` -- см. описание этих параметров. Текущие значения "
"можно увидеть, сделав выборку из :ref:`box.space._index <box_space-index>`."

#: ../doc/book/box/box_space.rst:353
msgid ""
"Building or rebuilding a large index will cause occasional :ref:`yields "
"<atomic-cooperative_multitasking>` so that other requests will not be "
"blocked. If the other requests cause an illegal situation such as a "
"duplicate key in a unique index, the index building or rebuilding will fail."
msgstr ""

#: ../doc/book/box/box_space.rst:361
msgid "too many parts;"
msgstr "слишком много частей;"

#: ../doc/book/box/box_space.rst:362
msgid "index '...' already exists;"
msgstr "индекс '...' уже существует;"

#: ../doc/book/box/box_space.rst:363
msgid "primary key must be unique."
msgstr "первичный ключ должен быть уникальным."

#: ../doc/book/box/box_space.rst:365
msgid ""
"tarantool> s = box.space.tester\n"
"---\n"
"...\n"
"tarantool> s:create_index('primary', {unique = true, parts = { {field = 1, "
"type = 'unsigned'}, {field = 2, type = 'string'}} })\n"
"---\n"
"..."
msgstr ""
"tarantool> s = box.space.tester\n"
"---\n"
"...\n"
"tarantool> s:create_index('primary', {unique = true, parts = { {field = 1, "
"type = 'unsigned'}, {field = 2, type = 'string'}} })\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:376
msgid "**Details about index field types:**"
msgstr "**Подробнее о типах полей индекса:**"

#: ../doc/book/box/box_space.rst:378
#, fuzzy
msgid ""
"The eight index field types (unsigned | string | integer | number | boolean "
"| varbinary | array | scalar) differ depending on what values are allowed, "
"and what index types are allowed."
msgstr ""
"Восемь типов полей индекса (unsigned | string | integer | number | boolean | "
"varbinary | array | scalar) отличаются друг от друга возможными значениями и "
"типами индексов, где можно использовать такие поля."

#: ../doc/book/box/box_space.rst:382
msgid ""
"**unsigned**: unsigned integers between 0 and 18446744073709551615, about 18 "
"quintillion. May also be called 'uint' or 'num', but 'num' is deprecated. "
"Legal in memtx TREE or HASH indexes, and in vinyl TREE indexes."
msgstr ""
"**unsigned**: беззнаковые целые числа от 0 до 18 446 744 073 709 551 615, т."
"е. около18 квинтиллионов. Также может называться 'uint' или 'num', но 'num' "
"объявлен устаревшим. Используется в индексах типа TREE или HASH в memtx'е, и "
"в TREE-индексах в vinyl'е."

#: ../doc/book/box/box_space.rst:386
msgid ""
"**string**: any set of octets, up to the :ref:`maximum length "
"<limitations_bytes_in_index_key>`. May also be called 'str'. Legal in memtx "
"TREE or HASH or BITSET indexes, and in vinyl TREE indexes. A string may have "
"a :ref:`collation <index-collation>`."
msgstr ""
"**string**: строка, то есть любая последовательность октетов до :ref:"
"`максимальной длины <limitations_bytes_in_index_key>`. Также может "
"называться 'str'. Используется в индексах типа TREE, HASH или BITSET в "
"memtx'е и в TREE-индексах в vinyl'е. В строке может быть :ref:`сортировка "
"<index-collation>`."

#: ../doc/book/box/box_space.rst:390
msgid ""
"**integer**: integers between -9223372036854775808 and 18446744073709551615. "
"May also be called 'int'. Legal in memtx TREE or HASH indexes, and in vinyl "
"TREE indexes."
msgstr ""
"**integer**: целые числа от -9 223 372 036 854 775 808 до 18 446 744 073 709 "
"551 615. Также может называться 'int'. Используется в индексах типа TREE или "
"HASH в memtx'е и в TREE-индексах в vinyl'е."

#: ../doc/book/box/box_space.rst:393
msgid ""
"**number**: integers between -9223372036854775808 and 18446744073709551615, "
"single-precision floating point numbers, or double-precision floating point "
"numbers. Legal in memtx TREE or HASH indexes, and in vinyl TREE indexes."
msgstr ""
"**number**: целые числа от -9 223 372 036 854 775 808 до 18 446 744 073 709 "
"551 615, числа с плавающей запятой с одинарной точностью или с двойной "
"точностью. Используется в индексах типа TREE или HASH в memtx'е и в TREE-"
"индексах в vinyl'е."

#: ../doc/book/box/box_space.rst:397
msgid ""
"**boolean**: true or false. Legal in memtx TREE or HASH indexes, and in "
"vinyl TREE indexes."
msgstr ""
"**boolean**: логическое значение, true (правда) или false (ложь). "
"Используется в индексах типа TREE или HASH в memtx'е и в TREE-индексах в "
"vinyl'е."

#: ../doc/book/box/box_space.rst:399
msgid ""
"**varbinary**: any set of octets, up to the :ref:`maximum length "
"<limitations_bytes_in_index_key>`. Legal in memtx TREE or HASH indexes, and "
"in vinyl TREE indexes. A varbinary byte sequence does not have a :ref:"
"`collation <index-collation>` because its contents are not UTF-8 characters."
msgstr ""

#: ../doc/book/box/box_space.rst:404
msgid ""
"**array**: array of numbers. Legal in memtx :ref:`RTREE <box_index-rtree>` "
"indexes."
msgstr ""
"**array**: массив чисел. Используется в :ref:`RTREE-индексах <box_index-"
"rtree>` в memtx'е."

#: ../doc/book/box/box_space.rst:405
#, fuzzy
msgid ""
"**scalar**: null (input with ``msgpack.NULL`` or ``yaml.NULL`` or ``json."
"NULL``), booleans (true or false), or integers between -9223372036854775808 "
"and 18446744073709551615, or single-precision floating point numbers, or "
"double-precison floating-point numbers, or strings. When there is a mix of "
"types, the key order is: null, then booleans, then numbers, then strings. "
"Legal in memtx TREE or HASH indexes, and in vinyl TREE indexes."
msgstr ""
"**scalar**: логические значения (true или false), целые числа от integers "
"between -9 223 372 036 854 775 808 до 18 446 744 073 709 551 615, числа с "
"плавающей запятой с одинарной точностью или с двойной точностью или строки. "
"При использовании нескольких типов, порядок ключей должен быть следующим: "
"логические значения, затем числа, затем строки. Используется в индексах типа "
"TREE или HASH в memtx'е и в TREE-индексах в vinyl'е."

#: ../doc/book/box/box_space.rst:413
msgid ""
"Additionally, `nil` is allowed with any index field type if :ref:"
"`is_nullable=true <box_space-is_nullable>` is specified."
msgstr ""
"Кроме того, допускается нулевое значение `nil` для любого типа поля, если "
"указана такая возможность :ref:`is_nullable=true <box_space-is_nullable>`."

#: ../doc/book/box/box_space.rst:418
msgid "**Index field types to use in space_object:create_index()**"
msgstr ""
"**Типы полей в индексах для использования в space_object:create_index()**"

#: ../doc/book/box/box_space.rst:431
msgid "Index field type"
msgstr "Тип поля для индексирования"

#: ../doc/book/box/box_space.rst:431
msgid "What can be in it"
msgstr "Чем может быть"

#: ../doc/book/box/box_space.rst:431
msgid "Where is it legal"
msgstr "Где может использоваться"

#: ../doc/book/box/box_space.rst:431
msgid "Examples"
msgstr "Примеры"

#: ../doc/book/box/box_space.rst:433
msgid "**unsigned**"
msgstr "**unsigned**"

#: ../doc/book/box/box_space.rst:433
msgid "integers between 0 and 18446744073709551615"
msgstr "целые числа от 0 до 18 446 744 073 709 551 615"

#: ../doc/book/box/box_space.rst:433 ../doc/book/box/box_space.rst:443
#: ../doc/book/box/box_space.rst:447 ../doc/book/box/box_space.rst:455
#: ../doc/book/box/box_space.rst:462
msgid "memtx TREE or HASH indexes, |br| vinyl TREE indexes"
msgstr "индексы типа TREE или HASH в memtx'е, |br| TREE-индексы в vinyl'е"

#: ../doc/book/box/box_space.rst:433
msgid "123456 |br|"
msgstr "123456 |br|"

#: ../doc/book/box/box_space.rst:437
msgid "**string**"
msgstr "**string**"

#: ../doc/book/box/box_space.rst:437
msgid "strings -- any set of octets"
msgstr "строки -- любой набор октетов"

#: ../doc/book/box/box_space.rst:437 ../doc/book/box/box_space.rst:440
msgid "memtx TREE or HASH indexes |br| vinyl TREE indexes"
msgstr "индексы типа TREE или HASH в memtx'е |br| TREE-индексы в vinyl'е"

#: ../doc/book/box/box_space.rst:437
msgid "'A B C' |br| '\\\\65 \\\\66 \\\\67'"
msgstr "'A B C' |br| '\\\\65 \\\\66 \\\\67'"

#: ../doc/book/box/box_space.rst:440
msgid "**varbinary**"
msgstr "**varbinary**"

#: ../doc/book/box/box_space.rst:440
msgid "byte sequences -- any set of octets"
msgstr "последовательности байтов -- любой набор октетов"

#: ../doc/book/box/box_space.rst:440
msgid "'\\\\65 \\\\66 \\\\67' |br|"
msgstr "'\\\\65 \\\\66 \\\\67' |br|"

#: ../doc/book/box/box_space.rst:443
msgid "**integer**"
msgstr "**integer**"

#: ../doc/book/box/box_space.rst:443
msgid "integers between -9223372036854775808 and 18446744073709551615"
msgstr ""
"целые числа от -9 223 372 036 854 775 808 до 18 446 744 073 709 551 615"

#: ../doc/book/box/box_space.rst:443
msgid "-2^63 |br|"
msgstr "-2^63 |br|"

#: ../doc/book/box/box_space.rst:447
msgid "**number**"
msgstr "**number**"

#: ../doc/book/box/box_space.rst:447
msgid ""
"integers between -9223372036854775808 and 18446744073709551615, single-"
"precision floating point numbers, double-precision floating point numbers"
msgstr ""
"целые числа от -9 223 372 036 854 775 808 до 18 446 744 073 709 551 615, "
"числа с плавающей запятой с одинарной точностью или с двойной точностью"

#: ../doc/book/box/box_space.rst:447
msgid "1.234 |br| -44 |br| 1.447e+44"
msgstr "1.234 |br| -44 |br| 1.447e+44"

#: ../doc/book/box/box_space.rst:455
msgid "**boolean**"
msgstr "**boolean**"

#: ../doc/book/box/box_space.rst:455
msgid "true or false"
msgstr "true или false"

#: ../doc/book/box/box_space.rst:455
msgid "false |br| true"
msgstr "false |br| true"

#: ../doc/book/box/box_space.rst:458
msgid "**array**"
msgstr "**array**"

#: ../doc/book/box/box_space.rst:458
msgid "array of integers between -9223372036854775808 and 9223372036854775807"
msgstr ""
"массив целых чисел от -9 223 372 036 854 775 808 до 9 223 372 036 854 775 807"

#: ../doc/book/box/box_space.rst:458
msgid "memtx RTREE indexes"
msgstr "RTREE-индексы в memtx'е"

#: ../doc/book/box/box_space.rst:458
msgid "{10, 11} |br| {3, 5, 9, 10}"
msgstr "{10, 11} |br| {3, 5, 9, 10}"

#: ../doc/book/box/box_space.rst:462
msgid "**scalar**"
msgstr "**scalar**"

#: ../doc/book/box/box_space.rst:462
#, fuzzy
msgid ""
"null, booleans (true or false), integers between -9223372036854775808 and "
"18446744073709551615, single-precision floating point numbers, double-"
"precision floating point numbers, strings"
msgstr ""
"логические значения (true или false), целые числа от -9 223 372 036 854 775 "
"808 до 18 446 744 073 709 551 615, числа с плавающей запятой с одинарной "
"точностью или с двойной точностью, строки"

#: ../doc/book/box/box_space.rst:462
#, fuzzy
msgid "null |br| true |br| -1 |br| 1.234 |br| '' |br| 'ру'"
msgstr "true |br| -1 |br| 1.234 |br| '' |br| 'ру'"

#: ../doc/book/box/box_space.rst:475
msgid ""
"**Allowing null for an indexed key:** If the index type is TREE, and the "
"index is not the primary index, then the ``parts={...}`` clause may include "
"``is_nullable=true`` or ``is_nullable=false`` (the default). If "
"``is_nullable`` is true, then it is legal to insert ``nil`` or an equivalent "
"such as ``msgpack.NULL`` (or it is legal to insert nothing at all for "
"trailing nullable fields). Within indexes, such \"null values\" are always "
"treated as equal to other null values, and are always treated as less than "
"non-null values. Nulls may appear multiple times even in a unique index. "
"Example:"
msgstr ""
"**Разрешение использования нулевых значений для индексируемого ключа:** /"
"Если тип индекса -- TREE, и индекс не является первичным, то оператор "
"``parts={...}`` может включать в себя ``is_nullable=true`` или "
"``is_nullable=false`` (по умолчанию). Если значение параметра "
"``is_nullable`` -- true, то можно вставлять ``nil`` или аналогичное "
"значение, например ``msgpack.NULL`` (или можно не вставлять вообще ничего в "
"завершающие ненулевые поля). В рамках индекса такие нулевые значения "
"считаются равными другим нулевым значениям и всегда меньше ненулевых "
"значений. Нулевые значения могут встречаться несколько раз даже в уникальном "
"индексе. Например:"

#: ../doc/book/box/box_space.rst:484
#, fuzzy
msgid ""
"box.space.tester:create_index('I',{unique=true,parts={{field = 2, type = "
"'number', is_nullable = true}}})"
msgstr ""
"box.space.tester:create_index('I',{unique=true,parts={{2,'number',"
"is_nullable=true}}})"

#: ../doc/book/box/box_space.rst:490
msgid ""
"It is legal to create multiple indexes for the same field with different "
"``is_nullable`` values, or to call :ref:`space_object:format() <box_space-"
"format>` with a different ``is_nullable`` value from what is used for an "
"index. When there is a contradiction, the rule is: null is illegal unless "
"``is_nullable=true`` for every index and for the space format."
msgstr ""
"Можно создать множество индексов для одного и того же поля с различными "
"значениями ``is_nullable`` или вызвать :ref:`space_object:format() "
"<box_space-format>` со значением ``is_nullable``, отличным от используемого "
"для индекса. При наличии несоответствий правило такое: запрещается "
"использовать null кроме случаев, когда ``is_nullable=true`` для всех "
"индексов и формата спейса."

#: ../doc/book/box/box_space.rst:498
msgid ""
"**Using field names instead of field numbers:** ``create_index()`` can use "
"field names and/or field types described by the optional :ref:`space_object:"
"format() <box_space-format>` clause. In the following example, we show "
"``format()`` for a space that has two columns named 'x' and 'y', and then we "
"show five variations of the ``parts={}`` clause of ``create_index()``, first "
"for the 'x' column, second for both the 'x' and 'y' columns. The variations "
"include omitting the type, using numbers, and adding extra braces."
msgstr ""
"**Использование имен полей вместо номеров полей:** в ``create_index()`` "
"можно использовать имена полей и/или типы полей, описанные в необязательном "
"операторе :ref:`space_object:format() <box_space-format>`. В следующем "
"примере покажем ``format()`` для спейса с двумя столбцами под названиями 'x' "
"и 'y', а затем покажем пять вариантов оператора ``parts={}`` в "
"``create_index()``, сначала для столбца 'x', затем для столбцов 'x' и 'y'. "
"Варианты включают в себя пропуск типа, использование номеров и добавление "
"дополнительных фигурных скобок."

#: ../doc/book/box/box_space.rst:507
#, fuzzy
msgid ""
"box.space.tester:format({{name='x', type='scalar'}, {name='y', "
"type='integer'}})\n"
"box.space.tester:create_index('I2',{parts={{'x', 'scalar'}}})\n"
"box.space.tester:create_index('I3',{parts={{'x','scalar'},"
"{'y','integer'}}})\n"
"box.space.tester:create_index('I4',{parts={1,'scalar'}})\n"
"box.space.tester:create_index('I5',{parts={1,'scalar',2,'integer'}})\n"
"box.space.tester:create_index('I6',{parts={1}})\n"
"box.space.tester:create_index('I7',{parts={1,2}})\n"
"box.space.tester:create_index('I8',{parts={'x'}})\n"
"box.space.tester:create_index('I9',{parts={'x','y'}})\n"
"box.space.tester:create_index('I10',{parts={{'x'}}})\n"
"box.space.tester:create_index('I11',{parts={{'x'},{'y'}}})"
msgstr ""
"box.space.tester:format({{name='x', type='scalar'}, {name='y', "
"type='integer'}})\n"
"box.space.tester:create_index('I2',{parts={{'x','scalar'}}})\n"
"box.space.tester:create_index('I3',{parts={{'x','scalar'},"
"{'y','integer'}}})\n"
"box.space.tester:create_index('I4',{parts={1,'scalar'}})\n"
"box.space.tester:create_index('I5',{parts={1,'scalar',2,'integer'}})\n"
"box.space.tester:create_index('I6',{parts={1}})\n"
"box.space.tester:create_index('I7',{parts={1,2}})\n"
"box.space.tester:create_index('I8',{parts={'x'}})\n"
"box.space.tester:create_index('I9',{parts={'x','y'}})\n"
"box.space.tester:create_index('I10',{parts={{'x'}}})\n"
"box.space.tester:create_index('I11',{parts={{'x'},{'y'}}})"

#: ../doc/book/box/box_space.rst:523
msgid ""
"**Using the path option for map fields:** To create an index for a field "
"that is a map (a path string and a scalar value), specify the path string "
"during index_create, that is, :code:`parts={` :samp:`{field-number},'{data-"
"type}',path = '{path-name}'` :code:`}`. The index type must be ``'tree'`` or "
"``'hash'`` and the field's contents must always be maps with the same path."
msgstr ""

#: ../doc/book/box/box_space.rst:529
msgid ""
"-- Example 1 -- The simplest use of path:\n"
"-- Result will be - - [{'age': 44}]\n"
"box.schema.space.create('T')\n"
"box.space.T:create_index('I',{parts={{field = 1, type = 'scalar', path = "
"'age'}}})\n"
"box.space.T:insert{{age=44}}\n"
"box.space.T:select(44)\n"
"-- Example 2 -- path plus format() plus JSON syntax to add clarity\n"
"-- Result will be: - [1, {'FIO': {'surname': 'Xi', 'firstname': 'Ahmed'}}]\n"
"s = box.schema.space.create('T')\n"
"format = {{'id', 'unsigned'}, {'data', 'map'}}\n"
"s:format(format)\n"
"parts = {{'data.FIO[\"firstname\"]', 'str'}, {'data.FIO[\"surname\"]', "
"'str'}}\n"
"i = s:create_index('info', {parts = parts})\n"
"s:insert({1, {FIO={firstname='Ahmed', surname='Xi'}}})"
msgstr ""

#: ../doc/book/box/box_space.rst:546
msgid ""
"**Note re storage engine:** vinyl supports only the TREE index type, and "
"vinyl secondary indexes must be created before tuples are inserted."
msgstr ""
"**Примечание про движок базы данных:** vinyl поддерживает только TREE-"
"индексы, и следует создать в vinyl'е вторичные индексы до вставки кортежей."

#: ../doc/book/box/box_space.rst:551
msgid ""
"**Using the path option with [*]**  The string in a path option can contain "
"'[*]' which is called an array index placeholder. Indexes defined with this "
"are useful for JSON documents that all have the same structure. For example, "
"when creating an index on field#2 for a string document that will start with "
"``{'data': [{'name': '...'}, {'name': '...'}]``, the parts section in the "
"create_index request could look like: ``parts = {{field = 2, type = 'str', "
"path = 'data[*].name'}}``. Then tuples containing names can be retrieved "
"quickly with ``index_object:select({key-value})``. In fact a single field "
"can have multiple keys, as in this example which retrieves the same tuple "
"twice because there are two keys 'A' and 'B' which both match the request:"
msgstr ""

#: ../doc/book/box/box_space.rst:561
msgid ""
"s = box.schema.space.create('json_documents')\n"
"s:create_index('primarykey')\n"
"i = s:create_index('multikey', {parts = {{field = 2, type = 'str', path = "
"'data[*].name'}}})\n"
"s:insert({1,\n"
"         {data = {{name='A'},\n"
"                  {name='B'}},\n"
"          extra_field = 1}})\n"
"i:select({''},{iterator='GE'})\n"
"--  The result of the select request looks like this:\n"
"--  tarantool> i:select({''},{iterator='GE'})\n"
"--  ---\n"
"--  - - [1, {'data': [{'name': 'A'}, {'name': 'B'}], 'extra_field': 1}]\n"
"--    - [1, {'data': [{'name': 'A'}, {'name': 'B'}], 'extra_field': 1}]\n"
"--  ..."
msgstr ""

#: ../doc/book/box/box_space.rst:578
msgid ""
"Some restrictions exist: () '[*]' must be alone or must be at the end of a "
"name in the path; () '[*]' must not appear twice in the path; () if an index "
"has a path with x[*] then no other index can have a path with x.component; "
"() '[*]' must not appear in the path of a primary-key ; () if an index has "
"``unique=true`` and has a path with '[*]' then duplicate keys from different "
"tuples are disallowed but duplicate keys for the same tuple are allowed; () "
"As with :ref:`Using the path option for map fields <box_space-path>`, the "
"field's value must have the structure that the path definition implies, or "
"be nil (nil is not indexed)."
msgstr ""

#: ../doc/book/box/box_space.rst:590
#, fuzzy
msgid "**Making a functional index with space_object:create_index()**"
msgstr "**Параметры для space_object:create_index()**"

#: ../doc/book/box/box_space.rst:592
msgid ""
"Functional indexes are indexes that call a user-defined function for forming "
"the index key, rather than depending entirely on the Tarantool default "
"formation. Functional indexes are useful for condensing or truncating or "
"reversing or any other way that users want to customize the index."
msgstr ""

#: ../doc/book/box/box_space.rst:597
msgid ""
"The function definition must expect a tuple (which has the contents of "
"fields at the time a data-change request happens) and must return a tuple "
"(which has the contents that will actually be put in the index)."
msgstr ""

#: ../doc/book/box/box_space.rst:601
msgid ""
"The space must have a memtx engine. |br| The function must be :ref:"
"`persistent <box_schema-func_create_with-body>` and deterministic. |br| The "
"key parts must not depend on JSON paths. |br| The ``create_index`` "
"definition must include specification of all key parts, and the function "
"must return a table which has the same number of key parts with the same "
"types. |br| The function must access key-part values by index, not by field "
"name. |br| Functional indexes must not be primary-key indexes. |br| "
"Functional indexes cannot be altered and the function cannot be changed if "
"it is used for an index, so the only way to change them is to drop the index "
"and create it again."
msgstr ""

#: ../doc/book/box/box_space.rst:615
msgid ""
"A function could make a key using only the first letter of a string field."
msgstr ""

#: ../doc/book/box/box_space.rst:617
msgid ""
"-- Step 1: Make the space.\n"
"-- The space needs a primary-key field, which is not the field that we\n"
"-- will use for the functional index.\n"
"box.schema.space.create('x', {engine = 'memtx'})\n"
"box.space.x:create_index('i',{parts={field = 1, type = 'string'}})\n"
"-- Step 2: Make the function.\n"
"-- The function expects a tuple. In this example it will work on tuple[2]\n"
"-- because the key souce is field number 2 in what we will insert.\n"
"-- Use string.sub() from the string module to get the first character.\n"
"lua_code = [[function(tuple) return {string.sub(tuple[2],1,1)} end]]\n"
"-- Step 3: Make the function persistent.\n"
"-- Use the box.schema.func.create function for this.\n"
"box.schema.func.create('F',\n"
"    {body = lua_code, is_deterministic = true, is_sandboxed = true})\n"
"-- Step 4: Make the functional index.\n"
"-- Specify the fields whose values will be passed to the function.\n"
"-- Specify the function.\n"
"box.space.x:create_index('j',{parts={field = 1, type = 'string'},func = "
"'F'})\n"
"-- Step 5: Test.\n"
"-- Insert a few tuples.\n"
"-- Select using only the first letter, it will work because that is the key\n"
"-- Or, select using the same function as was used for insertion\n"
"box.space.x:insert{'a', 'wombat'}\n"
"box.space.x:insert{'b', 'rabbit'}\n"
"-- Select using only the first letter, it will work because that is the key\n"
"-- Or, select using the same function as was used for insertion\n"
"box.space.x:insert{'a', 'wombat'}\n"
"box.space.x:insert{'b', 'rabbit'}\n"
"box.space.x.index.j:select('w')\n"
"box.space.x.index.j:select(box.func.F:call({{'x', 'wombat'}}));"
msgstr ""

#: ../doc/book/box/box_space.rst:650
#, fuzzy
msgid "The results of the two ``select`` requests will look like this:"
msgstr "Результат будет выглядеть следующим образом:"

#: ../doc/book/box/box_space.rst:652
msgid ""
"tarantool>     box.space.x.index.j:select('w')\n"
"---\n"
"- - ['a', 'wombat']\n"
"...\n"
"\n"
"tarantool>     box.space.x.index.j:select(box.func.F:"
"call({{'x','wombat'}}));\n"
"---\n"
"- - ['a', 'wombat']\n"
"..."
msgstr ""

#: ../doc/book/box/box_space.rst:664
msgid ""
"Functions for functional indexes can return multiple keys. |br| Such "
"functions are called \"multikey\" functions. |br| The ``box.func.create`` "
"options must include ``opts = {is_multikey = true}``. |br| The return value "
"must be a table of tuples. |br| If a multikey function returns N tuples, "
"then N keys will be added to the index."
msgstr ""

#: ../doc/book/box/box_space.rst:672
msgid ""
"s = box.schema.space.create('withdata')\n"
"s:format({{name = 'name', type = 'string'},\n"
"          {name = 'address', type = 'string'}})\n"
"pk = s:create_index('name', {parts = {field = 1, type = 'string'}})\n"
"lua_code = [[function(tuple)\n"
"               local address = string.split(tuple[2])\n"
"               local ret = {}\n"
"               for _, v in pairs(address) do\n"
"                 table.insert(ret, {utf8.upper(v)})\n"
"               end\n"
"               return ret\n"
"             end]]\n"
"box.schema.func.create('address',\n"
"                        {body = lua_code,\n"
"                         is_deterministic = true,\n"
"                         is_sandboxed = true,\n"
"                         opts = {is_multikey = true}})\n"
"idx = s:create_index('addr', {unique = false,\n"
"                              func = 'address',\n"
"                              parts = {{field = 1, type = 'string',\n"
"                                      collation = 'unicode_ci'}}})\n"
"s:insert({\"James\", \"SIS Building Lambeth London UK\"})\n"
"s:insert({\"Sherlock\", \"221B Baker St Marylebone London NW1 6XE UK\"})\n"
"idx:select('Uk')\n"
"-- Both tuples will be returned."
msgstr ""

#: ../doc/book/box/box_space.rst:704
msgid "Delete a tuple identified by a primary key."
msgstr "Удаление кортежа по первичному ключу."

#: ../doc/book/box/box_space.rst:711
msgid "the deleted tuple"
msgstr "удаленный кортеж."

#: ../doc/book/box/box_space.rst:714
msgid "**Complexity factors:** Index size, Index type"
msgstr "**Факторы сложности:** Размер индекса, тип индекса"

#: ../doc/book/box/box_space.rst:716
msgid ""
"**Note re storage engine:** vinyl will return ``nil``, rather than the "
"deleted tuple."
msgstr ""
"**Примечание про движок базы данных:** vinyl вернет ``nil``, а не удаленный "
"кортеж."

#: ../doc/book/box/box_space.rst:721
msgid ""
"tarantool> box.space.tester:delete(1)\n"
"---\n"
"- [1, 'My first tuple']\n"
"...\n"
"tarantool> box.space.tester:delete(1)\n"
"---\n"
"...\n"
"tarantool> box.space.tester:delete('a')\n"
"---\n"
"- error: 'Supplied key type of part 0 does not match index part type:\n"
"  expected unsigned'\n"
"..."
msgstr ""
"tarantool> box.space.tester:delete(1)\n"
"---\n"
"- [1, 'My first tuple']\n"
"...\n"
"tarantool> box.space.tester:delete(1)\n"
"---\n"
"...\n"
"tarantool> box.space.tester:delete('a')\n"
"---\n"
"- error: 'Supplied key type of part 0 does not match index part type:\n"
"  expected unsigned'\n"
"..."

#: ../doc/book/box/box_space.rst:736 ../doc/book/box/box_space.rst:1035
#: ../doc/book/box/box_space.rst:1362 ../doc/book/box/box_space.rst:1490
#: ../doc/book/box/box_space.rst:1662 ../doc/book/box/box_space.rst:1710
msgid ""
"For more usage scenarios and typical errors see :ref:`Example: using data "
"operations <box_space-operations-detailed-examples>` further in this section."
msgstr ""
"Для получения дополнительной информации о сценариях использования и типичных "
"ошибках, см. :ref:`Пример: использование операций с данными <box_space-"
"operations-detailed-examples>` далее в разделе."

#: ../doc/book/box/box_space.rst:744
msgid "Drop a space."
msgstr "Удаление спейса."

#: ../doc/book/box/box_space.rst:749 ../doc/book/box/box_space.rst:1316
#: ../doc/book/box/box_space.rst:1375 ../doc/book/box/box_space.rst:1505
msgid "nil"
msgstr "nil"

#: ../doc/book/box/box_space.rst:751 ../doc/book/box/box_space.rst:971
#: ../doc/book/box/box_space.rst:1318
msgid "**Possible errors:** ``space_object`` does not exist."
msgstr "**Возможные ошибки:** ``space_object`` не существует."

#: ../doc/book/box/box_space.rst:753 ../doc/book/box/box_space.rst:973
#: ../doc/book/box/box_space.rst:1353
msgid ""
"**Complexity factors:** Index size, Index type, Number of indexes accessed, "
"WAL settings."
msgstr ""
"**Факторы сложности** Размер индекса, тип индекса, количество кортежей, к "
"которым получен доступ, настройки журнала упреждающей записи (WAL)."

#: ../doc/book/box/box_space.rst:758
msgid "box.space.space_that_does_not_exist:drop()"
msgstr "box.space.space_that_does_not_exist:drop()"

#: ../doc/book/box/box_space.rst:766
msgid "Declare field names and :ref:`types <index-box_data-types>`."
msgstr "Объявление имен и :ref:`типов <index-box_data-types>` полей."

#: ../doc/book/box/box_space.rst:770
msgid "a list of field names and types"
msgstr "список имен и типов полей"

#: ../doc/book/box/box_space.rst:772
msgid "nil, unless format-clause is omitted"
msgstr "nil, если не указан оператор формата"

#: ../doc/book/box/box_space.rst:776
msgid "``space_object`` does not exist;"
msgstr "``space_object`` не существует,"

#: ../doc/book/box/box_space.rst:777
msgid "field names are duplicated;"
msgstr "дублируются имена полей;"

#: ../doc/book/box/box_space.rst:778
msgid "type is not legal."
msgstr "тип не поддерживается."

#: ../doc/book/box/box_space.rst:780
msgid ""
"Ordinarily Tarantool allows unnamed untyped fields. But with ``format`` "
"users can, for example, document that the Nth field is the surname field and "
"must contain strings. It is also possible to specify a format clause in :ref:"
"`box.schema.space.create() <box_schema-space_create>`."
msgstr ""
"Как правило, Tarantool допускает поля без имен и без указания типа. Но с "
"помощью ``format`` можно, например, задокументировать, что N-ное поле "
"представляет собой поле для фамилии и должно содержать строковое значение. "
"Также оператор формата можно указать в :ref:`box.schema.space.create() "
"<box_schema-space_create>`."

#: ../doc/book/box/box_space.rst:786
msgid ""
"The format clause contains, for each field, a definition within braces: "
"``{name='...',type='...'[,is_nullable=...]}``, where:"
msgstr ""
"Оператор формата для каждого поля содержит определение в фигурных скобках: "
"``{name='...',type='...'[,is_nullable=...]}``, где:"

#: ../doc/book/box/box_space.rst:789
msgid ""
"the ``name`` value may be any string, provided that two fields do not have "
"the same name;"
msgstr ""
"значение ``name`` может представлять собой любую строку при условии, что у "
"двух полей не будет одинаковых имен;"

#: ../doc/book/box/box_space.rst:791
#, fuzzy
msgid ""
"the ``type`` value may be any of those allowed for :ref:`indexed fields "
"<index-box_indexed-field-types>`: unsigned | string | varbinary | integer | "
"number | boolean | array | scalar (the same as the requirement in :ref:`"
"\"Options for space_object:create_index\" <box_space-create_index-options>`);"
msgstr ""
"значением ``type`` может быть любой допустимый тип для :ref:`индексируемых "
"полей <index-box_indexed-field-types>`: unsigned | string | integer | number "
"| boolean | array | scalar (такое же требование, как для :ref:`\"Параметров "
"для space_object:create_index\" <box_space-create_index-options>`);"

#: ../doc/book/box/box_space.rst:796
msgid ""
"the optional ``is_nullable`` value may be either ``true`` or ``false`` (the "
"same as the requirement in :ref:`\"Options for space_object:create_index\" "
"<box_space-create_index-options>`). See also the warning notice in section :"
"ref:`Allowing null for an indexed key <box_space-is_nullable>`."
msgstr ""
"значение необязательного параметра ``is_nullable`` может быть ``true`` или "
"``false`` (такое же требование, как для :ref:`\"Параметров для space_object:"
"create_index\" <box_space-create_index-options>`). См. также предупреждение "
"в разделе :ref:`Разрешение использования нулевых значений для индексируемого "
"ключа<box_space-is_nullable>`."

#: ../doc/book/box/box_space.rst:802
msgid ""
"It is not legal for tuples to contain values that have the wrong type; for "
"example after ``box.space.tester:format({{' ',type='number'}})`` the request "
"``box.space.tester:insert{'string-which-is-not-a-number'}`` will cause an "
"error."
msgstr ""
"В кортежах недопустимы значения неправильного типа; например, после ``box."
"space.tester:format({{' ',type='number'}})`` (тип = число) запрос ``box."
"space.tester:insert{'строка-которая-не-является-числом'}`` вызовет ошибку."

#: ../doc/book/box/box_space.rst:806
msgid ""
"It is not legal for tuples to contain null values if ``is_nullable=false``, "
"which is the default; for example after ``box.space.tester:format({{' ',"
"type='number',is_nullable=false}})`` the request ``box.space.tester:"
"insert{nil,2}`` will cause an error."
msgstr ""
"В кортежах недопустимы нулевые значения, если ``is_nullable=false``, что "
"задано по умолчанию; например, после ``box.space.tester:format({{' ',"
"type='number',is_nullable=false}})`` запрос ``box.space.tester:insert{nil,2}"
"`` вызовет ошибку."

#: ../doc/book/box/box_space.rst:810
msgid ""
"It is legal for tuples to have more fields than are described by a format "
"clause. The way to constrain the number of fields is to specify a space's :"
"ref:`field_count <box_space-field_count>` member."
msgstr ""
"В кортежах может быть больше полей, чем описано в операторе формата. Чтобы "
"ограничить количество полей, необходимо указать элемент спейса :ref:"
"`field_count <box_space-field_count>`."

#: ../doc/book/box/box_space.rst:814
msgid ""
"It is legal for tuples to have fewer fields than are described by a format "
"clause, if the omitted trailing fields are described with "
"``is_nullable=true``; for example after ``box.space.tester:format({{'a',"
"type='number'},{'b',type='number',is_nullable=true}})`` the request ``box."
"space.tester:insert{2}`` will not cause a format-related error."
msgstr ""
"В кортежах может быть меньше полей, чем описано в операторе формата, если "
"пропущенные завершающие поля описаны с помощью ``is_nullable=true``; "
"например после ``box.space.tester:format({{'a',type='number'},{'b',"
"type='number',is_nullable=true}})`` запрос ``box.space.tester:insert{2}`` не "
"приведет к ошибке формата."

#: ../doc/book/box/box_space.rst:819
msgid ""
"It is legal to use ``format`` on a space that already has a format, thus "
"replacing any previous definitions, provided that there is no conflict with "
"existing data or index definitions."
msgstr ""
"Можно использовать ``format`` для спейса, в котором уже определен формат, "
"заменяя таким образом предыдущие определения при условии, что нет конфликта "
"с существующими данными или определениями индекса."

#: ../doc/book/box/box_space.rst:823
msgid ""
"It is legal to use ``format`` to change the ``is_nullable`` flag; for "
"example after ``box.space.tester:format({{' ',type='scalar',"
"is_nullable=false}})`` the request ``box.space.tester:format({{' ',"
"type='scalar',is_nullable=true}})`` will not cause an error -- and will not "
"cause rebuilding of the space. But going the other way and changing "
"``is_nullable`` from ``true`` to ``false`` might cause rebuilding and might "
"cause an error if there are existing tuples with nulls."
msgstr ""
"Можно использовать ``format`` для того, чтобы изменить значение флага "
"``is_nullable``; например, после ``box.space.tester:format({{' ',"
"type='scalar',is_nullable=false}})`` запрос ``box.space.tester:format({{' ',"
"type='scalar',is_nullable=true}})`` не вызовет ошибку -- и не приведет к "
"перестроению спейса. Но обратное изменение значения ``is_nullable`` с "
"``true`` на ``false`` может вызвать перестроение и привести к ошибке, если "
"уже есть кортежи с нулевыми значениями."

#: ../doc/book/box/box_space.rst:833
msgid ""
"box.space.tester:format({{name='surname',type='string'},{name='IDX',"
"type='array'}})\n"
"box.space.tester:format({{name='surname',type='string',is_nullable=true}})"
msgstr ""
"box.space.tester:format({{name='surname',type='string'},{name='IDX',"
"type='array'}})\n"
"box.space.tester:format({{name='surname',type='string',is_nullable=true}})"

#: ../doc/book/box/box_space.rst:839
msgid "There are legal variations of the format clause:"
msgstr "Можно использовать следующие варианты оператора:"

#: ../doc/book/box/box_space.rst:841
msgid "omitting both 'name=' and 'type=',"
msgstr "пропуск и 'name=', и 'type=',"

#: ../doc/book/box/box_space.rst:842
msgid "omitting 'type=' alone, and"
msgstr "пропуск 'type=' и"

#: ../doc/book/box/box_space.rst:843
msgid "adding extra braces."
msgstr "добавление дополнительных фигурных скобок."

#: ../doc/book/box/box_space.rst:845
msgid ""
"The following examples show all the variations, first for one field named "
"'x', second for two fields named 'x' and 'y'."
msgstr ""
"В следующем примере иллюстрируются все варианты, первый для поля с именем "
"'x', второй -- для двух полей с именами 'x' и 'y'."

#: ../doc/book/box/box_space.rst:848
msgid ""
"box.space.tester:format({{'x'}})\n"
"box.space.tester:format({{'x'},{'y'}})\n"
"box.space.tester:format({{name='x',type='scalar'}})\n"
"box.space.tester:format({{name='x',type='scalar'},{name='y',"
"type='unsigned'}})\n"
"box.space.tester:format({{name='x'}})\n"
"box.space.tester:format({{name='x'},{name='y'}})\n"
"box.space.tester:format({{'x',type='scalar'}})\n"
"box.space.tester:format({{'x',type='scalar'},{'y',type='unsigned'}})\n"
"box.space.tester:format({{'x','scalar'}})\n"
"box.space.tester:format({{'x','scalar'},{'y','unsigned'}})"
msgstr ""
"box.space.tester:format({{'x'}})\n"
"box.space.tester:format({{'x'},{'y'}})\n"
"box.space.tester:format({{name='x',type='scalar'}})\n"
"box.space.tester:format({{name='x',type='scalar'},{name='y',"
"type='unsigned'}})\n"
"box.space.tester:format({{name='x'}})\n"
"box.space.tester:format({{name='x'},{name='y'}})\n"
"box.space.tester:format({{'x',type='scalar'}})\n"
"box.space.tester:format({{'x',type='scalar'},{'y',type='unsigned'}})\n"
"box.space.tester:format({{'x','scalar'}})\n"
"box.space.tester:format({{'x','scalar'},{'y','unsigned'}})"

#: ../doc/book/box/box_space.rst:861
msgid ""
"The following example shows how to create a space, format it with all "
"possible types, and insert into it."
msgstr ""
"В следующем примере показывается создание спейса, определение формата для "
"него со всеми возможными типа и вставка данных."

#: ../doc/book/box/box_space.rst:864
#, fuzzy
msgid ""
"tarantool> box.schema.space.create('t')\n"
"--- ...\n"
"tarantool> box.space.t:format({{name='1',type='any'},\n"
"         >                     {name='2',type='unsigned'},\n"
"         >                     {name='3',type='string'},\n"
"         >                     {name='4',type='number'},\n"
"         >                     {name='5',type='integer'},\n"
"         >                     {name='6',type='boolean'},\n"
"         >                     {name='7',type='scalar'},\n"
"         >                     {name='8',type='array'},\n"
"         >                     {name='9',type='map'}})\n"
"--- ...\n"
"tarantool> box.space.t:create_index('i',{parts={field = 2, type = "
"'unsigned'}})\n"
"--- ...\n"
"tarantool> box.space.t:insert{{'a'},      -- any\n"
"         >                    1,          -- unsigned\n"
"         >                    'W?',       -- string\n"
"         >                    5.5,        -- number\n"
"         >                    -0,         -- integer\n"
"         >                    true,       -- boolean\n"
"         >                    true,       -- scalar\n"
"         >                    {{'a'}},    -- array\n"
"         >                    {val=1}}    -- map\n"
"---\n"
"- [['a'], 1, 'W?', 5.5, 0, true, true, [['a']], {'val': 1}]\n"
"..."
msgstr ""
"tarantool> box.schema.space.create('t')\n"
"--- ...\n"
"tarantool> box.space.t:format({{name='1',type='any'},\n"
"         >                     {name='2',type='unsigned'},\n"
"         >                     {name='3',type='string'},\n"
"         >                     {name='4',type='number'},\n"
"         >                     {name='5',type='integer'},\n"
"         >                     {name='6',type='boolean'},\n"
"         >                     {name='7',type='scalar'},\n"
"         >                     {name='8',type='array'},\n"
"         >                     {name='9',type='map'}})\n"
"--- ...\n"
"tarantool> box.space.t:create_index('i',{parts={2,'unsigned'}})\n"
"--- ...\n"
"tarantool> box.space.t:insert{{'a'},      -- any\n"
"         >                    1,          -- unsigned\n"
"         >                    'W?',       -- string\n"
"         >                    5.5,        -- number\n"
"         >                    -0,         -- integer\n"
"         >                    true,       -- boolean\n"
"         >                    true,       -- scalar\n"
"         >                    {{'a'}},    -- array\n"
"         >                    {val=1}}    -- map\n"
"---\n"
"- [['a'], 1, 'W?', 5.5, 0, true, true, [['a']], {'val': 1}]\n"
"..."

#: ../doc/book/box/box_space.rst:893
msgid ""
"Names specified with the format clause can be used in :ref:`space_object:"
"get() <box_space-get>` and in :ref:`space_object:create_index() <box_space-"
"create_index>` and in :ref:`tuple_object[field-name] <box_tuple-field_name>` "
"and in :ref:`tuple_object[field-path] <box_tuple-field_path>`."
msgstr ""
"Имена, указанные с помощью оператора формата, можно использовать в :ref:"
"`space_object:get() <box_space-get>`, в :ref:`space_object:create_index() "
"<box_space-create_index>`, в :ref:`tuple_object[field-name] <box_tuple-"
"field_name>` и в :ref:`tuple_object[field-path] <box_tuple-field_path>`."

#: ../doc/book/box/box_space.rst:899
msgid ""
"If the format clause is omitted, then the returned value is the table that "
"was used in a previous :samp:`{space_object}:format({format-clause})` "
"invocation. For example, after ``box.space.tester:"
"format({{'x','scalar'}})``, ``box.space.tester:format()`` will return "
"``[{'name': 'x', 'type': 'scalar'}]``."
msgstr ""
"Если оператор формата не указан, то вернется таблица, которая использовалась "
"при предыдущем вызове :samp:`{объект-спейса}:format({оператор-формата})`. "
"Например, после ``box.space.tester:format({{'x','scalar'}})``, ``box.space."
"tester:format()`` вернет ``[{'name': 'x', 'type': 'scalar'}]``."

#: ../doc/book/box/box_space.rst:904
msgid ""
"Formatting or reformatting a large space will cause occasional :ref:`yields "
"<atomic-cooperative_multitasking>` so that other requests will not be "
"blocked. If the other requests cause an illegal situation such as a field "
"value of the wrong type, the formatting or reformatting will fail."
msgstr ""

#: ../doc/book/box/box_space.rst:914
msgid ""
"Convert a map to a tuple instance or to a table. The map must consist of "
"\"field name = value\" pairs. The field names and the value types must match "
"names and types stated previously for the space, via :ref:`space_object:"
"format() <box_space-format>`."
msgstr ""
"Конвертация ассоциативного массива в экземпляр кортежа или в таблицу. "
"Ассоциативный массив должен состоять из пар \"имя поля = значение\". Имена "
"полей и типы значений должны соответствовать именам и типам, ранее заданным "
"для спейса через :ref:`space_object:format() <box_space-format>`."

#: ../doc/book/box/box_space.rst:922
msgid "a series of \"field = value\" pairs, in any order."
msgstr "ряд пар \"поле = значение\" в любом порядке."

#: ../doc/book/box/box_space.rst:923
msgid ""
"the only legal option is ``{table = true|false}``; |br| if the option is "
"omitted or if ``{table = false}``, then return type will be 'cdata' (i.e. "
"tuple); |br| if ``{table = true}``, then return type will be 'table'."
msgstr ""
"единственный возможный параметр ``{table = true|false}``; |br| если параметр "
"не указан, или же ``{table = false}``, то возвращается 'cdata' (то есть "
"кортеж); |br| если ``{table = true}``, то возвращается таблица."

#: ../doc/book/box/box_space.rst:928
msgid "a tuple instance or table."
msgstr "кортеж или таблица."

#: ../doc/book/box/box_space.rst:929
msgid "tuple or table"
msgstr "кортеж или таблица"

#: ../doc/book/box/box_space.rst:931
msgid ""
"**Possible errors:** ``space_object`` does not exist or has no format; "
"\"unknown field\"."
msgstr ""
"**Возможные ошибки:** отсутствует объект спейса ``space_object``, или в "
"спейсе нет формата; \"unknown field\" (неизвестное поле)."

#: ../doc/book/box/box_space.rst:935
msgid ""
"-- Create a format with two fields named 'a' and 'b'.\n"
"-- Create a space with that format.\n"
"-- Create a tuple based on a map consistent with that space.\n"
"-- Create a table based on a map consistent with that space.\n"
"tarantool> format1 = {{name='a',type='unsigned'},{name='b',type='scalar'}}\n"
"---\n"
"...\n"
"tarantool> s = box.schema.create_space('test', {format = format1})\n"
"---\n"
"...\n"
"tarantool> s:frommap({b = 'x', a = 123456})\n"
"---\n"
"- [123456, 'x']\n"
"...\n"
"tarantool> s:frommap({b = 'x', a = 123456}, {table = true})\n"
"---\n"
"- - 123456\n"
"  - x\n"
"..."
msgstr ""
"-- Создание формата с двумя полями под названиями 'a' и 'b'.\n"
"-- Создание спейса с таким форматом.\n"
"-- Создание кортежа на основе ассоциативного массива по данному спейсу.\n"
"-- Создание таблицы на основе ассоциативного массива по данному спейсу.\n"
"tarantool> format1 = {{name='a',type='unsigned'},{name='b',type='scalar'}}\n"
"---\n"
"...\n"
"tarantool> s = box.schema.create_space('test', {format = format1})\n"
"---\n"
"...\n"
"tarantool> s:frommap({b = 'x', a = 123456})\n"
"---\n"
"- [123456, 'x']\n"
"...\n"
"tarantool> s:frommap({b = 'x', a = 123456}, {table = true})\n"
"---\n"
"- - 123456\n"
"  - x\n"
"..."

#: ../doc/book/box/box_space.rst:961
msgid "Search for a tuple in the given space."
msgstr "Поиск кортежа в данном спейсе."

#: ../doc/book/box/box_space.rst:965 ../doc/book/box/box_space.rst:1400
msgid "value to be matched against the index key, which may be multi-part."
msgstr ""
"значение должно совпасть с индексным ключом, который может быть составным."

#: ../doc/book/box/box_space.rst:968
msgid "the tuple whose index key matches ``key``, or ``nil``."
msgstr "кортеж, ключ индекса в котором совпадает с ``key`` или ``nil``."

#: ../doc/book/box/box_space.rst:976
msgid ""
"The ``box.space...select`` function returns a set of tuples as a Lua table; "
"the ``box.space...get`` function returns at most a single tuple. And it is "
"possible to get the first tuple in a space by appending ``[1]``. Therefore "
"``box.space.tester:get{1}`` has the same effect as ``box.space.tester:"
"select{1}[1]``, if exactly one tuple is found."
msgstr ""
"Функция ``box.space...select`` вернет набор кортежей в виде Lua-таблицы; "
"функция ``box.space...get`` вернет самое большее один кортеж. Можно получить "
"первый кортеж в спейсе, добавив ``[1]``. Таким образом, ``box.space.tester:"
"get{1}`` эквивалентна ``box.space.tester:select{1}[1]``, если найден только "
"один кортеж."

#: ../doc/book/box/box_space.rst:984
msgid "box.space.tester:get{1}"
msgstr "box.space.tester:get{1}"

#: ../doc/book/box/box_space.rst:988
#, fuzzy
msgid ""
"**Using field names instead of field numbers:** `get()` can use field names "
"described by the optional :ref:`space_object:format() <box_space-format>` "
"clause. This is true because the object returned by ``get()`` can be used "
"with most of the features described in the :ref:`Submodule box.tuple "
"<box_tuple>` description, including :ref:`tuple_object[field-name] "
"<box_tuple-field_name>`."
msgstr ""
"**Использование имен полей вместо номеров полей:** в `get()` можно "
"использовать имена полей, описанные в необязательном операторе :ref:"
"`space_object:format() <box_space-format>`. Это аналогично стандартной Lua-"
"функции, где на компонент можно ссылаться по имени, а не по номеру. "
"Например, может форматировать спейс `tester` с полем под названием `x` и "
"использовать имя `x` в определении индекса:"

#: ../doc/book/box/box_space.rst:994
msgid ""
"For example, we can format the `tester` space with a field named `x` and use "
"the name `x` in the index definition:"
msgstr ""

#: ../doc/book/box/box_space.rst:997
msgid ""
"box.space.tester:format({{name='x',type='scalar'}})\n"
"box.space.tester:create_index('I',{parts={'x'}})"
msgstr ""
"box.space.tester:format({{name='x',type='scalar'}})\n"
"box.space.tester:create_index('I',{parts={'x'}})"

#: ../doc/book/box/box_space.rst:1002
#, fuzzy
msgid ""
"Then, if ``get`` or ``select`` retrieves a single tuple, we can reference "
"the field 'x' in the tuple by its name:"
msgstr ""
"Тогда если ``get`` или ``select`` вернут отдельный кортеж, можно сослаться "
"на поле 'x' в кортеже по имени:"

#: ../doc/book/box/box_space.rst:1005
msgid ""
"box.space.tester:get{1}['x']\n"
"box.space.tester:select{1}[1]['x']"
msgstr ""
"box.space.tester:get{1}['x']\n"
"box.space.tester:select{1}[1]['x']"

#: ../doc/book/box/box_space.rst:1014
msgid "Insert a tuple into a space."
msgstr "Вставка кортежа в спейс."

#: ../doc/book/box/box_space.rst:1018
msgid "tuple to be inserted."
msgstr "вставляемый кортеж."

#: ../doc/book/box/box_space.rst:1020
msgid "the inserted tuple"
msgstr "вставленный кортеж"

#: ../doc/book/box/box_space.rst:1023
msgid ""
"**Possible errors:** :errcode:`ER_TUPLE_FOUND` if a tuple with the same "
"unique-key value already exists."
msgstr ""
"**Возможные ошибки:** ошибка :errcode:`ER_TUPLE_FOUND`, если уже существует "
"кортеж с тем же уникальным значением ключа."

#: ../doc/book/box/box_space.rst:1028
msgid ""
"tarantool> box.space.tester:insert{5000,'tuple number five thousand'}\n"
"---\n"
"- [5000, 'tuple number five thousand']\n"
"..."
msgstr ""
"tarantool> box.space.tester:insert{5000,'tuple number five thousand'}\n"
"---\n"
"- [5000, 'tuple number five thousand']\n"
"..."

#: ../doc/book/box/box_space.rst:1043
msgid ""
"Return the number of tuples in the space. If compared with :ref:`count() "
"<box_space-count>`, this method works faster because ``len()`` does not scan "
"the entire space to count the tuples."
msgstr ""
"Возврат количества кортежей в спейсе. Если сравнивать с :ref:`count() "
"<box_space-count>`, то данный метод работает быстрее, поскольку метод "
"``len()`` не сканирует весь спейс для подсчета кортежей."

#: ../doc/book/box/box_space.rst:1051
msgid "Number of tuples in the space."
msgstr "Количество кортежей в спейсе."

#: ../doc/book/box/box_space.rst:1055
msgid ""
"tarantool> box.space.tester:len()\n"
"---\n"
"- 2\n"
"..."
msgstr ""
"tarantool> box.space.tester:len()\n"
"---\n"
"- 2\n"
"..."

#: ../doc/book/box/box_space.rst:1062
msgid ""
"**Note re storage engine:** vinyl supports ``len()`` but the result may be "
"approximate. If an exact result is necessary then use :ref:`count() "
"<box_space-count>` or :ref:`pairs():length() <box_space-pairs>`."
msgstr ""
"**Примечание про движок базы данных:** vinyl поддерживает ``len()``, но "
"результат может быть неточным. Если необходим точный результат, используйте :"
"ref:`count() <box_space-count>` или :ref:`pairs():length() <box_space-"
"pairs>`."

#: ../doc/book/box/box_space.rst:1070 ../doc/book/box/box_space.rst:1155
msgid ""
"Create a \"replace :ref:`trigger <triggers>`\". The ``trigger-function`` "
"will be executed whenever a ``replace()`` or ``insert()`` or ``update()`` or "
"``upsert()`` or ``delete()`` happens to a tuple in ``<space-name>``."
msgstr ""
"Создание \":ref:`триггера <triggers>` замены\". Функция с триггером "
"``trigger-function`` будет выполняться в случае операции ``replace()`` или "
"``insert()``, или ``update()``, или ``upsert()``, или ``delete()`` над "
"кортежем в спейсе ``<space-name>``."

#: ../doc/book/box/box_space.rst:1075
msgid ""
"function which will become the trigger function; see Example #2 below for "
"details about trigger function parameters"
msgstr ""
"функция, в которой будет триггер; для получения информации о параметрах "
"функции с триггером см. Пример №2 ниже"

#: ../doc/book/box/box_space.rst:1079 ../doc/book/box/box_space.rst:1165
msgid ""
"existing trigger function which will be replaced by ``trigger-function``"
msgstr ""
"существующая функция с триггером, которую заменит новая ``trigger-function``"

#: ../doc/book/box/box_space.rst:1082 ../doc/book/box/box_space.rst:1168
msgid "nil or function pointer"
msgstr "nil или указатель функции"

#: ../doc/book/box/box_space.rst:1084
msgid ""
"If the parameters are (nil, old-trigger-function), then the old trigger is "
"deleted."
msgstr ""
"Если указаны параметры (nil, old-trigger-function), старый триггер будет "
"удален."

#: ../doc/book/box/box_space.rst:1087 ../doc/book/box/box_space.rst:1173
msgid ""
"If both parameters are omitted, then the response is a list of existing "
"trigger functions."
msgstr ""
"Если не указан ни один параметр, ответом будет список существующих функций с "
"триггером."

#: ../doc/book/box/box_space.rst:1090 ../doc/book/box/box_space.rst:1175
msgid ""
"If it is necessary to know whether the trigger activation happened due to "
"replication or on a specific connection type, the function can refer to :ref:"
"`box.session.type() <box_session-type>`."
msgstr ""
"Следует знать, что если активация триггера произошла в случае репликации или "
"определенного вида подключения, функция может ссылаться на :ref:`box.session."
"type() <box_session-type>`."

#: ../doc/book/box/box_space.rst:1094 ../doc/book/box/box_space.rst:1179
msgid ""
"Details about trigger characteristics are in the :ref:`triggers <triggers-"
"box_triggers>` section."
msgstr ""
"Подробная информация о характеристиках триггера находится в разделе :ref:"
"`Триггеры <triggers-box_triggers>`."

#: ../doc/book/box/box_space.rst:1097
msgid ""
"See also :ref:`space_object:before_replace() <box_space-before_replace>`."
msgstr ""
"См. также :ref:`space_object:before_replace() <box_space-before_replace>`."

#: ../doc/book/box/box_space.rst:1099 ../doc/book/box/box_space.rst:2168
msgid "**Example #1:**"
msgstr "**Пример №1:**"

#: ../doc/book/box/box_space.rst:1101
msgid ""
"tarantool> function f ()\n"
"         >   x = x + 1\n"
"         > end\n"
"tarantool> box.space.X:on_replace(f)"
msgstr ""
"tarantool> function f ()\n"
"         >   x = x + 1\n"
"         > end\n"
"tarantool> box.space.X:on_replace(f)"

#: ../doc/book/box/box_space.rst:1108 ../doc/book/box/box_space.rst:2213
msgid "**Example #2:**"
msgstr "**Пример №2:**"

#: ../doc/book/box/box_space.rst:1110
msgid "The ``trigger-function`` can have up to four parameters:"
msgstr "В функции с триггером может быть до 4 параметров:"

#: ../doc/book/box/box_space.rst:1112
msgid "(tuple) old value which has the contents before the request started,"
msgstr "(кортеж) старое значение до начала запроса,"

#: ../doc/book/box/box_space.rst:1113
msgid "(tuple) new value which has the contents after the request ended,"
msgstr "(кортеж) новое значение после окончания выполнения запроса,"

#: ../doc/book/box/box_space.rst:1114
msgid "(string) space name,"
msgstr "(строка) имя спейса,"

#: ../doc/book/box/box_space.rst:1115
msgid ""
"(string) type of request which is 'INSERT', 'DELETE', 'UPDATE', or 'REPLACE'."
msgstr ""
"(строка) тип запроса: 'INSERT' (вставка), 'DELETE' (удаление), "
"'UPDATE' (обновление) или 'REPLACE' (замена)."

#: ../doc/book/box/box_space.rst:1117
msgid ""
"For example, the following code causes nil and 'INSERT' to be printed when "
"the insert request is processed, and causes [1, 'Hi'] and 'DELETE' to be "
"printed when the delete request is processed:"
msgstr ""
"Например, следующий код вызывает вывод nil и 'INSERT' (вставка) при "
"обработке запроса на вставку и вывод [1, 'Hi'] и 'DELETE' (удаление) при "
"обработке запроса на удаление:"

#: ../doc/book/box/box_space.rst:1121
msgid ""
"box.schema.space.create('space_1')\n"
"box.space.space_1:create_index('space_1_index',{})\n"
"function on_replace_function (old, new, s, op) print(old) print(op) end\n"
"box.space.space_1:on_replace(on_replace_function)\n"
"box.space.space_1:insert{1,'Hi'}\n"
"box.space.space_1:delete{1}"
msgstr ""

#: ../doc/book/box/box_space.rst:1130
msgid "**Example #3:**"
msgstr "**Пример №3:**"

#: ../doc/book/box/box_space.rst:1132
msgid ""
"The following series of requests will create a space, create an index, "
"create a function which increments a counter, create a trigger, do two "
"inserts, drop the space, and display the counter value - which is 2, because "
"the function is executed once after each insert."
msgstr ""
"Следующая серия запросов создаст спейс, создаст индекс, создаст функцию, "
"которая увеличит содержимое счетчика, создаст триггер, сделает две вставки, "
"удалит спейс и отобразит значение счетчика -- 2, поскольку функция "
"выполняется однократно после каждой вставки."

#: ../doc/book/box/box_space.rst:1137
msgid ""
"tarantool> s = box.schema.space.create('space53')\n"
"tarantool> s:create_index('primary', {parts = {{field = 1, type = "
"'unsigned'}}})\n"
"tarantool> function replace_trigger()\n"
"         >   replace_counter = replace_counter + 1\n"
"         > end\n"
"tarantool> s:on_replace(replace_trigger)\n"
"tarantool> replace_counter = 0\n"
"tarantool> t = s:insert{1, 'First replace'}\n"
"tarantool> t = s:insert{2, 'Second replace'}\n"
"tarantool> s:drop()\n"
"tarantool> replace_counter"
msgstr ""

#: ../doc/book/box/box_space.rst:1160
msgid ""
"function which will become the trigger function; for the trigger function's "
"optional parameters see the description of :ref:`on_replace <box_space-"
"on_replace>`."
msgstr ""
"функция, в которой будет триггер; необязательные параметры функции с "
"триггером см. в описании :ref:`on_replace <box_space-on_replace>`."

#: ../doc/book/box/box_space.rst:1170
msgid ""
"If the parameters are ``(nil, old-trigger-function)``, then the old trigger "
"is deleted."
msgstr ""
"Если указаны параметры ``(nil, old-trigger-function)``, старый триггер будет "
"удален."

#: ../doc/book/box/box_space.rst:1182
msgid "See also :ref:`space_object:on_replace() <box_space-on_replace>`."
msgstr "См. также :ref:`space_object:on_replace() <box_space-on_replace>`."

#: ../doc/book/box/box_space.rst:1184
msgid ""
"Administrators can make replace triggers with ``on_replace()``, or make "
"triggers with ``before_replace()``. If they make both types, then all "
"``before_replace`` triggers are executed before all ``on_replace`` triggers. "
"The functions for both ``on_replace`` and ``before_replace`` triggers can "
"make changes to the database, but only the functions for ``before_replace`` "
"triggers can change the tuple that is being replaced."
msgstr ""
"Администраторы могут создавать триггеры замены с условием после замены "
"``on_replace()`` или до замены ``before_replace()``. Если созданы оба типа, "
"то все триггеры до замены ``before_replace`` выполняются до всех триггеров "
"после замены ``on_replace``. Функции для обоих типов триггеров "
"``on_replace`` и ``before_replace`` могут вносить изменения в базу данных, "
"но только функции с триггерами до замены ``before_replace`` могут изменять "
"кортеж, который будет заменен."

#: ../doc/book/box/box_space.rst:1193
msgid ""
"Since a ``before_replace`` trigger function has the extra capability of "
"making a change to the old tuple, it also can have extra overhead, to fetch "
"the old tuple before making the change. Therefore an ``on_replace`` trigger "
"is better if there is no need to change the old tuple. However, this only "
"applies for the memtx engine -- for the vinyl engine, the fetch will happen "
"for either kind of trigger. (With memtx the tuple data is stored along with "
"the index key so no extra search is necessary; with vinyl that is not the "
"case so the extra search is necessary.)"
msgstr ""
"Поскольку функция с триггером до замены ``before_replace`` может вносить "
"дополнительные изменения в старый кортеж, для нее также потребуются "
"дополнительные ресурсы для вызова старого кортежа до внесения изменений. "
"Таким образом, лучше использовать триггер после замены ``on_replace``, если "
"нет необходимости изменять старый кортеж. Тем не менее, это применимо только "
"к движку memtx -- что касается движка vinyl, такой вызов произойдет для "
"любого типа триггера. (В memtx'е данные кортежа хранятся вместе с ключом "
"индекса, поэтому нет необходимости в дополнительном поиске; для vinyl'а дело "
"обстоит иначе, поэтому нужен дополнительный поиск.)"

#: ../doc/book/box/box_space.rst:1205
msgid ""
"Where the extra capability is not needed, ``on_replace`` should be used "
"instead of ``before_replace``. Usually ``before_replace`` is used only for "
"certain replication scenarios -- it is useful for conflict resolution."
msgstr ""
"Если нет необходимости в дополнительных изменениях, следует использовать "
"``on_replace`` вместо ``before_replace``. Как правило, ``before_replace`` "
"используется только для определенных сценариев репликации -- в части "
"разрешения конфликтов."

#: ../doc/book/box/box_space.rst:1210
msgid ""
"The value that a ``before_replace`` trigger function can return affects what "
"will happen after the return. Specifically:"
msgstr ""
"Что случится после возврата значения, которое может вернуть функция с "
"триггером ``before_replace``, зависит от этого значения. А именно:"

#: ../doc/book/box/box_space.rst:1213
msgid ""
"if there is no return value, then execution proceeds, inserting|replacing "
"the new value;"
msgstr ""
"если нет возвращаемого значения, выполнение продолжается со вставкой|заменой "
"нового значения;"

#: ../doc/book/box/box_space.rst:1215
msgid "if the value is nil, then the tuple will be deleted;"
msgstr "если значение -- nil, то кортеж будет удален;"

#: ../doc/book/box/box_space.rst:1216
msgid ""
"if the value is the same as the old parameter, then no `on_replace`` "
"function will be called and the data change will be skipped"
msgstr ""
"если значение совпадает со старым, то вызывается функция ``on_replace``, и "
"изменение данных не происходит"

#: ../doc/book/box/box_space.rst:1219
msgid ""
"if the value is the same as the new parameter, then it's as if the "
"``before_replace`` function wasn't called;"
msgstr ""
"если значение совпадает с новым, то считаем, что вызова функции "
"``before_replace`` не было;"

#: ../doc/book/box/box_space.rst:1221
msgid ""
"if the value is something else, then execution proceeds, inserting|replacing "
"the new value."
msgstr ""
"если значение другое, выполнение продолжается со вставкой|заменой нового "
"значения."

#: ../doc/book/box/box_space.rst:1224
msgid ""
"However, if a trigger function returns an old tuple, or if a trigger "
"function calls :ref:`run_triggers(false) <box_space-run_triggers>`, that "
"will not affect other triggers that are activated for the same insert|update|"
"replace request."
msgstr ""
"Тем не менее, если функция с триггером возвращает старый кортеж или "
"вызывает :ref:`run_triggers(false) <box_space-run_triggers>`, это не "
"повлияет на другие триггеры, активируемые в том же запросе вставки, "
"обновления или замены."

#: ../doc/book/box/box_space.rst:1231
msgid ""
"The following are ``before_replace`` functions that have no return value, or "
"that return nil, or the same as the old parameter, or the same as the new "
"parameter, or something else."
msgstr ""
"Далее представлены функции ``before_replace``: не возвращает значение, "
"возвращает nil, возвращает совпадающее со старым значение, возвращает "
"совпадающее с новым значение, возвращает другое значение."

#: ../doc/book/box/box_space.rst:1235
msgid ""
"function f1 (old, new) return end\n"
"function f2 (old, new) return nil end\n"
"function f3 (old, new) return old end\n"
"function f4 (old, new) return new end\n"
"function f5 (old, new) return box.tuple.new({new[1],'b'}) end"
msgstr ""
"function f1 (old, new) return end\n"
"function f2 (old, new) return nil end\n"
"function f3 (old, new) return old end\n"
"function f4 (old, new) return new end\n"
"function f5 (old, new) return box.tuple.new({new[1],'b'}) end"

#: ../doc/book/box/box_space.rst:1247
msgid ""
"Search for a tuple or a set of tuples in the given space, and allow "
"iterating over one tuple at a time."
msgstr ""
"Поиск кортежа или набора кортежей в заданном спейсе и итерация по одному "
"кортежу за раз."

#: ../doc/book/box/box_space.rst:1252
msgid "value to be matched against the index key, which may be multi-part"
msgstr ""
"значение должно совпасть с индексным ключом, который может быть составным"

#: ../doc/book/box/box_space.rst:1254
msgid "see :ref:`index_object:pairs <box_index-index_pairs>`"
msgstr "см. :ref:`index_object:pairs <box_index-index_pairs>`"

#: ../doc/book/box/box_space.rst:1257
msgid ""
"`iterator <https://www.lua.org/pil/7.1.html>`_ which can be used in a for/"
"end loop or with `totable() <https://rtsisyk.github.io/luafun/reducing."
"html#fun.totable>`_"
msgstr ""
"`итератор <https://www.lua.org/pil/7.1.html>`_, который может использовать в "
"цикле for/end или с функцией `totable() <https://rtsisyk.github.io/luafun/"
"reducing.html#fun.totable>`_"

#: ../doc/book/box/box_space.rst:1263 ../doc/book/box/box_space.rst:1422
msgid "no such space;"
msgstr "отсутствие такого спейса."

#: ../doc/book/box/box_space.rst:1264 ../doc/book/box/box_space.rst:1423
msgid "wrong type."
msgstr "неправильный тип."

#: ../doc/book/box/box_space.rst:1266 ../doc/book/box/box_space.rst:1425
msgid "**Complexity factors:** Index size, Index type."
msgstr "**Факторы сложности:** Размер индекса, тип индекса."

#: ../doc/book/box/box_space.rst:1268
msgid ""
"For examples of complex ``pairs`` requests, where one can specify which "
"index to search and what condition to use (for example \"greater than\" "
"instead of \"equal to\"), see the later section :ref:`index_object:pairs "
"<box_index-index_pairs>`."
msgstr ""
"Чтобы посмотреть примеры сложных запросов ``pairs``, где можно указать "
"индекс для поиска и используемое условие (например, \"больше чем\" вместо "
"\"равен\"), см. раздел далее по тексту :ref:`index_object:pairs <box_index-"
"index_pairs>`."

#: ../doc/book/box/box_space.rst:1273
msgid ""
"For information about iterators' internal structures see the `\"Lua "
"Functional library\" <https://luafun.github.io/index.html>`_ documentation."
msgstr ""
"Для получения информации о внутренней структуре итераторов см. документацию "
"по библиотеке для функционального программирования в Lua `\"Lua Functional "
"library\" <https://luafun.github.io/index.html>`_."

#: ../doc/book/box/box_space.rst:1279
msgid ""
"tarantool> s = box.schema.space.create('space33')\n"
"---\n"
"...\n"
"tarantool> -- index 'X' has default parts {1, 'unsigned'}\n"
"tarantool> s:create_index('X', {})\n"
"---\n"
"...\n"
"tarantool> s:insert{0, 'Hello my '}, s:insert{1, 'Lua world'}\n"
"---\n"
"- [0, 'Hello my ']\n"
"- [1, 'Lua world']\n"
"...\n"
"tarantool> tmp = ''\n"
"---\n"
"...\n"
"tarantool> for k, v in s:pairs() do\n"
"         >   tmp = tmp .. v[2]\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> tmp\n"
"---\n"
"- Hello my Lua world\n"
"..."
msgstr ""
"tarantool> s = box.schema.space.create('space33')\n"
"---\n"
"...\n"
"tarantool> -- в индексе 'X' количество частей по умолчанию {1, 'unsigned'}\n"
"tarantool> s:create_index('X', {})\n"
"---\n"
"...\n"
"tarantool> s:insert{0, 'Hello my '}, s:insert{1, 'Lua world'}\n"
"---\n"
"- [0, 'Hello my ']\n"
"- [1, 'Lua world']\n"
"...\n"
"tarantool> tmp = ''\n"
"---\n"
"...\n"
"tarantool> for k, v in s:pairs() do\n"
"         >   tmp = tmp .. v[2]\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> tmp\n"
"---\n"
"- Hello my Lua world\n"
"..."

#: ../doc/book/box/box_space.rst:1310
msgid "Rename a space."
msgstr "Переименование спейса."

#: ../doc/book/box/box_space.rst:1314
msgid "new name for space"
msgstr "новое имя спейса"

#: ../doc/book/box/box_space.rst:1322
msgid ""
"tarantool> box.space.space55:rename('space56')\n"
"---\n"
"...\n"
"tarantool> box.space.space56:rename('space55')\n"
"---\n"
"..."
msgstr ""
"tarantool> box.space.space55:rename('space56')\n"
"---\n"
"...\n"
"tarantool> box.space.space56:rename('space55')\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:1336
msgid ""
"Insert a tuple into a space. If a tuple with the same primary key already "
"exists, ``box.space...:replace()`` replaces the existing tuple with a new "
"one. The syntax variants ``box.space...:replace()`` and ``box.space...:"
"put()`` have the same effect; the latter is sometimes used to show that the "
"effect is the converse of ``box.space...:get()``."
msgstr ""
"Вставка кортежа в спейс. Если уже существует кортеж с тем же первичным "
"ключом, ``box.space...:replace()`` заменит существующий кортеж новым. "
"Варианты синтаксиса (``box.space...:replace()`` и ``box.space...:put()``) "
"приведут к одному результату, но последний иногда используется как "
"противоположность ``box.space...:get()``."

#: ../doc/book/box/box_space.rst:1344
msgid "tuple to be inserted"
msgstr "вставляемый кортеж"

#: ../doc/book/box/box_space.rst:1349
msgid ""
"**Possible errors:** :errcode:`ER_TUPLE_FOUND` if a different tuple with the "
"same unique-key value already exists. (This will only happen if there is a "
"unique secondary index.)"
msgstr ""
"**Возможные ошибки:** ошибка :errcode:`ER_TUPLE_FOUND`, если уже существует "
"другой кортеж с тем же уникальным значением ключа (это произойдет только в "
"том случае, если есть уникальный вторичный индекс)."

#: ../doc/book/box/box_space.rst:1358
msgid "box.space.tester:replace{5000, 'tuple number five thousand'}"
msgstr "box.space.tester:replace{5000, 'tuple number five thousand'}"

#: ../doc/book/box/box_space.rst:1370
msgid ""
"At the time that a :ref:`trigger <triggers>` is defined, it is automatically "
"enabled - that is, it will be executed. :ref:`Replace <box_space-"
"on_replace>` triggers can be disabled with :samp:`box.space.{space-name}:"
"run_triggers(false)` and re-enabled with :samp:`box.space.{space-name}:"
"run_triggers(true)`."
msgstr ""
"На тот момент, когда :ref:`триггер <triggers>` определен, он автоматически "
"активируется, то есть он будет исполняться. Триггеры :ref:`для замены "
"<box_space-on_replace>` можно отключить с помощью :samp:`box.space.{имя-"
"спейса}:run_triggers(false)` и повторно активировать с помощью :samp:`box."
"space.{имя-спейса}:run_triggers(true)`."

#: ../doc/book/box/box_space.rst:1379
msgid ""
"The following series of requests will associate an existing function named "
"`F` with an existing space named `T`, associate the function a second time "
"with the same space (so it will be called twice), disable all triggers of "
"`T`, and delete each trigger by replacing with ``nil``."
msgstr ""
"Следующая серия запросов ассоциирует существующую функцию с именем `F` с "
"существующим спейсом с именем `T`, ассоциирует функцию во второй раз с тем "
"же спейсом (чтобы вызвать ее дважды), отключит все триггеры на `T` и удалит "
"каждый триггер, заменив его на ``nil``."

#: ../doc/book/box/box_space.rst:1384
msgid ""
"tarantool> box.space.T:on_replace(F)\n"
"tarantool> box.space.T:on_replace(F)\n"
"tarantool> box.space.T:run_triggers(false)\n"
"tarantool> box.space.T:on_replace(nil, F)\n"
"tarantool> box.space.T:on_replace(nil, F)"
msgstr ""
"tarantool> box.space.T:on_replace(F)\n"
"tarantool> box.space.T:on_replace(F)\n"
"tarantool> box.space.T:run_triggers(false)\n"
"tarantool> box.space.T:on_replace(nil, F)\n"
"tarantool> box.space.T:on_replace(nil, F)"

#: ../doc/book/box/box_space.rst:1396
msgid "Search for a tuple or a set of tuples in the given space."
msgstr "Поиск кортежа или набора кортежей в заданном спейсе."

#: ../doc/book/box/box_space.rst:1402
msgid ""
"none, any or all of the same options that :ref:`index_object:select "
"<box_index-select>` allows:  * ``options.iterator`` (:ref:`type of iterator "
"<box_index-iterator-types>`) * ``options.limit`` (maximum number of tuples) "
"* ``options.offset`` (number of tuples to skip)"
msgstr ""
"ни один, любой или все параметры, которые допускает :ref:`index_object:"
"select <box_index-select>`:  * ``options.iterator`` (:ref:`тип итератора "
"<box_index-iterator-types>`) * ``options.limit`` (максимальное количество "
"кортежей) * ``options.offset`` (количество пропускаемых кортежей)"

#: ../doc/book/box/box_space.rst:1402
msgid ""
"none, any or all of the same options that :ref:`index_object:select "
"<box_index-select>` allows:"
msgstr ""
"ни один, любой или все параметры, которые допускает :ref:`index_object:"
"select <box_index-select>`:"

#: ../doc/book/box/box_space.rst:1406
msgid ""
"``options.iterator`` (:ref:`type of iterator <box_index-iterator-types>`)"
msgstr "``options.iterator`` (:ref:`тип итератора <box_index-iterator-types>`)"

#: ../doc/book/box/box_space.rst:1407
msgid "``options.limit`` (maximum number of tuples)"
msgstr "``options.limit`` (максимальное количество кортежей)"

#: ../doc/book/box/box_space.rst:1408
msgid "``options.offset`` (number of tuples to skip)"
msgstr "``options.offset`` (количество пропускаемых кортежей)"

#: ../doc/book/box/box_space.rst:1410
msgid ""
"the tuples whose primary-key fields are equal to the fields of the passed "
"key. If the number of passed fields is less than the number of fields in the "
"primary key, then only the passed fields are compared, so ``select{1,2}`` "
"will match a tuple whose primary key is ``{1,2,3}``."
msgstr ""
"кортежи, поля первичного ключа в которых равны полям переданного ключа. Если "
"количество переданных полей меньшей количества полей первичного ключа, "
"сопоставляются только переданные поля, то есть для ``select{1,2}`` "
"совпадением будет кортеж с первичным ключом ``{1,2,3}``."

#: ../doc/book/box/box_space.rst:1415
msgid "array of tuples"
msgstr "массив кортежей"

#: ../doc/book/box/box_space.rst:1417
msgid ""
"A ``select`` request can also be done with a specific index and index "
"options, which are the subject of :ref:`index_object:select <box_index-"
"select>`."
msgstr ""
"Запрос выборки ``select`` также можно выполнить со специальными параметрами "
"индекса, которые указаны в :ref:`index_object:select <box_index-select>`."

#: ../doc/book/box/box_space.rst:1429
msgid ""
"tarantool> s = box.schema.space.create('tmp', {temporary=true})\n"
"---\n"
"...\n"
"tarantool> s:create_index('primary',{parts = { {field = 1, type = "
"'unsigned'}, {field = 2, type = 'string'}} })\n"
"---\n"
"...\n"
"tarantool> s:insert{1,'A'}\n"
"---\n"
"- [1, 'A']\n"
"...\n"
"tarantool> s:insert{1,'B'}\n"
"---\n"
"- [1, 'B']\n"
"...\n"
"tarantool> s:insert{1,'C'}\n"
"---\n"
"- [1, 'C']\n"
"...\n"
"tarantool> s:insert{2,'D'}\n"
"---\n"
"- [2, 'D']\n"
"...\n"
"tarantool> -- must equal both primary-key fields\n"
"tarantool> s:select{1,'B'}\n"
"---\n"
"- - [1, 'B']\n"
"...\n"
"tarantool> -- must equal only one primary-key field\n"
"tarantool> s:select{1}\n"
"---\n"
"- - [1, 'A']\n"
"  - [1, 'B']\n"
"  - [1, 'C']\n"
"...\n"
"tarantool> -- must equal 0 fields, so returns all tuples\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 'A']\n"
"  - [1, 'B']\n"
"  - [1, 'C']\n"
"  - [2, 'D']\n"
"...\n"
"tarantool> -- the first field must be greater than 0, and\n"
"tarantool> -- skip the first tuple, and return up to\n"
"tarantool> -- 2 tuples. This example's options all\n"
"tarantool> -- depend on index characteristics so see\n"
"tarantool> -- more explanation in index_object:select().\n"
"tarantool> s:select({0},{iterator='GT',offset=1,limit=2})\n"
"---\n"
"- - [1, 'B']\n"
"  - [1, 'C']\n"
"..."
msgstr ""
"tarantool> s = box.schema.space.create('tmp', {temporary=true})\n"
"---\n"
"...\n"
"tarantool> s:create_index('primary',{parts = { {field = 1, type = "
"'unsigned'}, {field = 2, type = 'string'}} })\n"
"---\n"
"...\n"
"tarantool> s:insert{1,'A'}\n"
"---\n"
"- [1, 'A']\n"
"...\n"
"tarantool> s:insert{1,'B'}\n"
"---\n"
"- [1, 'B']\n"
"...\n"
"tarantool> s:insert{1,'C'}\n"
"---\n"
"- [1, 'C']\n"
"...\n"
"tarantool> s:insert{2,'D'}\n"
"---\n"
"- [2, 'D']\n"
"...\n"
"tarantool> -- необходимо совпадение с двумя полями первичного ключа\n"
"tarantool> s:select{1,'B'}\n"
"---\n"
"- - [1, 'B']\n"
"...\n"
"tarantool> -- необходимо совпадение только одного поля первичного ключа\n"
"tarantool> s:select{1}\n"
"---\n"
"- - [1, 'A']\n"
"  - [1, 'B']\n"
"  - [1, 'C']\n"
"...\n"
"tarantool> -- необходимо совпадение с 0 полей, поэтому возвращает все "
"кортежи\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 'A']\n"
"  - [1, 'B']\n"
"  - [1, 'C']\n"
"  - [2, 'D']\n"
"...\n"
"tarantool> -- первое поле должно быть больше 0,\n"
"tarantool> -- пропуск первого кортежа и возврат до\n"
"tarantool> -- 2 кортежей. Все параметры в данном примере\n"
"tarantool> -- зависят от характеристик индекса, поэтому см.\n"
"tarantool> -- более подробное описание в index_object:select().\n"
"tarantool> s:select({0},{iterator='GT',offset=1,limit=2})\n"
"---\n"
"- - [1, 'B']\n"
"  - [1, 'C']\n"
"..."

#: ../doc/book/box/box_space.rst:1484
msgid ""
"As the last request in the above example shows: to make complex ``select`` "
"requests, where you can specify which index to search and what condition to "
"use (for example \"greater than\" instead of \"equal to\") and how many "
"tuples to return, it will be necessary to become familiar with :ref:"
"`index_object:select <box_index-select>`."
msgstr ""
"Как показано в последнем запросе вышеприведенного примера, чтобы выполнять "
"сложные запросы выборки ``select``, где можно указать, в каком индексе "
"производится поиск и с какими условиями (например, \"больше, чем\" вместо "
"\"равный\"), а также необходимое количество возвращаемых кортежей, "
"необходимо ознакомиться с :ref:`index_object:select <box_index-select>`."

#: ../doc/book/box/box_space.rst:1498
msgid "Deletes all tuples."
msgstr "Удаление всех кортежей."

#: ../doc/book/box/box_space.rst:1503
msgid ""
"**Complexity factors:** Index size, Index type, Number of tuples accessed."
msgstr ""
"**Факторы сложности:** Размер индекса, тип индекса, количество кортежей, к "
"которым получен доступ."

#: ../doc/book/box/box_space.rst:1507
msgid ""
"The ``truncate`` method can only be called by the user who created the "
"space, or from within a ``setuid`` function created by the user who created "
"the space. Read more about `setuid` functions in the reference for :ref:`box."
"schema.func.create() <box_schema-func_create>`."
msgstr ""
"Метод ``truncate`` может вызвать только тот пользователь, который создал "
"спейс, или другой пользователь через функцию ``setuid``, созданную "
"пользователем, который создал спейс. Более подробную информацию о функциях "
"`setuid` можно получить в справочнике по for :ref:`box.schema.func.create() "
"<box_schema-func_create>`."

#: ../doc/book/box/box_space.rst:1513
msgid "The ``truncate`` method cannot be called from within a transaction."
msgstr "Метод ``truncate`` нельзя вызвать из транзакции."

#: ../doc/book/box/box_space.rst:1517
msgid ""
"tarantool> box.space.tester:truncate()\n"
"---\n"
"...\n"
"tarantool> box.space.tester:len()\n"
"---\n"
"- 0\n"
"..."
msgstr ""
"tarantool> box.space.tester:truncate()\n"
"---\n"
"...\n"
"tarantool> box.space.tester:len()\n"
"---\n"
"- 0\n"
"..."

#: ../doc/book/box/box_space.rst:1531
msgid "Update a tuple."
msgstr "Обновление кортежа."

#: ../doc/book/box/box_space.rst:1533
msgid ""
"The ``update`` function supports operations on fields — assignment, "
"arithmetic (if the field is numeric), cutting and pasting fragments of a "
"field, deleting or inserting a field. Multiple operations can be combined in "
"a single update request, and in this case they are performed atomically and "
"sequentially. Each operation requires specification of a field number. When "
"multiple operations are present, the field number for each operation is "
"assumed to be relative to the most recent state of the tuple, that is, as if "
"all previous operations in a multi-operation update have already been "
"applied. In other words, it is always safe to merge multiple ``update`` "
"invocations into a single invocation, with no change in semantics."
msgstr ""
"Функция ``update`` поддерживает операции над полями -- присваивание, "
"арифметические операции (если поле числовое), вырезание и вставку фрагментов "
"поля, удаление или вставку поля. Несколько операций можно объединить в "
"отдельный запрос обновления, и в таком случае они будут выполняться атомарно "
"и последовательно. Для каждой операции необходимо указать номер поля. Если "
"выполняются несколько операций, то номер поля для каждой операции считается "
"относительно последнего состояния кортежа, то есть как если бы все "
"предыдущие операции в обновлении с несколькими операциями уже были "
"выполнены. Другими словами, всегда лучше объединить несколько вызовов  "
"``update`` в один без изменений семантики."

#: ../doc/book/box/box_space.rst:1545
msgid "Possible operators are:"
msgstr "Возможные операторы:"

#: ../doc/book/box/box_space.rst:1547
msgid "``+`` for addition (values must be numeric)"
msgstr "``+`` для сложения (значения должны быть числовыми)"

#: ../doc/book/box/box_space.rst:1548
msgid "``-`` for subtraction (values must be numeric)"
msgstr "``-`` для вычитания (значения должны быть числовыми)"

#: ../doc/book/box/box_space.rst:1549
msgid "``&`` for bitwise AND (values must be unsigned numeric)"
msgstr ""
"``&`` для поразрядной операции И (значения должны быть беззнаковыми числами)"

#: ../doc/book/box/box_space.rst:1550
msgid "``|`` for bitwise OR (values must be unsigned numeric)"
msgstr ""
"``|`` для поразрядной операции ИЛИ (значения должны быть беззнаковыми "
"числами)"

#: ../doc/book/box/box_space.rst:1551
msgid ""
"``^`` for bitwise :abbr:`XOR(exclusive OR)` (values must be unsigned numeric)"
msgstr ""
"``^`` для поразрядной операции Исключающее ИЛИ (значения должны быть "
"беззнаковыми числами)"

#: ../doc/book/box/box_space.rst:1553
msgid "``:`` for string splice"
msgstr "``:`` для разделения строк"

#: ../doc/book/box/box_space.rst:1554
msgid "``!`` for insertion"
msgstr "``!`` для вставки"

#: ../doc/book/box/box_space.rst:1555
msgid "``#`` for deletion"
msgstr "``#`` для удаления"

#: ../doc/book/box/box_space.rst:1556
msgid "``=`` for assignment"
msgstr "``=`` для присваивания"

#: ../doc/book/box/box_space.rst:1558
msgid ""
"For ``!`` and ``=`` operations the field number can be ``-1``, meaning the "
"last field in the tuple."
msgstr ""
"Для операций ``!`` и ``=`` номер поля может быть ``-1``, что означает "
"последнее поле в кортеже."

#: ../doc/book/box/box_space.rst:1565 ../doc/book/box/box_space.rst:1686
msgid "operation type represented in string"
msgstr "тип операции, представленный строкой"

#: ../doc/book/box/box_space.rst:1566 ../doc/book/box/box_space.rst:1687
msgid ""
"what field the operation will apply to. The field number can be negative, "
"meaning the position from the end of tuple. (#tuple + negative field number "
"+ 1)"
msgstr ""
"к какому полю применяется операция. Номер поля может быть отрицательным, что "
"означает, что позиция рассчитывается с конца кортежа. (#кортеж + "
"отрицательный номер поля + 1)"

#: ../doc/book/box/box_space.rst:1570 ../doc/book/box/box_space.rst:1691
msgid "what value will be applied"
msgstr "какое значение применяется"

#: ../doc/book/box/box_space.rst:1572
msgid "the updated tuple."
msgstr "обновленный кортеж."

#: ../doc/book/box/box_space.rst:1575
msgid "**Possible errors:** it is illegal to modify a primary-key field."
msgstr "**Возможные ошибки:** нельзя изменять поле первичного ключа."

#: ../doc/book/box/box_space.rst:1577 ../doc/book/box/box_space.rst:1701
msgid ""
"**Complexity factors:** Index size, Index type, number of indexes accessed, "
"WAL settings."
msgstr ""
"**Факторы сложности** Размер индекса, тип индекса, количество кортежей, к "
"которым получен доступ, настройки журнала упреждающей записи (WAL)."

#: ../doc/book/box/box_space.rst:1580
msgid "Thus, in the instruction:"
msgstr "Таким образом, в инструкции:"

#: ../doc/book/box/box_space.rst:1582
msgid "s:update(44, {{'+', 1, 55 }, {'=', 3, 'x'}})"
msgstr "s:update(44, {{'+', 1, 55 }, {'=', 3, 'x'}})"

#: ../doc/book/box/box_space.rst:1586
msgid ""
"the primary-key value is ``44``, the operators are ``'+'`` and ``'='`` "
"meaning *add a value to a field and then assign a value to a field*, the "
"first affected field is field ``1`` and the value which will be added to it "
"is ``55``, the second affected field is field ``3`` and the value which will "
"be assigned to it is ``'x'``."
msgstr ""
"значение первичного ключа равно ``44``, заданы операторы ``'+'`` и ``'='``, "
"что означает *прибавление значение к полю, а затем присваивание значения "
"полю*, первое затронутое поле -- это поле ``1``, к нему прибавляется "
"значение ``55``, второе затронутое поле -- это поле ``3``, ему присваивается "
"значение ``'x'``."

#: ../doc/book/box/box_space.rst:1594
msgid ""
"Assume that initially there is a space named ``tester`` with a primary-key "
"index whose type is ``unsigned``. There is one tuple, with ``field[1]`` = "
"``999`` and ``field[2]`` = ``'A'``."
msgstr ""
"Предположим, что изначально есть спейс под названием ``tester`` с первичным "
"индексом, тип которого -- ``unsigned``. Есть один кортеж с полем №1 "
"``field[1]`` = ``999`` и полем №2 ``field[2]`` = ``'A'``."

#: ../doc/book/box/box_space.rst:1598
msgid ""
"In the update: |br| ``box.space.tester:update(999, {{'=', 2, 'B'}})`` |br| "
"The first argument is ``tester``, that is, the affected space is ``tester``. "
"The second argument is ``999``, that is, the affected tuple is identified by "
"primary key value = 999. The third argument is ``=``, that is, there is one "
"operation — *assignment to a field*. The fourth argument is ``2``, that is, "
"the affected field is ``field[2]``. The fifth argument is ``'B'``, that is, "
"``field[2]`` contents change to ``'B'``. Therefore, after this update, "
"``field[1]`` = ``999`` and ``field[2]`` = ``'B'``."
msgstr ""
"В обновлении: |br| ``box.space.tester:update(999, {{'=', 2, 'B'}})`` |br| "
"Первый аргумент -- это ``tester``, то есть обновление происходит в спейсе "
"``tester``. Второй аргумент -- ``999``, то есть затронутый кортеж "
"определяется по значению первичного ключа = 999. Третий аргумент -- ``=``, "
"то есть будет одна операция -- *присваивание полю*. Четвертый аргумент -- "
"``2``, то есть будет затронуто поле №2 ``field[2]``. Пятый аргумент -- "
"``'B'``, то есть содержимое ``field[2]`` изменится на ``'B'``. Таким "
"образом, после данного обновления ``field[1]`` = ``999``, а ``field[2]`` = "
"``'B'``."

#: ../doc/book/box/box_space.rst:1609
msgid ""
"In the update: |br| ``box.space.tester:update({999}, {{'=', 2, 'B'}})`` |br| "
"the arguments are the same, except that the key is passed as a Lua table "
"(inside braces). This is unnecessary when the primary key has only one "
"field, but would be necessary if the primary key had more than one field. "
"Therefore, after this update, ``field[1]`` = ``999`` and ``field[2]`` = "
"``'B'`` (no change)."
msgstr ""
"В обновлении: |br| ``box.space.tester:update({999}, {{'=', 2, 'B'}})`` |br| "
"Аргументы повторяются за исключением того, что ключ передается в виде Lua-"
"таблицы (в фигурных скобках). В этом нет необходимости, если первичный ключ "
"содержит только одно поле, но было бы необходимо, если бы в первичном ключе "
"было больше одного поля. Таким образом, после данного обновления "
"``field[1]`` = ``999``, а ``field[2]`` = ``'B'`` (без изменений)."

#: ../doc/book/box/box_space.rst:1616
msgid ""
"In the update: |br| ``box.space.tester:update({999}, {{'=', 3, 1}})`` |br| "
"the arguments are the same, except that the fourth argument is ``3``, that "
"is, the affected field is ``field[3]``. It is okay that, until now, "
"``field[3]`` has not existed. It gets added. Therefore, after this update, "
"``field[1]`` = ``999``, ``field[2]`` = ``'B'``, ``field[3]`` = ``1``."
msgstr ""
"В обновлении: |br| ``box.space.tester:update({999}, {{'=', 3, 1}})`` |br| "
"Аргументы повторяются за исключением того, что четвертым аргументом будет "
"``3``, то есть будет затронуто поле №3 ``field[3]``. Ничего страшного, что "
"до этого поле ``field[3]`` не существовало. Оно добавится. Таким образом, "
"после данного обновления ``field[1]`` = ``999``, ``field[2]`` = ``'B'``, "
"``field[3]`` = ``1``."

#: ../doc/book/box/box_space.rst:1623
msgid ""
"In the update: |br| ``box.space.tester:update({999}, {{'+', 3, 1}})`` |br| "
"the arguments are the same, except that the third argument is ``'+'``, that "
"is, the operation is addition rather than assignment. Since ``field[3]`` "
"previously contained ``1``, this means we're adding ``1`` to ``1``. "
"Therefore, after this update, ``field[1]`` = ``999``, ``field[2]`` = "
"``'B'``, ``field[3]`` = ``2``."
msgstr ""
"В обновлении: |br| ``box.space.tester:update({999}, {{'+', 3, 1}})`` |br| "
"Аргументы повторяются за исключением того, что третьим аргументом будет "
"``'+'``, то есть будет операция добавления, а не присваивания. "
"Поскольку``field[3]`` ранее содержало значение ``1``, это означает, что к "
"``1`` прибавится ``1``. Таким образом, после данного обновления ``field[1]`` "
"= ``999``, ``field[2]`` = ``'B'``, ``field[3]`` = ``2``."

#: ../doc/book/box/box_space.rst:1631
msgid ""
"In the update: |br| ``box.space.tester:update({999}, {{'|', 3, 1}, {'=', 2, "
"'C'}})`` |br| the idea is to modify two fields at once. The formats are "
"``'|'`` and ``=``, that is, there are two operations, OR and assignment. The "
"fourth and fifth arguments mean that ``field[3]`` gets OR'ed with ``1``. The "
"seventh and eighth arguments mean that ``field[2]`` gets assigned ``'C'``. "
"Therefore, after this update, ``field[1]`` = ``999``, ``field[2]`` = "
"``'C'``, ``field[3]`` = ``3``."
msgstr ""
"В обновлении: |br| ``box.space.tester:update({999}, {{'|', 3, 1}, {'=', 2, "
"'C'}})`` |br| Основная идея состоит в том, чтобы изменить одновременно два "
"поля. Форматами будут ``'|'`` и ``=``, то есть имеем две операции: ИЛИ и "
"присваивание. Четвертый и пятый аргументы означают, что над полем "
"``field[3]`` проводится операция ИЛИ со значением ``1``. Седьмой и восьмой "
"аргументы означают, что полю ``field[2]`` присваивается ``'C'``. Таким "
"образом, после данного обновления ``field[1]`` = ``999``, ``field[2]`` = "
"``'C'``, ``field[3]`` = ``3``."

#: ../doc/book/box/box_space.rst:1640
msgid ""
"In the update: |br| ``box.space.tester:update({999}, {{'#', 2, 1}, {'-', 2, "
"3}})`` |br| The idea is to delete ``field[2]``, then subtract ``3`` from "
"``field[3]``. But after the delete, there is a renumbering, so ``field[3]`` "
"becomes ``field[2]`` before we subtract ``3`` from it, and that's why the "
"seventh argument is ``2``, not ``3``. Therefore, after this update, "
"``field[1]`` = ``999``, ``field[2]`` = ``0``."
msgstr ""
"В обновлении: |br| ``box.space.tester:update({999}, {{'#', 2, 1}, {'-', 2, "
"3}})`` |br| Основная идея состоит в том, чтобы удалить поле ``field[2]``, а "
"затем вычесть ``3`` из ``field[3]``. Но после удаления, произойдет "
"перенумерация, поэтому поле ``field[3]`` становится ``field[2]`` до того, "
"как мы вычтем из него ``3``, вот почему седьмым аргументом будет ``2``, а не "
"``3``. Таким образом, после данного обновления ``field[1]`` = ``999``, "
"``field[2]`` = ``0``."

#: ../doc/book/box/box_space.rst:1648
msgid ""
"In the update: |br| ``box.space.tester:update({999}, {{'=', 2, 'XYZ'}})`` |"
"br| we're making a long string so that splice will work in the next example. "
"Therefore, after this update, ``field[1]`` = ``999``, ``field[2]`` = "
"``'XYZ'``."
msgstr ""
"В обновлении: |br| ``box.space.tester:update({999}, {{'=', 2, 'XYZ'}})`` |"
"br| Создаем длинную строку, чтобы в следующем примере сработало разделение. "
"Таким образом, после данного обновления ``field[1]`` = ``999``, ``field[2]`` "
"= ``'XYZ'``."

#: ../doc/book/box/box_space.rst:1653
msgid ""
"In the update: |br| ``box.space.tester:update({999}, {{':', 2, 2, 1, "
"'!!'}})`` |br| The third argument is ``':'``, that is, this is the example "
"of splice. The fourth argument is ``2`` because the change will occur in "
"``field[2]``. The fifth argument is 2 because deletion will begin with the "
"second byte. The sixth argument is 1 because the number of bytes to delete "
"is 1. The seventh argument is ``'!!'``, because ``'!!'`` is to be added at "
"this position. Therefore, after this update, ``field[1]`` = ``999``, "
"``field[2]`` = ``'X!!Z'``."
msgstr ""
"В обновлении: |br| ``box.space.tester:update({999}, {{':', 2, 2, 1, "
"'!!'}})`` |br| Третьим аргументом будет ``':'``, то есть это пример "
"разделения. Четвертым аргументом будет ``2``, поскольку изменение произойдет "
"в поле ``field[2]``. Пятым аргументом будет 2, поскольку удаление начнется "
"со второго байта. Шестым аргументом будет 1, количество удаляемых байтов -- "
"1. Седьмым аргументом будет ``'!!'``, поскольку в данном положении будет "
"добавляться ``'!!'``. Таким образом, после данного обновления ``field[1]`` = "
"``999``, ``field[2]`` = ``'X!!Z'``."

#: ../doc/book/box/box_space.rst:1670
msgid "Update or insert a tuple."
msgstr "Обновление или вставка кортежа."

#: ../doc/book/box/box_space.rst:1672
msgid ""
"If there is an existing tuple which matches the key fields of ``tuple``, "
"then the request has the same effect as :ref:`space_object:update() "
"<box_space-update>` and the ``{{operator, field_no, value}, ...}`` parameter "
"is used. If there is no existing tuple which matches the key fields of "
"``tuple``, then the request has the same effect as :ref:`space_object:"
"insert() <box_space-insert>` and the ``{tuple}`` parameter is used. However, "
"unlike ``insert`` or ``update``, ``upsert`` will not read a tuple and "
"perform error checks before returning -- this is a design feature which "
"enhances throughput but requires more caution on the part of the user."
msgstr ""
"Если существует кортеж, который совпадает с полями ключа ``tuple``, запрос "
"приведет к тому же результату, что и :ref:`space_object:update() <box_space-"
"update>`, и используется параметр ``{{operator, field_no, value}, ...}``. "
"Если нет кортежа, который совпадает с полями ключа ``tuple``, запрос "
"приведет к тому же результату, что и  :ref:`space_object:insert() <box_space-"
"insert>`, и используется параметр ``{tuple}``. Однако, в отличие от "
"``insert`` или ``update``, ``upsert`` не считывает кортеж и не проверяет на "
"ошибки перед возвратом -- это конструктивная особенность, которая "
"увеличивает быстродействие, но требует большей осторожности со стороны "
"пользователя."

#: ../doc/book/box/box_space.rst:1684
msgid "default tuple to be inserted, if analogue isn't found"
msgstr "вставляемый по умолчанию кортеж, если не найдет аналог"

#: ../doc/book/box/box_space.rst:1693
msgid "null"
msgstr "null"

#: ../doc/book/box/box_space.rst:1697
msgid "It is illegal to modify a primary-key field."
msgstr "Нельзя изменять поле первичного ключа."

#: ../doc/book/box/box_space.rst:1698
msgid ""
"It is illegal to use upsert with a space that has a unique secondary index."
msgstr ""
"Нельзя проводить операцию upsert в спейсе, в котором есть уникальный "
"вторичный индекс."

#: ../doc/book/box/box_space.rst:1706
msgid "box.space.tester:upsert({12,'c'}, {{'=', 3, 'a'}, {'=', 4, 'b'}})"
msgstr "box.space.tester:upsert({12,'c'}, {{'=', 3, 'a'}, {'=', 4, 'b'}})"

#: ../doc/book/box/box_space.rst:1718
msgid ""
"Users can define any functions they want, and associate them with spaces: in "
"effect they can make their own space methods. They do this by:"
msgstr ""
"Пользователи могут сами определять любые желаемые функции и связывать их со "
"спейсами: фактически они могут создавать собственные методы для работы со "
"спейсом. Это можно сделать так:"

#: ../doc/book/box/box_space.rst:1722
msgid "creating a Lua function,"
msgstr "создать Lua-функцию,"

#: ../doc/book/box/box_space.rst:1723
msgid ""
"adding the function name to a predefined global variable which has type = "
"table, and"
msgstr ""
"добавить имя функции в заданную глобальную переменную с типом \"таблица"
"\" (table),"

#: ../doc/book/box/box_space.rst:1725
msgid ""
"invoking the function any time thereafter, as long as the server is up, by "
"saying ``space_object:function-name([parameters])``."
msgstr ""
"впоследствии в любое время, пока работает сервер, вызвать функцию с помощью "
"``объект_спейса:имя-функции([параметры])``."

#: ../doc/book/box/box_space.rst:1728
msgid ""
"The predefined global variable is ``box.schema.space_mt``. Adding to ``box."
"schema.space_mt`` makes the method available for all spaces."
msgstr ""
"Задана глобальная переменная ``box.schema.space_mt``. Метод, добавленный в "
"``box.schema.space_mt``, будет доступен для всех спейсов."

#: ../doc/book/box/box_space.rst:1731
msgid ""
"Alternatively, user-defined methods can be made available for only one "
"space, by calling ``getmetatable(space_object)`` and then adding the "
"function name to the meta table. See also the example for :ref:`index_object:"
"user_defined() <box_index-user_defined>`."
msgstr ""
"Можно также сделать задаваемый пользователем метод доступным только для "
"одного индекса путем вызова ``getmetatable(объект_спейса)`` и последующего "
"добавления имени функции в метатаблицу. См. также пример для :ref:"
"`index_object:user_defined() <box_index-user_defined>`."

#: ../doc/book/box/box_space.rst:1736
msgid "an :ref:`object reference <app_server-object_reference>`."
msgstr ":ref:`ссылка на объект <app_server-object_reference>`."

#: ../doc/book/box/box_space.rst:1738
msgid "whatever the user defines"
msgstr "то, что определяет пользователь"

#: ../doc/book/box/box_space.rst:1742
msgid ""
"-- Visible to any space, no parameters.\n"
"-- After these requests, the value of global_variable will be 6.\n"
"box.schema.space.create('t')\n"
"box.space.t:create_index('i')\n"
"global_variable = 5\n"
"function f(space_arg) global_variable = global_variable + 1 end\n"
"box.schema.space_mt.counter = f\n"
"box.space.t:counter()"
msgstr ""
"-- Доступный для любого спейса, без параметров.\n"
"-- После таких запросов значение глобальной переменной global_variable будет "
"6.\n"
"box.schema.space.create('t')\n"
"box.space.t:create_index('i')\n"
"global_variable = 5\n"
"function f(space_arg) global_variable = global_variable + 1 end\n"
"box.schema.space_mt.counter = f\n"
"box.space.t:counter()"

#: ../doc/book/box/box_space.rst:1758
msgid ""
"Create a check constraint. A check constraint is a requirement that must be "
"met when a tuple is inserted or updated in a space. Check constraints "
"created with ``space_object:create_check_constraint`` have the same effect "
"as check constraints created with an SQL CHECK() clause in a :ref:`CREATE "
"TABLE statement <sql_create_table>`."
msgstr ""

#: ../doc/book/box/box_space.rst:1767
#, fuzzy
msgid ""
"name of check constraint, which should conform to the :ref:`rules for object "
"names <app_server-names>`"
msgstr ""
"имя пользователя, которое должно соответствовать :ref:`правилам именования "
"объектов <app_server-names>`"

#: ../doc/book/box/box_space.rst:1769
msgid "SQL code of an expression which must return a boolean result"
msgstr ""

#: ../doc/book/box/box_space.rst:1771
msgid "check constraint object"
msgstr ""

#: ../doc/book/box/box_space.rst:1772
msgid "check_constraint_object"
msgstr ""

#: ../doc/book/box/box_space.rst:1774
msgid ""
"The space must be formatted with :ref:`space_object:format() <box_space-"
"format>` so that the expression can contain field names. The space must be "
"empty. The space must not be a system space."
msgstr ""

#: ../doc/book/box/box_space.rst:1778
msgid ""
"The expression must return true or false and should be deterministic. The "
"expresion may be any SQL (not Lua) expression containing field names, built-"
"in function names, literals, and operators. Not subqueries. If a field name "
"contains lower case characters, it must be enclosed in \"double quotes\"."
msgstr ""

#: ../doc/book/box/box_space.rst:1783
msgid ""
"Check constraints are checked before the request is performed, at the same "
"time as Lua :ref:`before_replace triggers <box_space-before_replace>`. If "
"there is more than one check constraint or before_replace trigger, then they "
"are ordered according to time of creation. (This is a change from the "
"earlier behavior of check constraints, which caused checking before the "
"tuple was formed.)"
msgstr ""

#: ../doc/book/box/box_space.rst:1790
msgid ""
"Check constraints can be dropped with :samp:`space_object:"
"{check_constraint_name}:drop()`."
msgstr ""

#: ../doc/book/box/box_space.rst:1794
msgid ""
"box.schema.space.create('t')\n"
"box.space.t:format({{name = 'f1', type = 'unsigned'},\n"
"                    {name = 'f2', type = 'string'},\n"
"                    {name = 'f3', type = 'string'}})\n"
"box.space.t:create_index('i')\n"
"box.space.t:create_check_constraint('c1', [[\"f2\" > 'A']])\n"
"box.space.t:create_check_constraint('c2',\n"
"                        [[\"f2\"=UPPER(\"f3\") AND NOT \"f2\" LIKE '__']])\n"
"-- This insert will fail, constraint c1 expression returns false\n"
"box.space.t:insert{1, 'A', 'A'}\n"
"-- This insert will fail, constraint c2 expression returns false\n"
"box.space.t:insert{1, 'B', 'c'}\n"
"-- This insert will succeed, both constraint expressions return true\n"
"box.space.t:insert{1, 'B', 'b'}\n"
"-- This update will fail, constraint c2 expression returns false\n"
"box.space.t:update(1, {{'=', 2, 'xx'}, {'=', 3, 'xx'}})"
msgstr ""

#: ../doc/book/box/box_space.rst:1813
msgid ""
"A list of check constraints is in :ref:`space_object._ck_constraint "
"<box_space-ck_constraint>`."
msgstr ""

#: ../doc/book/box/box_space.rst:1819
msgid ""
"Whether or not this space is enabled. The value is ``false`` if the space "
"has no index."
msgstr ""
"Определение активности спейса. Значение ``false`` указывает на отсутствие "
"индекса."

#: ../doc/book/box/box_space.rst:1826
msgid ""
"The required field count for all tuples in this space. The field_count can "
"be set initially with:"
msgstr ""
"Необходимость подсчета полей всех кортежей в спейсе, который можно "
"изначально задать следующим образом:"

#: ../doc/book/box/box_space.rst:1866
msgid ""
"box.schema.space.create(..., {\n"
"    ... ,\n"
"    field_count = *field_count_value* ,\n"
"    ...\n"
"})"
msgstr ""
"box.schema.space.create(..., {\n"
"    ... ,\n"
"    field_count = *field_count_value* ,\n"
"    ...\n"
"})"

#: ../doc/book/box/box_space.rst:1838
msgid ""
"The default value is ``0``, which means there is no required field count."
msgstr ""
"По умолчанию, будет использоваться значение ``0``, что указывает на "
"отсутствие необходимости подсчета полей."

#: ../doc/book/box/box_space.rst:1842
msgid ""
"tarantool> box.space.tester.field_count\n"
"---\n"
"- 0\n"
"..."
msgstr ""
"tarantool> box.space.tester.field_count\n"
"---\n"
"- 0\n"
"..."

#: ../doc/book/box/box_space.rst:1853
msgid ""
"Ordinal space number. Spaces can be referenced by either name or number. "
"Thus, if space ``tester`` has ``id = 800``, then ``box.space.tester:insert{0}"
"`` and ``box.space[800]:insert{0}`` are equivalent requests."
msgstr ""
"Порядковый номер спейса. На спейс можно ссылаться либо по имени, либо по "
"номеру. Таким образом, если идентификатором спейса ``tester`` будет ``id = "
"800``, то ``box.space.tester:insert{0}`` и ``box.space[800]:insert{0}`` "
"представляют собой равнозначные запросы."

#: ../doc/book/box/box_space.rst:1860
msgid ""
"tarantool> box.space.tester.id\n"
"---\n"
"- 512\n"
"..."
msgstr ""
"tarantool> box.space.tester.id\n"
"---\n"
"- 512\n"
"..."

#: ../doc/book/box/box_space.rst:1871
msgid ""
"A container for all defined indexes. There is a Lua object of type :ref:`box."
"index <box_index>` with methods to search tuples and iterate over them in "
"predefined order."
msgstr ""
"Контейнер для всех определенных индексов. Есть Lua-объект типа :ref:`box."
"index <box_index>` с методами поиска кортежей и итерации по ним в заданном "
"порядке."

#: ../doc/book/box/box_space.rst:1875
msgid ""
"To reset, use :ref:`box.stat.reset() <box_introspection-box_stat_reset>`."
msgstr ""
"Чтобы сбросить, use :ref:`box.stat.reset() <box_introspection-"
"box_stat_reset>`."

#: ../doc/book/box/box_space.rst:1877
msgid "table"
msgstr "таблица"

#: ../doc/book/box/box_space.rst:1881
msgid ""
"# checking the number of indexes for space 'tester'\n"
"tarantool> local counter=0; for i=0,#box.space.tester.index do\n"
"  if box.space.tester.index[i]~=nil then counter=counter+1 end\n"
"  end; print(counter)\n"
"1\n"
"---\n"
"...\n"
"# checking the type of index 'primary'\n"
"tarantool> box.space.tester.index.primary.type\n"
"---\n"
"- TREE\n"
"..."
msgstr ""
"# проверка количества индексов для спейса 'tester'\n"
"tarantool> local counter=0; for i=0,#box.space.tester.index do\n"
"  if box.space.tester.index[i]~=nil then counter=counter+1 end\n"
"  end; print(counter)\n"
"1\n"
"---\n"
"...\n"
"# проверка, что тип индекса -- первичный 'primary'\n"
"tarantool> box.space.tester.index.primary.type\n"
"---\n"
"- TREE\n"
"..."

#: ../doc/book/box/box_space.rst:1900
msgid ""
"``_cluster`` is a system space for support of the :ref:`replication feature "
"<replication>`."
msgstr ""
"``_cluster`` -- это системный спейс для поддержки :ref:`функции репликации "
"<replication>`."

#: ../doc/book/box/box_space.rst:1907
#, fuzzy
msgid ""
"``_func`` is a system space with function tuples made by :ref:`box.schema."
"func.create() <box_schema-func_create>` or :ref:`box.schema.func.create(func-"
"name [, {options-with-body}]) <box_schema-func_create_with-body>`."
msgstr ""
"``_func`` -- это системный спейс, который содержит кортежи с функциями, "
"созданными с помощью :ref:`box.schema.func.create() <box_schema-"
"func_create>`."

#: ../doc/book/box/box_space.rst:1912 ../doc/book/box/box_space.rst:1978
#: ../doc/book/box/box_space.rst:2037 ../doc/book/box/box_space.rst:2157
#: ../doc/book/box/box_space.rst:2273 ../doc/book/box/box_space.rst:2412
msgid "Tuples in this space contain the following fields:"
msgstr "Кортежи в данном спейсе включают в себя следующие поля:"

#: ../doc/book/box/box_space.rst:1914
msgid "id (integer identifier),"
msgstr "id (цельночисленный идентификатор),"

#: ../doc/book/box/box_space.rst:1915
msgid "owner (integer identifier),"
msgstr "владелец (целочисленный идентификатор)"

#: ../doc/book/box/box_space.rst:1916
msgid "the function name,"
msgstr "имя функции,"

#: ../doc/book/box/box_space.rst:1917
msgid "the setuid flag,"
msgstr "флаг setuid,"

#: ../doc/book/box/box_space.rst:1918
msgid "a language name (optional): 'LUA' (default) or 'C'."
msgstr "название языка (необязательно): 'LUA' (по умолчанию) or 'C'."

#: ../doc/book/box/box_space.rst:1919
msgid "the body"
msgstr ""

#: ../doc/book/box/box_space.rst:1920
msgid "the is_deterministic flag"
msgstr ""

#: ../doc/book/box/box_space.rst:1921
msgid "the is_sandboxed flag"
msgstr ""

#: ../doc/book/box/box_space.rst:1922
#, fuzzy
msgid "options"
msgstr "Параметры:"

#: ../doc/book/box/box_space.rst:1924
#, fuzzy
msgid ""
"If the function tuple was made in the older way without specification of "
"``body``, then the ``_func`` space will contain default values for the body "
"and the is_deterministic flag and the is_sandboxed flag. Such function "
"tuples are called \"not persistent\". You continue to create Lua functions "
"in the usual way, by saying ``function function_name () ... end``, without "
"adding anything in the ``_func`` space. The ``_func`` space only exists for "
"storing function tuples so that their names can be used within :ref:`grant/"
"revoke <authentication-owners_privileges>` functions."
msgstr ""
"Спейс ``_func`` не содержит саму функцию. Lua-функции создаются по-прежнему "
"с помощью ``function имя_функции () ... end`` без каких-либо добавлений в "
"спейс ``_func``. Спейс ``_func`` предназначен лишь для хранения кортежей с "
"функциями так, чтобы их имена могли использоваться в функциях :ref:`выдачи/"
"отмены прав <authentication-owners_privileges>`."

#: ../doc/book/box/box_space.rst:1935
msgid ""
"If the function tuple was made the newer way with specification of ``body``, "
"then all the fields may contain non-default values. Such functions are "
"called \"persistent\". They should be invoked with :samp:`box.func.{func-"
"name}:call([parameters])`."
msgstr ""

#: ../doc/book/box/box_space.rst:1940 ../doc/book/box/box_space.rst:2047
msgid "You can:"
msgstr "Доступны следующие операции:"

#: ../doc/book/box/box_space.rst:1942
msgid ""
"Create a ``_func`` tuple with :ref:`box.schema.func.create() <box_schema-"
"func_create>`,"
msgstr ""
"Создание кортежа в ``_func`` с помощью :ref:`box.schema.func.create() "
"<box_schema-func_create>`,"

#: ../doc/book/box/box_space.rst:1944
msgid ""
"Drop a ``_func`` tuple with :ref:`box.schema.func.drop() <box_schema-"
"func_drop>`,"
msgstr ""
"Удаление кортежа в ``_func`` с помощью :ref:`box.schema.func.drop() "
"<box_schema-func_drop>`,"

#: ../doc/book/box/box_space.rst:1946
msgid ""
"Check whether a ``_func`` tuple exists with :ref:`box.schema.func.exists() "
"<box_schema-func_exists>`."
msgstr ""
"Проверка наличия кортежа в ``_func`` с помощью :ref:`box.schema.func."
"exists() <box_schema-func_exists>`."

#: ../doc/book/box/box_space.rst:1951
msgid ""
"In the following example, we create a function named ‘f7’, put it into "
"Tarantool's ``_func`` space and grant 'execute' privilege for this function "
"to 'guest' user."
msgstr ""
"В следующем примере создадим функцию с именем ‘f7’, поместим ее в спейс "
"``_func`` в Tarantool'е и выдадим права на 'выполнение' этой функции "
"пользователю 'guest'."

#: ../doc/book/box/box_space.rst:1955
msgid ""
"tarantool> function f7()\n"
"         >  box.session.uid()\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> box.schema.func.create('f7')\n"
"---\n"
"...\n"
"tarantool> box.schema.user.grant('guest', 'execute', 'function', 'f7')\n"
"---\n"
"...\n"
"tarantool> box.schema.user.revoke('guest', 'execute', 'function', 'f7')\n"
"---\n"
"..."
msgstr ""
"tarantool> function f7()\n"
"         >  box.session.uid()\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> box.schema.func.create('f7')\n"
"---\n"
"...\n"
"tarantool> box.schema.user.grant('guest', 'execute', 'function', 'f7')\n"
"---\n"
"...\n"
"tarantool> box.schema.user.revoke('guest', 'execute', 'function', 'f7')\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:1976
msgid "``_index`` is a system space."
msgstr "``_index`` -- это системный спейс."

#: ../doc/book/box/box_space.rst:1980
msgid "``id`` (= id of space),"
msgstr "``id`` (= идентификатор спейса),"

#: ../doc/book/box/box_space.rst:1981
msgid "``iid`` (= index number within space),"
msgstr "``iid`` (= номер индекса в спейсе),"

#: ../doc/book/box/box_space.rst:1982
msgid "``name``,"
msgstr "``name``,"

#: ../doc/book/box/box_space.rst:1983
msgid "``type``,"
msgstr "``type``,"

#: ../doc/book/box/box_space.rst:1984
msgid ""
"``opts`` (e.g. unique option), [``tuple-field-no``, ``tuple-field-"
"type`` ...]."
msgstr ""
"``opts`` (например, уникальная опция), [``tuple-field-no``, ``tuple-field-"
"type`` ...]."

#: ../doc/book/box/box_space.rst:1986
msgid "Here is what ``_index`` contains in a typical installation:"
msgstr "Вот что при обычной установке включает в себя спейс ``_index``:"

#: ../doc/book/box/box_space.rst:1988
msgid ""
"tarantool> box.space._index:select{}\n"
"---\n"
"- - [272, 0, 'primary', 'tree', {'unique': true}, [[0, 'string']]]\n"
"  - [280, 0, 'primary', 'tree', {'unique': true}, [[0, 'unsigned']]]\n"
"  - [280, 1, 'owner', 'tree', {'unique': false}, [[1, 'unsigned']]]\n"
"  - [280, 2, 'name', 'tree', {'unique': true}, [[2, 'string']]]\n"
"  - [281, 0, 'primary', 'tree', {'unique': true}, [[0, 'unsigned']]]\n"
"  - [281, 1, 'owner', 'tree', {'unique': false}, [[1, 'unsigned']]]\n"
"  - [281, 2, 'name', 'tree', {'unique': true}, [[2, 'string']]]\n"
"  - [288, 0, 'primary', 'tree', {'unique': true}, [[0, 'unsigned'], [1, "
"'unsigned']]]\n"
"  - [288, 2, 'name', 'tree', {'unique': true}, [[0, 'unsigned'], [2, "
"'string']]]\n"
"  - [289, 0, 'primary', 'tree', {'unique': true}, [[0, 'unsigned'], [1, "
"'unsigned']]]\n"
"  - [289, 2, 'name', 'tree', {'unique': true}, [[0, 'unsigned'], [2, "
"'string']]]\n"
"  - [296, 0, 'primary', 'tree', {'unique': true}, [[0, 'unsigned']]]\n"
"  - [296, 1, 'owner', 'tree', {'unique': false}, [[1, 'unsigned']]]\n"
"  - [296, 2, 'name', 'tree', {'unique': true}, [[2, 'string']]]\n"
"---\n"
"..."
msgstr ""
"tarantool> box.space._index:select{}\n"
"---\n"
"- - [272, 0, 'primary', 'tree', {'unique': true}, [[0, 'string']]]\n"
"  - [280, 0, 'primary', 'tree', {'unique': true}, [[0, 'unsigned']]]\n"
"  - [280, 1, 'owner', 'tree', {'unique': false}, [[1, 'unsigned']]]\n"
"  - [280, 2, 'name', 'tree', {'unique': true}, [[2, 'string']]]\n"
"  - [281, 0, 'primary', 'tree', {'unique': true}, [[0, 'unsigned']]]\n"
"  - [281, 1, 'owner', 'tree', {'unique': false}, [[1, 'unsigned']]]\n"
"  - [281, 2, 'name', 'tree', {'unique': true}, [[2, 'string']]]\n"
"  - [288, 0, 'primary', 'tree', {'unique': true}, [[0, 'unsigned'], [1, "
"'unsigned']]]\n"
"  - [288, 2, 'name', 'tree', {'unique': true}, [[0, 'unsigned'], [2, "
"'string']]]\n"
"  - [289, 0, 'primary', 'tree', {'unique': true}, [[0, 'unsigned'], [1, "
"'unsigned']]]\n"
"  - [289, 2, 'name', 'tree', {'unique': true}, [[0, 'unsigned'], [2, "
"'string']]]\n"
"  - [296, 0, 'primary', 'tree', {'unique': true}, [[0, 'unsigned']]]\n"
"  - [296, 1, 'owner', 'tree', {'unique': false}, [[1, 'unsigned']]]\n"
"  - [296, 2, 'name', 'tree', {'unique': true}, [[2, 'string']]]\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:2013
msgid ""
"``_vindex`` is a system space that represents a virtual view. The structure "
"of its tuples is identical to that of :ref:`_index <box_space-index>`, but "
"permissions for certain tuples are limited in accordance with user "
"privileges. ``_vindex`` contains only those tuples that are accessible to "
"the current user. See :ref:`Access control <authentication>` for details "
"about user privileges."
msgstr ""
"``_vindex`` -- это системный спейс, который реализует виртуальное "
"представление. Структура его кортежей совпадает со структурой кортежей в :"
"ref:`_index <box_space-index>`, но права доступа на определенные кортежи "
"ограничены в соответствии с правами пользователя. ``_vindex`` содержит "
"только те кортежи, которые доступны текущему пользователю. Для получения "
"более подробной информации о правах пользователя см. раздел :ref:`Управление "
"доступом <authentication>`."

#: ../doc/book/box/box_space.rst:2019
msgid ""
"If the user has the full set of privileges (like 'admin'), the contents of "
"``_vindex`` match the contents of ``_index``. If the user has limited "
"access, ``_vindex`` contains only tuples accessible to this user."
msgstr ""
"Если у пользователя есть полный набор прав (как у пользователя 'admin'), "
"содержимое ``_vindex`` совпадает с содержимым ``_index``. Если же у "
"пользователя доступ ограничен, ``_vindex`` содержит только кортежи, которые "
"доступны текущему пользователю."

#: ../doc/book/box/box_space.rst:2025
msgid "``_vindex`` is a system view, so it allows only read requests."
msgstr ""
"``_vindex`` -- это виртуальное представление системы, поэтому допускаются "
"только запросы на чтение."

#: ../doc/book/box/box_space.rst:2027
msgid ""
"While the ``_index`` space requires proper access privileges, any user can "
"always read from ``_vindex``."
msgstr ""
"Если спейс ``_index`` требует наличия соответствующих прав доступа, то любой "
"пользователь всегда может выполнить чтение из ``_vindex``."

#: ../doc/book/box/box_space.rst:2034
msgid ""
"``_priv`` is a system space where :ref:`privileges <authentication-"
"owners_privileges>` are stored."
msgstr ""
"``_priv`` -- это системный спейс, где хранятся :ref:`права <authentication-"
"owners_privileges>`."

#: ../doc/book/box/box_space.rst:2039
msgid "the numeric id of the user who gave the privilege (\"grantor_id\"),"
msgstr ""
"числовой идентификатор пользователя, который выдал права (\"grantor_id\"),"

#: ../doc/book/box/box_space.rst:2040
msgid "the numeric id of the user who received the privilege (\"grantee_id\"),"
msgstr ""
"числовой идентификатор пользователя, который получил права (\"grantee_id\"),"

#: ../doc/book/box/box_space.rst:2041
msgid "the type of object: 'space', 'function', 'sequence' or 'universe',"
msgstr ""
"тип объекта: 'space' (спейс), 'function' (функция), "
"'sequence' (последовательность) или 'universe' (вселенная),"

#: ../doc/book/box/box_space.rst:2042
msgid "the numeric id of the object,"
msgstr "числовой идентификатор объекта,"

#: ../doc/book/box/box_space.rst:2043
msgid ""
"the type of operation: \"read\" = 1, \"write\" = 2, \"execute\" = 4, \"create"
"\" = 32, \"drop\" = 64, \"alter\" = 128, or a combination such as \"read,"
"write,execute\"."
msgstr ""
"тип операции: \"read\" = 1, \"write\" = 2, \"execute\" = 4, \"create\" = 32, "
"\"drop\" = 64, \"alter\" = 128, или их комбинация, например \"read,write,"
"execute\"."

#: ../doc/book/box/box_space.rst:2049
msgid ""
"Grant a privilege with :ref:`box.schema.user.grant() <box_schema-"
"user_grant>`."
msgstr ""
"Выдача прав с помощью :ref:`box.schema.user.grant() <box_schema-user_grant>`."

#: ../doc/book/box/box_space.rst:2050
msgid ""
"Revoke a privilege with :ref:`box.schema.user.revoke() <box_schema-"
"user_revoke>`."
msgstr ""
"Отмена прав с помощью :ref:`box.schema.user.revoke() <box_schema-"
"user_revoke>`."

#: ../doc/book/box/box_space.rst:2054
msgid ""
"Generally, privileges are granted or revoked by the owner of the object (the "
"user who created it), or by the 'admin' user."
msgstr ""
"Как правило, права выдаются или отменяются владельцем объекта "
"(пользователем, который создал его) или пользователем 'admin'."

#: ../doc/book/box/box_space.rst:2057
msgid ""
"Before dropping any objects or users, make sure that all their associated "
"privileges have been revoked."
msgstr ""
"До удаления любых объектов или пользователей, убедитесь, что отменили все "
"связанные с ними права."

#: ../doc/book/box/box_space.rst:2060
msgid ""
"Only the :ref:`'admin' user <authentication-owners_privileges>` can grant "
"privileges for the 'universe'."
msgstr ""
"Только пользователь :ref:`'admin' <authentication-owners_privileges>` может "
"выдавать права на 'universe'."

#: ../doc/book/box/box_space.rst:2063
msgid ""
"Only the 'admin' user or the creator of a space can drop, alter, or truncate "
"the space."
msgstr ""
"Только пользователь 'admin' или создатель спейса может удалить, изменить или "
"очистить спейс."

#: ../doc/book/box/box_space.rst:2066
msgid ""
"Only the 'admin' user or the creator of a user can change a different user’s "
"password."
msgstr ""
"Только пользователь 'admin' или создатель спейса может изменять  change a "
"different user’s password."

#: ../doc/book/box/box_space.rst:2073
msgid ""
"``_vpriv`` is a system space that represents a virtual view. The structure "
"of its tuples is identical to that of :ref:`_priv <box_space-priv>`, but "
"permissions for certain tuples are limited in accordance with user "
"privileges. ``_vpriv`` contains only those tuples that are accessible to the "
"current user. See :ref:`Access control <authentication>` for details about "
"user privileges."
msgstr ""
"``_vpriv`` -- это системный спейс, который реализует виртуальное "
"представление. Структура его кортежей совпадает со структурой кортежей в :"
"ref:`_priv <box_space-priv>`, но права доступа на определенные кортежи "
"ограничены в соответствии с правами пользователя. ``_vpriv`` содержит только "
"те кортежи, которые доступны текущему пользователю. Для получения более "
"подробной информации о правах пользователя см. раздел :ref:`Управление "
"доступом <authentication>`."

#: ../doc/book/box/box_space.rst:2079
msgid ""
"If the user has the full set of privileges (like 'admin'), the contents of "
"``_vpriv`` match the contents of ``_priv``. If the user has limited access, "
"``_vpriv`` contains only tuples accessible to this user."
msgstr ""
"Если у пользователя есть полный набор прав (как у пользователя 'admin'), "
"содержимое ``_vpriv`` совпадает с содержимым ``_priv``. Если же у "
"пользователя доступ ограничен, ``_vpriv`` содержит только кортежи, которые "
"доступны текущему пользователю."

#: ../doc/book/box/box_space.rst:2085
msgid "``_vpriv`` is a system view, so it allows only read requests."
msgstr ""
"``_vpriv`` -- это виртуальное представление системы, поэтому допускаются "
"только запросы на чтение."

#: ../doc/book/box/box_space.rst:2087
msgid ""
"While the ``_priv`` space requires proper access privileges, any user can "
"always read from ``_vpriv``."
msgstr ""
"Если спейс ``_priv`` требует наличия соответствующих прав доступа, то любой "
"пользователь всегда может выполнить чтение из ``_vpriv``."

#: ../doc/book/box/box_space.rst:2094
msgid "``_schema`` is a system space."
msgstr "``_schema`` -- это системный спейс."

#: ../doc/book/box/box_space.rst:2096
msgid "This space contains the following tuples:"
msgstr "Этот спейс включает в себя следующие кортежи:"

#: ../doc/book/box/box_space.rst:2098
msgid "``version`` tuple with version information for this Tarantool instance,"
msgstr ""
"кортеж ``version`` с информацией о версии данного экземпляра Tarantool'а,"

#: ../doc/book/box/box_space.rst:2099
msgid "``cluster`` tuple with the instance's replica set ID,"
msgstr "кортеж ``cluster`` с идентификатором набора реплик данного экземпляра,"

#: ../doc/book/box/box_space.rst:2100
msgid "``max_id`` tuple with the maximal space ID,"
msgstr "кортеж ``max_id`` с максимальным ID спейса,"

#: ../doc/book/box/box_space.rst:2101
msgid ""
"``once...`` tuples that correspond to specific :ref:`box.once() <box-once>` "
"blocks from the instance's :ref:`initialization file <index-init_label>`. "
"The first field in these tuples contains the ``key`` value from the "
"corresponding ``box.once()`` block prefixed with 'once' (e.g. `oncehello`), "
"so you can easily find a tuple that corresponds to a specific ``box.once()`` "
"block."
msgstr ""
"кортежи ``once...``, которые соответствуют определенным блокам :ref:`box."
"once() <box-once>` из :ref:`файла инициализации <index-init_label>` "
"экземпляра. Первое поле в таких кортежах содержит значение ключа ``key`` из "
"соответствующего блока ``box.once()`` с префиксом 'once' (например, "
"`oncehello`), поэтому можно легко найти кортеж, который соответствует "
"определенному блоку ``box.once()``."

#: ../doc/book/box/box_space.rst:2111
msgid ""
"Here is what ``_schema`` contains in a typical installation (notice the "
"tuples for two ``box.once()`` blocks, ``'oncebye'`` and ``'oncehello'``):"
msgstr ""
"Вот что при обычной установке включает в себя спейс ``_schema`` (обратите "
"внимание на кортежи для двух блоков ``box.once()``: ``'oncebye'`` и "
"``'oncehello'``):"

#: ../doc/book/box/box_space.rst:2114
msgid ""
"tarantool> box.space._schema:select{}\n"
"---\n"
"- - ['cluster', 'b4e15788-d962-4442-892e-d6c1dd5d13f2']\n"
"  - ['max_id', 512]\n"
"  - ['oncebye']\n"
"  - ['oncehello']\n"
"  - ['version', 1, 7, 2]"
msgstr ""
"tarantool> box.space._schema:select{}\n"
"---\n"
"- - ['cluster', 'b4e15788-d962-4442-892e-d6c1dd5d13f2']\n"
"  - ['max_id', 512]\n"
"  - ['oncebye']\n"
"  - ['oncehello']\n"
"  - ['version', 1, 7, 2]"

#: ../doc/book/box/box_space.rst:2128
msgid ""
"``_sequence`` is a system space for support of the :ref:`sequence feature "
"<index-box_sequence>`. It contains persistent information that was "
"established by :ref:`box.schema.sequence.create() <box_schema-"
"sequence_create>` or :ref:`box.schema.sequence.alter() <box_schema-"
"sequence_alter>`."
msgstr ""
"``_sequence`` -- это системный спейс для поддержки :ref:`последовательностей "
"<index-box_sequence>`. Он содержит персистентную информацию, определенную с "
"помощью :ref:`box.schema.sequence.create() <box_schema-sequence_create>` "
"или :ref:`box.schema.sequence.alter() <box_schema-sequence_alter>`."

#: ../doc/book/box/box_space.rst:2138
msgid ""
"``_sequence_data`` is a system space for support of the :ref:`sequence "
"feature <index-box_sequence>`."
msgstr ""
"``_sequence_data`` -- это системный спейс для поддержки :ref:"
"`последовательностей <index-box_sequence>`."

#: ../doc/book/box/box_space.rst:2141
msgid "Each tuple in ``_sequence_data`` contains two fields:"
msgstr "Каждый кортеж в спейсе ``_sequence_data`` содержит два поля:"

#: ../doc/book/box/box_space.rst:2143
msgid "the id of the sequence, and"
msgstr "идентификатор последовательности и"

#: ../doc/book/box/box_space.rst:2144
msgid ""
"the last value that the sequence generator returned (non-persistent "
"information)."
msgstr ""
"последнее значение, возвращенное генератором последовательностей (временная "
"информация)."

#: ../doc/book/box/box_space.rst:2147
msgid ""
"There is no guarantee that this space will be updated immediately after "
"every data-change request."
msgstr ""

#: ../doc/book/box/box_space.rst:2154
msgid ""
"``_space`` is a system space. It contains all spaces hosted on the current "
"Tarantool instance, both system ones and created by users."
msgstr ""
"``_space`` – это системный спейс. Он содержит информацию о всех спейсах, "
"хранящихся в данном экземпляре Tarantool - как системные, так и созданные "
"пользователями."

#: ../doc/book/box/box_space.rst:2159
msgid "``id``,"
msgstr "``id``,"

#: ../doc/book/box/box_space.rst:2160
msgid "``owner`` (= id of user who owns the space),"
msgstr "``owner`` (= идентификатор пользователя, которому принадлежит спейс),"

#: ../doc/book/box/box_space.rst:2161
msgid "``name``, ``engine``, ``field_count``,"
msgstr "``name``, ``engine``, ``field_count``,"

#: ../doc/book/box/box_space.rst:2162
msgid "``flags`` (e.g. temporary),"
msgstr "``flags`` (например, временный),"

#: ../doc/book/box/box_space.rst:2163
msgid "``format`` (as made by a :ref:`format clause <box_space-format>`)."
msgstr ""
"``format`` (как задано через :ref:`оператор формата <box_space-format>`)."

#: ../doc/book/box/box_space.rst:2165
msgid ""
"These fields are established by :ref:`space.create() <box_schema-"
"space_create>`."
msgstr ""
"Эти поля определены с помощью :ref:`space.create() <box_schema-"
"space_create>`."

#: ../doc/book/box/box_space.rst:2170
msgid ""
"The following function will display every simple field in all tuples of "
"``_space``."
msgstr ""
"Следующая функция отобразит все простые поля во всех кортежах спейса "
"``_space``."

#: ../doc/book/box/box_space.rst:2173
msgid ""
"function example()\n"
"  local ta = {}\n"
"  local i, line\n"
"  for k, v in box.space._space:pairs() do\n"
"    i = 1\n"
"    line = ''\n"
"    while i <= #v do\n"
"      if type(v[i]) ~= 'table' then\n"
"        line = line .. v[i] .. ' '\n"
"      end\n"
"    i = i + 1\n"
"    end\n"
"    table.insert(ta, line)\n"
"  end\n"
"  return ta\n"
"end"
msgstr ""
"function example()\n"
"  local ta = {}\n"
"  local i, line\n"
"  for k, v in box.space._space:pairs() do\n"
"    i = 1\n"
"    line = ''\n"
"    while i <= #v do\n"
"      if type(v[i]) ~= 'table' then\n"
"        line = line .. v[i] .. ' '\n"
"      end\n"
"    i = i + 1\n"
"    end\n"
"    table.insert(ta, line)\n"
"  end\n"
"  return ta\n"
"end"

#: ../doc/book/box/box_space.rst:2192
msgid "Here is what ``example()`` returns in a typical installation:"
msgstr "Вот что при обычной установке вернет ``example()``:"

#: ../doc/book/box/box_space.rst:2194
msgid ""
"tarantool> example()\n"
"---\n"
"- - '272 1 _schema memtx 0  '\n"
"  - '280 1 _space memtx 0  '\n"
"  - '281 1 _vspace sysview 0  '\n"
"  - '288 1 _index memtx 0  '\n"
"  - '296 1 _func memtx 0  '\n"
"  - '304 1 _user memtx 0  '\n"
"  - '305 1 _vuser sysview 0  '\n"
"  - '312 1 _priv memtx 0  '\n"
"  - '313 1 _vpriv sysview 0  '\n"
"  - '320 1 _cluster memtx 0  '\n"
"  - '512 1 tester memtx 0  '\n"
"  - '513 1 origin vinyl 0  '\n"
"  - '514 1 archive memtx 0  '\n"
"..."
msgstr ""
"tarantool> example()\n"
"---\n"
"- - '272 1 _schema memtx 0  '\n"
"  - '280 1 _space memtx 0  '\n"
"  - '281 1 _vspace sysview 0  '\n"
"  - '288 1 _index memtx 0  '\n"
"  - '296 1 _func memtx 0  '\n"
"  - '304 1 _user memtx 0  '\n"
"  - '305 1 _vuser sysview 0  '\n"
"  - '312 1 _priv memtx 0  '\n"
"  - '313 1 _vpriv sysview 0  '\n"
"  - '320 1 _cluster memtx 0  '\n"
"  - '512 1 tester memtx 0  '\n"
"  - '513 1 origin vinyl 0  '\n"
"  - '514 1 archive memtx 0  '\n"
"..."

#: ../doc/book/box/box_space.rst:2215
msgid ""
"The following requests will create a space using ``box.schema.space."
"create()`` with a :ref:`format clause <box_space-format>`, then retrieve the "
"``_space`` tuple for the new space. This illustrates the typical use of the "
"``format`` clause, it shows the recommended names and data types for the "
"fields."
msgstr ""
"Следующая серия запросов создаст спейс, используя ``box.schema.space."
"create()`` с :ref:`оператором формата <box_space-format>`, затем выберет "
"кортеж из ``_space`` для нового спейса. Этот пример иллюстрирует стандартное "
"применение оператора ``format``, показывая рекомендованные имена и типы "
"данных для полей."

#: ../doc/book/box/box_space.rst:2221
msgid ""
"tarantool> box.schema.space.create('TM', {\n"
"         >   id = 12345,\n"
"         >   format = {\n"
"         >     [1] = {[\"name\"] = \"field_1\"},\n"
"         >     [2] = {[\"type\"] = \"unsigned\"}\n"
"         >   }\n"
"         > })\n"
"---\n"
"- index: []\n"
"  on_replace: 'function: 0x41c67338'\n"
"  temporary: false\n"
"  id: 12345\n"
"  engine: memtx\n"
"  enabled: false\n"
"  name: TM\n"
"  field_count: 0\n"
"- created\n"
"...\n"
"tarantool> box.space._space:select(12345)\n"
"---\n"
"- - [12345, 1, 'TM', 'memtx', 0, {}, [{'name': 'field_1'}, {'type': "
"'unsigned'}]]\n"
"..."
msgstr ""
"tarantool> box.schema.space.create('TM', {\n"
"         >   id = 12345,\n"
"         >   format = {\n"
"         >     [1] = {[\"name\"] = \"field_1\"},\n"
"         >     [2] = {[\"type\"] = \"unsigned\"}\n"
"         >   }\n"
"         > })\n"
"---\n"
"- index: []\n"
"  on_replace: 'function: 0x41c67338'\n"
"  temporary: false\n"
"  id: 12345\n"
"  engine: memtx\n"
"  enabled: false\n"
"  name: TM\n"
"  field_count: 0\n"
"- created\n"
"...\n"
"tarantool> box.space._space:select(12345)\n"
"---\n"
"- - [12345, 1, 'TM', 'memtx', 0, {}, [{'name': 'field_1'}, {'type': "
"'unsigned'}]]\n"
"..."

#: ../doc/book/box/box_space.rst:2250
msgid ""
"``_vspace`` is a system space that represents a virtual view. The structure "
"of its tuples is identical to that of :ref:`_space <box_space-space>`, but "
"permissions for certain tuples are limited in accordance with user "
"privileges. ``_vspace`` contains only those tuples that are accessible to "
"the current user. See :ref:`Access control <authentication>` for details "
"about user privileges."
msgstr ""
"``_vspace`` -- это системный спейс, который реализует виртуальное "
"представление. Структура его кортежей совпадает со структурой кортежей в :"
"ref:`_space <box_space-space>`, но права доступа на определенные кортежи "
"ограничены в соответствии с правами пользователя. ``_vspace`` содержит "
"только те кортежи, которые доступны текущему пользователю. Для получения "
"более подробной информации о правах пользователя см. раздел :ref:`Управление "
"доступом <authentication>`."

#: ../doc/book/box/box_space.rst:2256
msgid ""
"If the user has the full set of privileges (like 'admin'), the contents of "
"``_vspace`` match the contents of ``_space``. If the user has limited "
"access, ``_vspace`` contains only tuples accessible to this user."
msgstr ""
"Если у пользователя есть полный набор прав (как у пользователя 'admin'), "
"содержимое ``_vspace`` совпадает с содержимым ``_space``. Если же у "
"пользователя доступ ограничен, ``_vspace`` содержит только кортежи, которые "
"доступны текущему пользователю."

#: ../doc/book/box/box_space.rst:2262
msgid "``_vspace`` is a system view, so it allows only read requests."
msgstr ""
"``_vspace`` -- это виртуальное представление системы, поэтому допускаются "
"только запросы на чтение."

#: ../doc/book/box/box_space.rst:2264
msgid ""
"While the ``_space`` space requires proper access privileges, any user can "
"always read from ``_vspace``."
msgstr ""
"Если спейс ``_space`` требует наличия соответствующих прав доступа, то любой "
"пользователь всегда может выполнить чтение из ``_vspace``."

#: ../doc/book/box/box_space.rst:2271
msgid ""
"``_user`` is a system space where user-names and password hashes are stored."
msgstr ""
"``_user`` -- это системный спейс, где хранятся имена пользователей и хеши "
"паролей."

#: ../doc/book/box/box_space.rst:2275
msgid "the numeric id of the tuple (\"id\"),"
msgstr "числовой идентификатор кортежа (\"id\"),"

#: ../doc/book/box/box_space.rst:2276
msgid "the numeric id of the tuple’s creator,"
msgstr "числовой идентификатор создателя кортежа,"

#: ../doc/book/box/box_space.rst:2277 ../doc/book/box/box_space.rst:2415
msgid "the name,"
msgstr "имя,"

#: ../doc/book/box/box_space.rst:2278
msgid "the type: 'user' or 'role',"
msgstr "тип: 'user' (пользователь) или 'role' (роль),"

#: ../doc/book/box/box_space.rst:2279
msgid "optional password."
msgstr "пароль по желанию"

#: ../doc/book/box/box_space.rst:2281
msgid ""
"There are five special tuples in the ``_user`` space: 'guest', 'admin', "
"'public', 'replication', and 'super'."
msgstr ""
"В спейсе ``_user`` есть пять специальных кортежей: 'guest', 'admin', "
"'public', 'replication' и 'super'."

#: ../doc/book/box/box_space.rst:2294
msgid "ID"
msgstr "ID"

#: ../doc/book/box/box_space.rst:2294
msgid "Description"
msgstr "Описание"

#: ../doc/book/box/box_space.rst:2296
msgid "guest"
msgstr "guest"

#: ../doc/book/box/box_space.rst:2296
msgid "0"
msgstr "0"

#: ../doc/book/box/box_space.rst:2296 ../doc/book/box/box_space.rst:2299
msgid "user"
msgstr "user (пользователь)"

#: ../doc/book/box/box_space.rst:2296
msgid ""
"Default user when connecting remotely. Usually an untrusted user with few "
"privileges."
msgstr ""
"Пользователь, который используется по умолчанию при удаленном подключении. "
"Как правило, это не заслуживающий доверия пользователь с небольшим "
"количеством прав."

#: ../doc/book/box/box_space.rst:2299
msgid "admin"
msgstr "admin"

#: ../doc/book/box/box_space.rst:2299
msgid "1"
msgstr "1"

#: ../doc/book/box/box_space.rst:2299
msgid ""
"Default user when using Tarantool as a console. Usually an :ref:"
"`administrative user <authentication-owners_privileges>` with all privileges."
msgstr ""
"Пользователь, который используется по умолчанию при работе с Tarantool'ом "
"как с консолью. Как правило, это :ref:`административный пользователь "
"<authentication-owners_privileges>` со всеми правами."

#: ../doc/book/box/box_space.rst:2304
msgid "public"
msgstr "public"

#: ../doc/book/box/box_space.rst:2304 ../doc/book/box/box_space.rst:2312
#: ../doc/book/box/box_space.rst:2316
msgid "role"
msgstr "роль"

#: ../doc/book/box/box_space.rst:2304
msgid ""
"Pre-defined :ref:`role <authentication-roles>`, automatically granted to new "
"users when they are created with ``box.schema.user.create(user-name)``. "
"Therefore a convenient way to grant 'read' on space 't' to every user that "
"will ever exist is with ``box.schema.role."
"grant('public','read','space','t')``."
msgstr ""
"Заданная :ref:`роль <authentication-roles>`, которая автоматически выдается "
"новым пользователям при их создании методом ``box.schema.user.create(имя-"
"пользователя)``. Таким образом, лучше всего выдать права на чтение 'read' "
"спейса 't' каждому когда-либо созданному пользователю с помощью ``box.schema."
"role.grant('public','read','space','t')``."

#: ../doc/book/box/box_space.rst:2312
msgid "replication"
msgstr "replication"

#: ../doc/book/box/box_space.rst:2312
msgid "3"
msgstr "3"

#: ../doc/book/box/box_space.rst:2312
msgid ""
"Pre-defined :ref:`role <authentication-roles>`, which the 'admin' user can "
"grant to users who need to use :ref:`replication <replication>` features."
msgstr ""
"Заданная :ref:`роль <authentication-roles>`, выдаваемая пользователем "
"'admin' другим пользователям для использования функций :ref:`репликации "
"<replication>`."

#: ../doc/book/box/box_space.rst:2316
msgid "super"
msgstr "super"

#: ../doc/book/box/box_space.rst:2316
msgid "31"
msgstr "31"

#: ../doc/book/box/box_space.rst:2316
msgid ""
"Pre-defined :ref:`role <authentication-roles>`, which the 'admin' user can "
"grant to users who need all privileges on all objects. The 'super' role has "
"these privileges on 'universe': read, write, execute, create, drop, alter."
msgstr ""
"Заданная :ref:`роль <authentication-roles>`, выдаваемая пользователем "
"'admin' другим пользователям для получения всех прав на все объекты. Для "
"роли 'super' такие права выданы на 'universe': чтение, запись, выполнение, "
"создание, удаление, изменение."

#: ../doc/book/box/box_space.rst:2324
msgid ""
"To select a tuple from the ``_user`` space, use ``box.space._user:"
"select()``. For example, here is what happens with a select for user id = 0, "
"which is the 'guest' user, which by default has no password:"
msgstr ""
"Чтобы выбрать кортеж из спейса ``_user``, используйте ``box.space._user:"
"select()``. Например, при выборке от пользователя с id = 0, который является "
"пользователем 'guest' без пароля по умолчанию, произойдет следующее:"

#: ../doc/book/box/box_space.rst:2328
msgid ""
"tarantool> box.space._user:select{0}\n"
"---\n"
"- - [0, 1, 'guest', 'user']\n"
"..."
msgstr ""
"tarantool> box.space._user:select{0}\n"
"---\n"
"- - [0, 1, 'guest', 'user']\n"
"..."

#: ../doc/book/box/box_space.rst:2337
msgid ""
"To change tuples in the ``_user`` space, do not use ordinary ``box.space`` "
"functions for insert or update or delete. The ``_user`` space is special, so "
"there are special functions which have appropriate error checking."
msgstr ""
"Чтобы изменить кортежи в спейсе ``_user``, не пользуйтесь стандартными "
"функциями ``box.space`` для вставки, обновления или удаления. Речь идет об "
"особом спейсе ``_user``, поэтому есть особые функции с соответствующей "
"проверкой на ошибки."

#: ../doc/book/box/box_space.rst:2341
msgid ""
"To create a new user, use :ref:`box.schema.user.create() <box_schema-"
"user_create>`:"
msgstr ""
"Чтобы создать нового пользователя, используйте :ref:`box.schema.user."
"create() <box_schema-user_create>`:"

#: ../doc/book/box/box_space.rst:2380
msgid ""
"box.schema.user.create(*user-name*)\n"
"box.schema.user.create(*user-name*, {if_not_exists = true})\n"
"box.schema.user.create(*user-name*, {password = *password*})"
msgstr ""
"box.schema.user.create(*имя-пользователя*)\n"
"box.schema.user.create(*имя-пользователя*, {if_not_exists = true})\n"
"box.schema.user.create(*имя-пользователя*, {password = *пароль*})"

#: ../doc/book/box/box_space.rst:2350
msgid ""
"To change the user's password, use :ref:`box.schema.user.password() "
"<box_schema-user_password>`:"
msgstr ""
"Чтобы изменить пароль пользователя, воспользуйтесь :ref:`box.schema.user."
"password() <box_schema-user_password>`:"

#: ../doc/book/box/box_space.rst:2389
msgid ""
"-- To change the current user's password\n"
"box.schema.user.passwd(*password*)\n"
"\n"
"-- To change a different user's password\n"
"-- (usually only 'admin' can do it)\n"
"box.schema.user.passwd(*user-name*, *password*)"
msgstr ""
"-- Чтобы изменить пароль текущего пользователя\n"
"box.schema.user.passwd(*пароль*)\n"
"\n"
"-- Чтобы изменить пароль другого пользователя\n"
"-- (обычно это может делать только 'admin')\n"
"box.schema.user.passwd(*имя-пользователя*, *пароль*)"

#: ../doc/book/box/box_space.rst:2362
msgid ""
"To drop a user, use :ref:`box.schema.user.drop() <box_schema-user_drop>`:"
msgstr ""
"Чтобы удалить пользователя, используйте :ref:`box.schema.user.drop() "
"<box_schema-user_drop>`:"

#: ../doc/book/box/box_space.rst:2401
msgid "box.schema.user.drop(*user-name*)"
msgstr "box.schema.user.drop(*имя-пользователя*)"

#: ../doc/book/box/box_space.rst:2369
msgid ""
"To check whether a user exists, use :ref:`box.schema.user.exists() "
"<box_schema-user_exists>`, which returns ``true`` or ``false``:"
msgstr ""
"Чтобы проверить, существует ли пользователь, воспользуйтесь :ref:`box.schema."
"user.exists() <box_schema-user_exists>`, которая вернет ``true`` (правда) "
"или ``false`` (ложь):"

#: ../doc/book/box/box_space.rst:2409
msgid "box.schema.user.exists(*user-name*)"
msgstr "box.schema.user.exists(*имя-пользователя*)"

#: ../doc/book/box/box_space.rst:2377
msgid ""
"To find what privileges a user has, use :ref:`box.schema.user.info() "
"<box_schema-user_info>`:"
msgstr ""
"Чтобы узнать, какие права есть у пользователя, используйте :ref:`box.schema."
"user.info() <box_schema-user_info>`:"

#: ../doc/book/box/box_space.rst:2416
msgid "box.schema.user.info(*user-name*)"
msgstr "box.schema.user.info(*имя-пользователя*)"

#: ../doc/book/box/box_space.rst:2386
msgid "The maximum number of users is 32."
msgstr "Максимальное количество пользователей -- 32."

#: ../doc/book/box/box_space.rst:2390
msgid ""
"Here is a session which creates a new user with a strong password, selects a "
"tuple in the ``_user`` space, and then drops the user."
msgstr ""
"Ниже представлена сессия, в рамках которой создается новый пользователь с "
"надежным паролем, выбирается кортеж из спейса ``_user``, а затем "
"пользователь удаляется."

#: ../doc/book/box/box_space.rst:2393
msgid ""
"tarantool> box.schema.user.create('JeanMartin', {password = 'Iwtso_6_os$"
"$'})\n"
"---\n"
"...\n"
"tarantool> box.space._user.index.name:select{'JeanMartin'}\n"
"---\n"
"- - [17, 1, 'JeanMartin', 'user', {'chap-sha1': 't3xjUpQdrt857O"
"+YRvGbMY5py8Q='}]\n"
"...\n"
"tarantool> box.schema.user.drop('JeanMartin')\n"
"---\n"
"..."
msgstr ""
"tarantool> box.schema.user.create('JeanMartin', {password = 'Iwtso_6_os$"
"$'})\n"
"---\n"
"...\n"
"tarantool> box.space._user.index.name:select{'JeanMartin'}\n"
"---\n"
"- - [17, 1, 'JeanMartin', 'user', {'chap-sha1': 't3xjUpQdrt857O"
"+YRvGbMY5py8Q='}]\n"
"...\n"
"tarantool> box.schema.user.drop('JeanMartin')\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:2410
#, fuzzy
msgid ""
"``_ck_constraint`` is a system space where check constraints are stored."
msgstr ""
"``_user`` -- это системный спейс, где хранятся имена пользователей и хеши "
"паролей."

#: ../doc/book/box/box_space.rst:2414
#, fuzzy
msgid "the numeric id of the space (\"space_id\"),"
msgstr "числовой идентификатор кортежа (\"id\"),"

#: ../doc/book/box/box_space.rst:2416
msgid "whether the check is deferred (\"is_deferred\"),"
msgstr ""

#: ../doc/book/box/box_space.rst:2417
msgid "the language of the expression, such as 'SQL',"
msgstr ""

#: ../doc/book/box/box_space.rst:2418
msgid "the expression (\"code\")"
msgstr ""

#: ../doc/book/box/box_space.rst:2422
msgid ""
"tarantool> box.space._ck_constraint:select()\n"
"---\n"
"- - [527, 'c1', false, 'SQL', '\"f2\" > ''A''']\n"
"  - [527, 'c2', false, 'SQL', '\"f2\" == UPPER(\"f3\") AND NOT \"f2\" LIKE "
"''__''']\n"
"..."
msgstr ""

#: ../doc/book/box/box_space.rst:2432
msgid "Example: using box.space functions to read _space tuples"
msgstr "Пример: использование функций box.space для чтения кортежей из _space"

#: ../doc/book/box/box_space.rst:2434
msgid ""
"This function will illustrate how to look at all the spaces, and for each "
"display: approximately how many tuples it contains, and the first field of "
"its first tuple. The function uses Tarantool ``box.space`` functions "
"``len()`` and ``pairs()``. The iteration through the spaces is coded as a "
"scan of the ``_space`` system space, which contains metadata. The third "
"field in ``_space`` contains the space name, so the key instruction "
"``space_name = v[3]`` means ``space_name`` is the ``space_name`` field in "
"the tuple of ``_space`` that we've just fetched with ``pairs()``. The "
"function returns a table:"
msgstr ""
"Функция ниже проиллюстрирует, как обращаться ко всем спейсам, и для каждого "
"отобразит примерное количество кортежей и первое поле первого кортежа. В "
"данной функции используются функции из ``box.space`` в Tarantool'е: "
"``len()`` и ``pairs()``. Итерация по спейсам закодирована в форме "
"сканирования системного спейса ``_space``, который содержит метаданные. "
"Третье поле в ``_space`` содержит имя спейса, поэтому ключевая команда "
"``space_name = v[3]`` означает, что ``space_name`` -- это поле "
"``space_name`` в кортеже ``_space``, который мы только что получили с "
"помощью ``pairs()``. Функция возвращает таблицу:"

#: ../doc/book/box/box_space.rst:2444
msgid ""
"function example()\n"
"  local tuple_count, space_name, line\n"
"  local ta = {}\n"
"  for k, v in box.space._space:pairs() do\n"
"    space_name = v[3]\n"
"    if box.space[space_name].index[0] ~= nil then\n"
"      tuple_count = '1 or more'\n"
"    else\n"
"      tuple_count = '0'\n"
"    end\n"
"    line = space_name .. ' tuple_count =' .. tuple_count\n"
"    if tuple_count == '1 or more' then\n"
"      for k1, v1 in box.space[space_name]:pairs() do\n"
"        line = line .. '. first field in first tuple = ' .. v1[1]\n"
"        break\n"
"      end\n"
"    end\n"
"    table.insert(ta, line)\n"
"  end\n"
"  return ta\n"
"end"
msgstr ""
"function example()\n"
"  local tuple_count, space_name, line\n"
"  local ta = {}\n"
"  for k, v in box.space._space:pairs() do\n"
"    space_name = v[3]\n"
"    if box.space[space_name].index[0] ~= nil then\n"
"      tuple_count = '1 or more'\n"
"    else\n"
"      tuple_count = '0'\n"
"    end\n"
"    line = space_name .. ' tuple_count =' .. tuple_count\n"
"    if tuple_count == '1 or more' then\n"
"      for k1, v1 in box.space[space_name]:pairs() do\n"
"        line = line .. '. first field in first tuple = ' .. v1[1]\n"
"        break\n"
"      end\n"
"    end\n"
"    table.insert(ta, line)\n"
"  end\n"
"  return ta\n"
"end"

#: ../doc/book/box/box_space.rst:2468
msgid "And here is what happens when one invokes the function:"
msgstr "А вот что происходит, когда вызывается функция:"

#: ../doc/book/box/box_space.rst:2470
msgid ""
"tarantool> example()\n"
"---\n"
"- - _schema tuple_count =1 or more. first field in first tuple = cluster\n"
"  - _space tuple_count =1 or more. first field in first tuple = 272\n"
"  - _vspace tuple_count =1 or more. first field in first tuple = 272\n"
"  - _index tuple_count =1 or more. first field in first tuple = 272\n"
"  - _vindex tuple_count =1 or more. first field in first tuple = 272\n"
"  - _func tuple_count =1 or more. first field in first tuple = 1\n"
"  - _vfunc tuple_count =1 or more. first field in first tuple = 1\n"
"  - _user tuple_count =1 or more. first field in first tuple = 0\n"
"  - _vuser tuple_count =1 or more. first field in first tuple = 0\n"
"  - _priv tuple_count =1 or more. first field in first tuple = 1\n"
"  - _vpriv tuple_count =1 or more. first field in first tuple = 1\n"
"  - _cluster tuple_count =1 or more. first field in first tuple = 1\n"
"..."
msgstr ""
"tarantool> example()\n"
"---\n"
"- - _schema tuple_count =1 or more. first field in first tuple = cluster\n"
"  - _space tuple_count =1 or more. first field in first tuple = 272\n"
"  - _vspace tuple_count =1 or more. first field in first tuple = 272\n"
"  - _index tuple_count =1 or more. first field in first tuple = 272\n"
"  - _vindex tuple_count =1 or more. first field in first tuple = 272\n"
"  - _func tuple_count =1 or more. first field in first tuple = 1\n"
"  - _vfunc tuple_count =1 or more. first field in first tuple = 1\n"
"  - _user tuple_count =1 or more. first field in first tuple = 0\n"
"  - _vuser tuple_count =1 or more. first field in first tuple = 0\n"
"  - _priv tuple_count =1 or more. first field in first tuple = 1\n"
"  - _vpriv tuple_count =1 or more. first field in first tuple = 1\n"
"  - _cluster tuple_count =1 or more. first field in first tuple = 1\n"
"..."

#: ../doc/book/box/box_space.rst:2490
msgid "Example: using box.space functions to organize a _space tuple"
msgstr ""
"Пример: использование функций box.space для организации кортежа из _space"

#: ../doc/book/box/box_space.rst:2492
msgid ""
"The objective is to display field names and field types of a system space -- "
"using metadata to find metadata."
msgstr ""
"Основная цель -- отобразить имена и типы полей системного спейса, то есть "
"использование метаданных для поиска метаданных."

#: ../doc/book/box/box_space.rst:2495
msgid ""
"To begin: how can one select the ``_space`` tuple that describes ``_space``?"
msgstr ""
"Для начала: как можно сделать выборку кортежа из ``_space``, который "
"описывает ``_space``?"

#: ../doc/book/box/box_space.rst:2497
msgid ""
"A simple way is to look at the constants in ``box.schema``, which tell us "
"that there is an item named SPACE_ID == 288, so these statements will "
"retrieve the correct tuple:"
msgstr ""
"Проще всего проверить постоянные в ``box.schema``, что укажет на наличие "
"элемента под названием SPACE_ID == 288. Таким образом, следующие запросы "
"вернут нужный кортеж:"

#: ../doc/book/box/box_space.rst:2501
msgid ""
"box.space._space:select{ 288 }\n"
"-- or --\n"
"box.space._space:select{ box.schema.SPACE_ID }"
msgstr ""
"box.space._space:select{ 288 }\n"
"-- или --\n"
"box.space._space:select{ box.schema.SPACE_ID }"

#: ../doc/book/box/box_space.rst:2507
msgid ""
"Another way is to look at the tuples in ``box.space._index``, which tell us "
"that there is a secondary index named 'name' for space number 288, so this "
"statement also will retrieve the correct tuple:"
msgstr ""
"Также можно обратиться к спейсам в ``box.space._index``, что укажет на "
"наличие вторичного индекса с именем 'name' для спейса под номером 288. Таким "
"образом, следующий запрос также вернет нужный кортеж:"

#: ../doc/book/box/box_space.rst:2511
msgid "box.space._space.index.name:select{ '_space' }"
msgstr "box.space._space.index.name:select{ '_space' }"

#: ../doc/book/box/box_space.rst:2515
msgid "However, the retrieved tuple is not easy to read:"
msgstr "Однако непросто прочитать информацию из полученного кортежа:"

#: ../doc/book/box/box_space.rst:2517
msgid ""
"tarantool> box.space._space.index.name:select{'_space'}\n"
"---\n"
"- - [280, 1, '_space', 'memtx', 0, {}, [{'name': 'id', 'type': 'num'}, "
"{'name': 'owner',\n"
"        'type': 'num'}, {'name': 'name', 'type': 'str'}, {'name': 'engine', "
"'type': 'str'},\n"
"      {'name': 'field_count', 'type': 'num'}, {'name': 'flags', 'type': "
"'str'}, {\n"
"        'name': 'format', 'type': '*'}]]\n"
"..."
msgstr ""
"tarantool> box.space._space.index.name:select{'_space'}\n"
"---\n"
"- - [280, 1, '_space', 'memtx', 0, {}, [{'name': 'id', 'type': 'num'}, "
"{'name': 'owner',\n"
"        'type': 'num'}, {'name': 'name', 'type': 'str'}, {'name': 'engine', "
"'type': 'str'},\n"
"      {'name': 'field_count', 'type': 'num'}, {'name': 'flags', 'type': "
"'str'}, {\n"
"        'name': 'format', 'type': '*'}]]\n"
"..."

#: ../doc/book/box/box_space.rst:2527
msgid ""
"It looks disorganized because field number 7 has been formatted with "
"recommended names and data types. How can one get those specific sub-fields? "
"Since it's visible that field number 7 is an array of maps, this `for` loop "
"will do the organizing:"
msgstr ""
"Информация подается бессистемно, поскольку по формату поле №7 содержит "
"рекомендованные имена и типы данных. Как же получить эти данные? Поскольку "
"очевидно, что поле №7 представляет собой ассоциативный массив, цикл `for` "
"проведет организацию данных:"

#: ../doc/book/box/box_space.rst:2532
msgid ""
"tarantool> do\n"
"         >   local tuple_of_space = box.space._space.index.name:"
"get{'_space'}\n"
"         >   for _, field in ipairs(tuple_of_space[7]) do\n"
"         >     print(field.name .. ', ' .. field.type)\n"
"         >   end\n"
"         > end\n"
"id, num\n"
"owner, num\n"
"name, str\n"
"engine, str\n"
"field_count, num\n"
"flags, str\n"
"format, *\n"
"---\n"
"..."
msgstr ""
"tarantool> do\n"
"         >   local tuple_of_space = box.space._space.index.name:"
"get{'_space'}\n"
"         >   for _, field in ipairs(tuple_of_space[7]) do\n"
"         >     print(field.name .. ', ' .. field.type)\n"
"         >   end\n"
"         > end\n"
"id, num\n"
"owner, num\n"
"name, str\n"
"engine, str\n"
"field_count, num\n"
"flags, str\n"
"format, *\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:2554
msgid ""
"``_vuser`` is a system space that represents a virtual view. The structure "
"of its tuples is identical to that of :ref:`_user <box_space-user>`, but "
"permissions for certain tuples are limited in accordance with user "
"privileges. ``_vuser`` contains only those tuples that are accessible to the "
"current user. See :ref:`Access control <authentication>` for details about "
"user privileges."
msgstr ""
"``_vuser`` -- это системный спейс, который реализует виртуальное "
"представление. Структура его кортежей совпадает со структурой кортежей в :"
"ref:`_user <box_space-user>`, но права доступа на определенные кортежи "
"ограничены в соответствии с правами пользователя. ``_vuser`` содержит только "
"те кортежи, которые доступны текущему пользователю. Для получения более "
"подробной информации о правах пользователя см. раздел :ref:`Управление "
"доступом <authentication>`."

#: ../doc/book/box/box_space.rst:2560
msgid ""
"If the user has the full set of privileges (like 'admin'), the contents of "
"``_vuser`` match the contents of ``_user``. If the user has limited access, "
"``_vuser`` contains only tuples accessible to this user."
msgstr ""
"Если у пользователя есть полный набор прав (как у пользователя 'admin'), "
"содержимое ``_vuser`` совпадает с содержимым ``_user``. Если же у "
"пользователя доступ ограничен, ``_vuser`` содержит только кортежи, которые "
"доступны текущему пользователю."

#: ../doc/book/box/box_space.rst:2564
msgid ""
"To see how ``_vuser`` works, :ref:`connect to a Tarantool database remotely "
"<connecting-remotely>` via ``tarantoolctl`` and select all tuples from the "
"``_user`` space, both when the 'guest' user *is* and *is not* allowed to "
"read from the database."
msgstr ""
"Чтобы посмотреть, как работать с ``_vuser``, :ref:`удаленно подключитесь к "
"базе данных Tarantool'а <connecting-remotely>` с помощью ``tarantoolctl`` и "
"сделайте выборку кортежей из спейса ``_user`` в следующих ситуациях: когда "
"пользователь 'guest' *имеет* и когда он *не имеет* права выполнять чтение "
"данных из базы."

#: ../doc/book/box/box_space.rst:2570
msgid ""
"First, start Tarantool and grant the 'guest' user with read, write and "
"execute privileges:"
msgstr ""
"Для начала запустите Tarantool и выдайте пользователю 'guest' права на "
"чтение, запись и выполнение:"

#: ../doc/book/box/box_space.rst:2573
msgid ""
"tarantool> box.cfg{listen = 3301}\n"
"---\n"
"...\n"
"tarantool> box.schema.user.grant('guest', 'read,write,execute', 'universe')\n"
"---\n"
"..."
msgstr ""
"tarantool> box.cfg{listen = 3301}\n"
"---\n"
"...\n"
"tarantool> box.schema.user.grant('guest', 'read,write,execute', 'universe')\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:2582
msgid ""
"Switch to the other terminal, connect to the Tarantool instance and select "
"all tuples from the ``_user`` space:"
msgstr ""
"Перейдите на другой терминал, подключитесь к экземпляру Tarantool'а и "
"произведите выборку всех кортежей из спейса ``_user``:"

#: ../doc/book/box/box_space.rst:2585
msgid ""
"$ tarantoolctl connect 3301\n"
"localhost:3301> box.space._user:select{}\n"
"---\n"
"- - [0, 1, 'guest', 'user', {}]\n"
"  - [1, 1, 'admin', 'user', {}]\n"
"  - [2, 1, 'public', 'role', {}]\n"
"  - [3, 1, 'replication', 'role', {}]\n"
"  - [31, 1, 'super', 'role', {}]\n"
"..."
msgstr ""
"$ tarantoolctl connect 3301\n"
"localhost:3301> box.space._user:select{}\n"
"---\n"
"- - [0, 1, 'guest', 'user', {}]\n"
"  - [1, 1, 'admin', 'user', {}]\n"
"  - [2, 1, 'public', 'role', {}]\n"
"  - [3, 1, 'replication', 'role', {}]\n"
"  - [31, 1, 'super', 'role', {}]\n"
"..."

#: ../doc/book/box/box_space.rst:2597
msgid ""
"This result contains the same set of users as if you made the request from "
"your Tarantool instance as 'admin'."
msgstr ""
"Результат включает в себя тот же набор пользователей, как если бы вы "
"выполнили запрос от пользователя 'admin' на своем экземпляре Tarantool'а."

#: ../doc/book/box/box_space.rst:2600
msgid ""
"Switch to the first terminal and revoke the read privileges from the 'guest' "
"user:"
msgstr ""
"Вернитесь в первый терминал и отмените права на чтение пользователю 'guest':"

#: ../doc/book/box/box_space.rst:2602
msgid ""
"tarantool> box.schema.user.revoke('guest', 'read', 'universe')\n"
"---\n"
"..."
msgstr ""
"tarantool> box.schema.user.revoke('guest', 'read', 'universe')\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:2608
msgid ""
"Switch to the other terminal, stop the session (to stop ``tarantoolctl``, "
"type Ctrl+C or Ctrl+D) and repeat the ``box.space._user:select{}`` request. "
"The access is denied:"
msgstr ""
"Перейдите на другой терминал, остановите сессию (чтобы остановить "
"``tarantoolctl``, нажмите Ctrl+C или Ctrl+D) и повторите запрос ``box.space."
"_user:select{}``. В доступе отказано:"

#: ../doc/book/box/box_space.rst:2612
msgid ""
"$ tarantoolctl connect 3301\n"
"localhost:3301> box.space._user:select{}\n"
"---\n"
"- error: Read access to space '_user' is denied for user 'guest'\n"
"..."
msgstr ""
"$ tarantoolctl connect 3301\n"
"localhost:3301> box.space._user:select{}\n"
"---\n"
"- error: Read access to space '_user' is denied for user 'guest'\n"
"..."

#: ../doc/book/box/box_space.rst:2620
msgid ""
"However, if you select from ``_vuser`` instead, the users' data available "
"for the 'guest' user is displayed:"
msgstr ""
"Тем не менее, если вместо этого произвести выборку из ``_vuser``, "
"отображаются данные пользователей, доступные пользователю 'guest':"

#: ../doc/book/box/box_space.rst:2623
msgid ""
"localhost:3301> box.space._vuser:select{}\n"
"---\n"
"- - [0, 1, 'guest', 'user', {}]\n"
"..."
msgstr ""
"localhost:3301> box.space._vuser:select{}\n"
"---\n"
"- - [0, 1, 'guest', 'user', {}]\n"
"..."

#: ../doc/book/box/box_space.rst:2632
msgid "``_vuser`` is a system view, so it allows only read requests."
msgstr ""
"``_vuser`` -- это виртуальное представление системы, поэтому допускаются "
"только запросы на чтение."

#: ../doc/book/box/box_space.rst:2633
msgid ""
"While the ``_user`` space requires proper access privileges, any user can "
"always read from ``_vuser``."
msgstr ""
"Если спейс ``_user`` требует наличия соответствующих прав доступа, то любой "
"пользователь всегда может выполнить чтение из ``_vuser``."

#: ../doc/book/box/box_space.rst:2641
msgid ""
"``_collation`` is a system space with a list of :ref:`collations <index-"
"collation>`. There are over 270 built-in collations and users may add more. "
"Here is one example:"
msgstr ""

#: ../doc/book/box/box_space.rst:2644
#, fuzzy
msgid ""
"localhost:3301> box.space._collation:select(239)\n"
"---\n"
"- - [239, 'unicode_uk_s2', 1, 'ICU', 'uk', {'strength': 'secondary'}]\n"
"..."
msgstr ""
"localhost:3301> box.space._vuser:select{}\n"
"---\n"
"- - [0, 1, 'guest', 'user', {}]\n"
"..."

#: ../doc/book/box/box_space.rst:2651
msgid ""
"Explanation of the fields in the example: id = 239 i.e. Tarantool's primary "
"key is 239, name = 'unicode_uk_s2' i.e. according to Tarantool's naming "
"convention this is a Unicode collation + it is for the uk locale + it has "
"secondary strength, owner = 1 i.e. :ref:`the admin user <authentication-"
"owners_privileges>`, type = 'ICU' i.e. the rules are according to "
"`International Components for Unicode <http://site.icu-project.org/home>`_, "
"locale = 'uk' i.e. `Ukrainian <http://www.unicode.org/cldr/charts/29/"
"collation/uk.html>`_, opts = 'strength:secondary' i.e. with this collation "
"comparisons use both primary and secondary `weights <https://unicode.org/"
"reports/tr10/#Weight_Level_Defn>`_."
msgstr ""

#: ../doc/book/box/box_space.rst:2664
msgid ""
"``_vcollation`` is a system space with a list of :ref:`collations <index-"
"collation>`. The structure of its tuples is identical to that of :ref:`box."
"space._collation <box_space-collation>`, but permissions for certain tuples "
"are limited in accordance with user privileges."
msgstr ""

#: ../doc/book/box/box_space.rst:2673
msgid "Example: using data operations"
msgstr "Пример: использование операций с данными"

#: ../doc/book/box/box_space.rst:2675
msgid ""
"This example demonstrates all legal scenarios -- as well as typical errors "
"-- for each :ref:`data operation <index-box_data-operations>` in Tarantool: :"
"ref:`INSERT <box_space-operations-insert>`, :ref:`DELETE <box_space-"
"operations-delete>`, :ref:`UPDATE <box_space-operations-update>`, :ref:"
"`UPSERT <box_space-operations-upsert>`, :ref:`REPLACE <box_space-operations-"
"replace>`, and :ref:`SELECT <box_space-operations-select>`."
msgstr ""
"Пример ниже иллюстрирует все возможные сценарии -- а также типичные ошибки "
"-- для всех :ref:`операций с данными <index-box_data-operations>` в "
"Tarantool'е: :ref:`INSERT <box_space-operations-insert>`, :ref:`DELETE "
"<box_space-operations-delete>`, :ref:`UPDATE <box_space-operations-"
"update>`, :ref:`UPSERT <box_space-operations-upsert>`, :ref:`REPLACE "
"<box_space-operations-replace>` и :ref:`SELECT <box_space-operations-"
"select>`."

#: ../doc/book/box/box_space.rst:2684
#, fuzzy
msgid ""
"-- Bootstrap the database --\n"
"box.cfg{}\n"
"format = {}\n"
"format[1] = {'field1', 'unsigned'}\n"
"format[2] = {'field2', 'unsigned'}\n"
"format[3] = {'field3', 'unsigned'}\n"
"s = box.schema.create_space('test', {format = format})\n"
"-- Create a primary index --\n"
"pk = s:create_index('pk', {parts = {{field = 'field1'}}})\n"
"-- Create a unique secondary index --\n"
"sk_uniq = s:create_index('sk_uniq', {parts = {{field = 'field2'}}})\n"
"-- Create a non-unique secondary index --\n"
"sk_non_uniq = s:create_index('sk_non_uniq', {parts = {{field = 'field3'}}, "
"unique = false})"
msgstr ""
"-- Настройка базы данных --\n"
"box.cfg{}\n"
"format = {}\n"
"format[1] = {'field1', 'unsigned'}\n"
"format[2] = {'field2', 'unsigned'}\n"
"format[3] = {'field3', 'unsigned'}\n"
"s = box.schema.create_space('test', {format = format})\n"
"-- Создание первичного индекса --\n"
"pk = s:create_index('pk', {parts = {{'field1'}}})\n"
"-- Создание уникального вторичного индекса --\n"
"sk_uniq = s:create_index('sk_uniq', {parts = {{'field2'}}})\n"
"-- Создание неуникального вторичного индекса --\n"
"sk_non_uniq = s:create_index('sk_non_uniq', {parts = {{'field3'}}, unique = "
"false})"

#: ../doc/book/box/box_space.rst:2704
msgid "INSERT"
msgstr "INSERT"

#: ../doc/book/box/box_space.rst:2706
msgid ""
"``insert`` accepts a well-formatted tuple and checks all keys for duplicates."
msgstr ""
"Операция ``insert`` (вставка) работает с кортежами с четким форматом и "
"проверяет все ключи на наличие совпадений."

#: ../doc/book/box/box_space.rst:2708
msgid ""
"tarantool> -- Unique indexes: ok --\n"
"tarantool> s:insert({1, 1, 1})\n"
"---\n"
"- [1, 1, 1]\n"
"...\n"
"tarantool> -- Conflicting primary key: error --\n"
"tarantool> s:insert({1, 1, 1})\n"
"---\n"
"- error: Duplicate key exists in unique index 'pk' in space 'test'\n"
"...\n"
"tarantool> -- Conflicting unique secondary key: error --\n"
"tarantool> s:insert({2, 1, 1})\n"
"---\n"
"- error: Duplicate key exists in unique index 'sk_uniq' in space 'test'\n"
"...\n"
"tarantool> -- Key {1} exists in sk_non_uniq index, but it is not unique: ok "
"--\n"
"tarantool> s:insert({2, 2, 1})\n"
"---\n"
"- [2, 2, 1]\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."
msgstr ""
"tarantool> -- Уникальные индексы: разрешено --\n"
"tarantool> s:insert({1, 1, 1})\n"
"---\n"
"- [1, 1, 1]\n"
"...\n"
"tarantool> -- Конфликт первичного ключа: ошибка --\n"
"tarantool> s:insert({1, 1, 1})\n"
"---\n"
"- error: Duplicate key exists in unique index 'pk' in space 'test'\n"
"...\n"
"tarantool> -- Конфликт уникального вторичного ключа: ошибка --\n"
"tarantool> s:insert({2, 1, 1})\n"
"---\n"
"- error: Duplicate key exists in unique index 'sk_uniq' in space 'test'\n"
"...\n"
"tarantool> -- Ключ {1} присутствует в индексе sk_non_uniq, но он не "
"уникален: разрешено --\n"
"tarantool> s:insert({2, 2, 1})\n"
"---\n"
"- [2, 2, 1]\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:2738
msgid "DELETE"
msgstr "DELETE"

#: ../doc/book/box/box_space.rst:2740
msgid "``delete`` accepts a full key of any unique index."
msgstr ""
"``delete`` (удаление) работает с полными ключами любого уникального индекса."

#: ../doc/book/box/box_space.rst:2742
msgid "``space:delete`` is an alias for \"delete by primary key\"."
msgstr ""
"``space:delete`` -- это псевдоним для операции \"удалить по первичному ключу"
"\"."

#: ../doc/book/box/box_space.rst:2744
msgid ""
"tarantool> -- Insert some test data --\n"
"tarantool> s:insert{3, 4, 5}\n"
"---\n"
"- [3, 4, 5]\n"
"...\n"
"tarantool> s:insert{6, 7, 8}\n"
"---\n"
"- [6, 7, 8]\n"
"...\n"
"tarantool> s:insert{9, 10, 11}\n"
"---\n"
"- [9, 10, 11]\n"
"...\n"
"tarantool> s:insert{12, 13, 14}\n"
"---\n"
"- [12, 13, 14]\n"
"...\n"
"tarantool> -- Nothing done here: no {4} key in pk index --\n"
"tarantool> s:delete{4}\n"
"---\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 4, 5]\n"
"  - [6, 7, 8]\n"
"  - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Delete by a primary key: ok --\n"
"tarantool> s:delete{3}\n"
"---\n"
"- [3, 4, 5]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [6, 7, 8]\n"
"  - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Explicitly delete by a primary key: ok --\n"
"tarantool> s.index.pk:delete{6}\n"
"---\n"
"- [6, 7, 8]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Delete by a unique secondary key: ok --\n"
"s.index.sk_uniq:delete{10}\n"
"---\n"
"- [9, 10, 11]\n"
"...\n"
"s:select{}\n"
"---\n"
"- - [12, 13, 14]\n"
"...\n"
"tarantool> -- Delete by a non-unique secondary index: error --\n"
"tarantool> s.index.sk_non_uniq:delete{14}\n"
"---\n"
"- error: Get() doesn't support partial keys and non-unique indexes\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [12, 13, 14]\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."
msgstr ""
"tarantool> -- Вставить некоторые тестовые данные --\n"
"tarantool> s:insert{3, 4, 5}\n"
"---\n"
"- [3, 4, 5]\n"
"...\n"
"tarantool> s:insert{6, 7, 8}\n"
"---\n"
"- [6, 7, 8]\n"
"...\n"
"tarantool> s:insert{9, 10, 11}\n"
"---\n"
"- [9, 10, 11]\n"
"...\n"
"tarantool> s:insert{12, 13, 14}\n"
"---\n"
"- [12, 13, 14]\n"
"...\n"
"tarantool> -- Здесь ничего не происходит: нет ключа {4} в индексе pk --\n"
"tarantool> s:delete{4}\n"
"---\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 4, 5]\n"
"  - [6, 7, 8]\n"
"  - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Удалить по первичному ключу: разрешено --\n"
"tarantool> s:delete{3}\n"
"---\n"
"- [3, 4, 5]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [6, 7, 8]\n"
"  - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Точно удалить по первичному ключу: разрешено --\n"
"tarantool> s.index.pk:delete{6}\n"
"---\n"
"- [6, 7, 8]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Удалить по уникальному вторичному ключу: разрешено --\n"
"s.index.sk_uniq:delete{10}\n"
"---\n"
"- [9, 10, 11]\n"
"...\n"
"s:select{}\n"
"---\n"
"- - [12, 13, 14]\n"
"...\n"
"tarantool> -- Удалить по неуникальному вторичному индексу: ошибка --\n"
"tarantool> s.index.sk_non_uniq:delete{14}\n"
"---\n"
"- error: Get() doesn't support partial keys and non-unique indexes\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [12, 13, 14]\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:2817
msgid "The key must be full: ``delete`` cannot work with partial keys."
msgstr ""
"Ключ должен быть полным: операция ``delete`` не работает с компонентами "
"ключа."

#: ../doc/book/box/box_space.rst:2819
#, fuzzy
msgid ""
"tarantool> s2 = box.schema.create_space('test2')\n"
"---\n"
"...\n"
"tarantool> pk2 = s2:create_index('pk2', {parts = {{field = 1, type = "
"'unsigned'}, {field = 2, type = 'unsigned'}}})\n"
"---\n"
"...\n"
"tarantool> s2:insert{1, 1}\n"
"---\n"
"- [1, 1]\n"
"...\n"
"tarantool> -- Delete by a partial key: error --\n"
"tarantool> s2:delete{1}\n"
"---\n"
"- error: Invalid key part count in an exact match (expected 2, got 1)\n"
"...\n"
"tarantool> -- Delete by a full key: ok --\n"
"tarantool> s2:delete{1, 1}\n"
"---\n"
"- [1, 1]\n"
"...\n"
"tarantool> s2:select{}\n"
"---\n"
"- []\n"
"...\n"
"tarantool> s2:drop()\n"
"---\n"
"..."
msgstr ""
"tarantool> s2 = box.schema.create_space('test2')\n"
"---\n"
"...\n"
"tarantool> pk2 = s2:create_index('pk2', {parts = {{1, 'unsigned'}, {2, "
"'unsigned'}}})\n"
"---\n"
"...\n"
"tarantool> s2:insert{1, 1}\n"
"---\n"
"- [1, 1]\n"
"...\n"
"tarantool> -- Удалить по компоненту ключа: ошибка --\n"
"tarantool> s2:delete{1}\n"
"---\n"
"- error: Invalid key part count in an exact match (expected 2, got 1)\n"
"...\n"
"tarantool> -- Удалить по ключу целиком: разрешено --\n"
"tarantool> s2:delete{1, 1}\n"
"---\n"
"- [1, 1]\n"
"...\n"
"tarantool> s2:select{}\n"
"---\n"
"- []\n"
"...\n"
"tarantool> s2:drop()\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:2853
msgid "UPDATE"
msgstr "UPDATE"

#: ../doc/book/box/box_space.rst:2855
msgid ""
"Similarly to ``delete``, ``update`` accepts a full key of any unique index, "
"and also the operations to execute."
msgstr ""
"Как и ``delete``, ``update`` работает с полными ключами любого уникального "
"индекса, а также выполняет операции."

#: ../doc/book/box/box_space.rst:2858
msgid "``space:update`` is an alias for \"update by primary key\"."
msgstr ""
"``space:update`` -- это псевдоним для операции \"обновить по первичному ключу"
"\"."

#: ../doc/book/box/box_space.rst:2860
msgid ""
"tarantool> -- Insert some test data --\n"
"tarantool> s:insert{3, 4, 5}\n"
"---\n"
"- [3, 4, 5]\n"
"...\n"
"tarantool> s:insert{6, 7, 8}\n"
"---\n"
"- [6, 7, 8]\n"
"...\n"
"tarantool> s:insert{9, 10, 11}\n"
"---\n"
"- [9, 10, 11]\n"
"...\n"
"tarantool> s:insert{12, 13, 14}\n"
"---\n"
"- [12, 13, 14]\n"
"...\n"
"tarantool> -- Nothing done here: no {4} key in pk index --\n"
"s:update({4}, {{'=', 2, 400}})\n"
"---\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 4, 5]\n"
"  - [6, 7, 8]\n"
"  - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Update by a primary key: ok --\n"
"tarantool> s:update({3}, {{'=', 2, 400}})\n"
"---\n"
"- [3, 400, 5]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 400, 5]\n"
"  - [6, 7, 8]\n"
"  - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Explicitly update by a primary key: ok --\n"
"tarantool> s.index.pk:update({6}, {{'=', 2, 700}})\n"
"---\n"
"- [6, 700, 8]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 400, 5]\n"
"  - [6, 700, 8]\n"
"  - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Update by a unique secondary key: ok --\n"
"tarantool> s.index.sk_uniq:update({10}, {{'=', 2, 1000}})\n"
"---\n"
"- [9, 1000, 11]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 400, 5]\n"
"  - [6, 700, 8]\n"
"  - [9, 1000, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Update by a non-unique secondary key: error --\n"
"tarantool> s.index.sk_non_uniq:update({14}, {{'=', 2, 1300}})\n"
"---\n"
"- error: Get() doesn't support partial keys and non-unique indexes\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 400, 5]\n"
"  - [6, 700, 8]\n"
"  - [9, 1000, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."
msgstr ""
"tarantool> -- Вставить некоторые тестовые данные --\n"
"tarantool> s:insert{3, 4, 5}\n"
"---\n"
"- [3, 4, 5]\n"
"...\n"
"tarantool> s:insert{6, 7, 8}\n"
"---\n"
"- [6, 7, 8]\n"
"...\n"
"tarantool> s:insert{9, 10, 11}\n"
"---\n"
"- [9, 10, 11]\n"
"...\n"
"tarantool> s:insert{12, 13, 14}\n"
"---\n"
"- [12, 13, 14]\n"
"...\n"
"tarantool> -- Здесь ничего не происходит: нет ключа {4} в индексе pk --\n"
"s:update({4}, {{'=', 2, 400}})\n"
"---\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 4, 5]\n"
"  - [6, 7, 8]\n"
"  - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Обновить по первичному ключу: разрешено --\n"
"tarantool> s:update({3}, {{'=', 2, 400}})\n"
"---\n"
"- [3, 400, 5]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 400, 5]\n"
"  - [6, 7, 8]\n"
"  - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Точно обновить по первичному ключу: разрешено --\n"
"tarantool> s.index.pk:update({6}, {{'=', 2, 700}})\n"
"---\n"
"- [6, 700, 8]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 400, 5]\n"
"  - [6, 700, 8]\n"
"  - [9, 10, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Обновить по уникальному вторичному ключу: разрешено --\n"
"tarantool> s.index.sk_uniq:update({10}, {{'=', 2, 1000}})\n"
"---\n"
"- [9, 1000, 11]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 400, 5]\n"
"  - [6, 700, 8]\n"
"  - [9, 1000, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> -- Обновить по неуникальному вторичному ключу: ошибка --\n"
"tarantool> s.index.sk_non_uniq:update({14}, {{'=', 2, 1300}})\n"
"---\n"
"- error: Get() doesn't support partial keys and non-unique indexes\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [3, 400, 5]\n"
"  - [6, 700, 8]\n"
"  - [9, 1000, 11]\n"
"  - [12, 13, 14]\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:2946
msgid "UPSERT"
msgstr "UPSERT"

#: ../doc/book/box/box_space.rst:2948
msgid "``upsert`` accepts a well-formatted tuple and update operations."
msgstr ""
"``upsert`` (обновление и вставка) работает с кортежами с четким форматом и "
"выполняет операции обновления."

#: ../doc/book/box/box_space.rst:2950
msgid ""
"If an old tuple is found by the primary key of the specified tuple, then the "
"update operations are applied to the old tuple, and the new tuple is ignored."
msgstr ""
"Если найден старый кортеж по первичному ключу, то операции обновления "
"применяются к старому кортежу, а новый кортеж игнорируется."

#: ../doc/book/box/box_space.rst:2954
msgid ""
"If no old tuple is found, then the new tuple is inserted, and the update "
"operations are **ignored**."
msgstr ""
"Если старый кортеж не найден, то происходит вставка нового кортежа, а "
"операции обновления **игнорируются**."

#: ../doc/book/box/box_space.rst:2957
msgid "Indexes have no ``upsert`` method - this is a method of a space."
msgstr "Для индексов нет метода ``upsert`` -- это метод для спейса."

#: ../doc/book/box/box_space.rst:2959
msgid ""
"tarantool> s.index.pk.upsert == nil\n"
"---\n"
"- true\n"
"...\n"
"tarantool> s.index.sk_uniq.upsert == nil\n"
"---\n"
"- true\n"
"...\n"
"tarantool> s.upsert ~= nil\n"
"---\n"
"- true\n"
"...\n"
"tarantool> -- As the first argument, upsert accepts --\n"
"tarantool> -- a well-formatted tuple, NOT a key! --\n"
"tarantool> s:insert{1, 2, 3}\n"
"---\n"
"- [1, 2, 3]\n"
"...\n"
"tarantool> s:upsert({1}, {{'=', 2, 200}})\n"
"---\n"
"- error: Tuple field count 1 is less than required by space format or "
"defined indexes\n"
"    (expected at least 3)\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 2, 3]\n"
"...\n"
"tarantool> s:delete{1}\n"
"---\n"
"- [1, 2, 3]\n"
"..."
msgstr ""
"tarantool> s.index.pk.upsert == nil\n"
"---\n"
"- true\n"
"...\n"
"tarantool> s.index.sk_uniq.upsert == nil\n"
"---\n"
"- true\n"
"...\n"
"tarantool> s.upsert ~= nil\n"
"---\n"
"- true\n"
"...\n"
"tarantool> -- В качестве первого аргумента upsert принимает --\n"
"tarantool> -- кортеж с четким форматом, НЕ ключ! --\n"
"tarantool> s:insert{1, 2, 3}\n"
"---\n"
"- [1, 2, 3]\n"
"...\n"
"tarantool> s:upsert({1}, {{'=', 2, 200}})\n"
"---\n"
"- error: Tuple field count 1 is less than required by space format or "
"defined indexes\n"
"    (expected at least 3)\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 2, 3]\n"
"...\n"
"tarantool> s:delete{1}\n"
"---\n"
"- [1, 2, 3]\n"
"..."

#: ../doc/book/box/box_space.rst:2993
msgid ""
"``upsert`` turns into ``insert`` when no old tuple is found by the primary "
"key."
msgstr ""
"``upsert`` превращается в ``insert``, когда старый кортеж не найден по "
"первичному ключу."

#: ../doc/book/box/box_space.rst:2995
msgid ""
"tarantool> s:upsert({1, 2, 3}, {{'=', 2, 200}})\n"
"---\n"
"...\n"
"tarantool> -- As you can see, {1, 2, 3} were inserted, --\n"
"tarantool> -- and the update operations were not applied. --\n"
"s:select{}\n"
"---\n"
"- - [1, 2, 3]\n"
"...\n"
"tarantool> -- Performing another upsert with the same primary key, --\n"
"tarantool> -- but different values in the other fields. --\n"
"s:upsert({1, 20, 30}, {{'=', 2, 200}})\n"
"---\n"
"...\n"
"tarantool> -- The old tuple was found by the primary key {1} --\n"
"tarantool> -- and update operations were applied. --\n"
"tarantool> -- The new tuple was ignored. --\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 200, 3]\n"
"..."
msgstr ""
"tarantool> s:upsert({1, 2, 3}, {{'=', 2, 200}})\n"
"---\n"
"...\n"
"tarantool> -- Как можно увидеть, произошла вставка {1, 2, 3}, --\n"
"tarantool> -- а операции обновления не применились. --\n"
"s:select{}\n"
"---\n"
"- - [1, 2, 3]\n"
"...\n"
"tarantool> -- Еще одна операция upsert с тем же первичным ключом, --\n"
"tarantool> -- но другими значениями прочих полей. --\n"
"s:upsert({1, 20, 30}, {{'=', 2, 200}})\n"
"---\n"
"...\n"
"tarantool> -- Старый кортеж был найден по первичному ключу {1}, --\n"
"tarantool> -- и применились операции обновления. --\n"
"tarantool> -- Новый кортеж игнорируется. --\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 200, 3]\n"
"..."

#: ../doc/book/box/box_space.rst:3019
msgid ""
"``upsert`` searches for an old tuple by the primary index, NOT by a "
"secondary index. This can lead to a duplication error if the new tuple ruins "
"the uniqueness of a secondary index."
msgstr ""
"``upsert`` ищет старый кортеж по первичному индексу, НЕ по вторичному. Это "
"может привести к ошибкам с дубликатами, если новый кортеж нарушает "
"уникальность вторичного индекса."

#: ../doc/book/box/box_space.rst:3023
msgid ""
"tarantool> s:upsert({2, 200, 3}, {{'=', 3, 300}})\n"
"---\n"
"- error: Duplicate key exists in unique index 'sk_uniq' in space 'test'\n"
"...\n"
"s:select{}\n"
"---\n"
"- - [1, 200, 3]\n"
"...\n"
"tarantool> -- But this works, when uniqueness is preserved. --\n"
"tarantool> s:upsert({2, 0, 0}, {{'=', 3, 300}})\n"
"---\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 200, 3]\n"
"  - [2, 0, 0]\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."
msgstr ""
"tarantool> s:upsert({2, 200, 3}, {{'=', 3, 300}})\n"
"---\n"
"- error: Duplicate key exists in unique index 'sk_uniq' in space 'test'\n"
"...\n"
"s:select{}\n"
"---\n"
"- - [1, 200, 3]\n"
"...\n"
"tarantool> -- Но сработает, если сохраняется уникальность. --\n"
"tarantool> s:upsert({2, 0, 0}, {{'=', 3, 300}})\n"
"---\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 200, 3]\n"
"  - [2, 0, 0]\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:3050
msgid "REPLACE"
msgstr "REPLACE"

#: ../doc/book/box/box_space.rst:3052
msgid ""
"``replace`` accepts a well-formatted tuple and searches for an old tuple by "
"the primary key of the new tuple."
msgstr ""
"``replace`` (замена) работает с кортежами с четким форматом и ищет старый "
"кортеж по первичному ключу нового кортежа."

#: ../doc/book/box/box_space.rst:3055
msgid ""
"If the old tuple is found, then it is deleted, and the new tuple is inserted."
msgstr ""
"Если найден старый кортеж, то происходит удаление старого кортежа и вставка "
"нового."

#: ../doc/book/box/box_space.rst:3057
msgid "If the old tuple was not found, then just the new tuple is inserted."
msgstr "Если старый кортеж не найден, вставляется новый кортеж."

#: ../doc/book/box/box_space.rst:3059
msgid ""
"tarantool> s:replace{1, 2, 3}\n"
"---\n"
"- [1, 2, 3]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 2, 3]\n"
"...\n"
"tarantool> s:replace{1, 3, 4}\n"
"---\n"
"- [1, 3, 4]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 3, 4]\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."
msgstr ""
"tarantool> s:replace{1, 2, 3}\n"
"---\n"
"- [1, 2, 3]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 2, 3]\n"
"...\n"
"tarantool> s:replace{1, 3, 4}\n"
"---\n"
"- [1, 3, 4]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 3, 4]\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:3081
msgid "``replace`` can ruin unique constraints, like ``upsert`` does."
msgstr "Как и ``upsert``, ``replace`` может нарушить требования уникальности."

#: ../doc/book/box/box_space.rst:3083
msgid ""
"tarantool> s:insert{1, 1, 1}\n"
"---\n"
"- [1, 1, 1]\n"
"...\n"
"tarantool> s:insert{2, 2, 2}\n"
"---\n"
"- [2, 2, 2]\n"
"...\n"
"tarantool> -- This replace fails, because if the new tuple {1, 2, 0} "
"replaces --\n"
"tarantool> -- the old tuple by the primary key from 'pk' index {1, 1, 1}, "
"--\n"
"tarantool> -- this results in a duplicate unique secondary key in 'sk_uniq' "
"index: --\n"
"tarantool> -- key {2} is used both in the new tuple and in {2, 2, 2}. --\n"
"tarantool> s:replace{1, 2, 0}\n"
"---\n"
"- error: Duplicate key exists in unique index 'sk_uniq' in space 'test'\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."
msgstr ""
"tarantool> s:insert{1, 1, 1}\n"
"---\n"
"- [1, 1, 1]\n"
"...\n"
"tarantool> s:insert{2, 2, 2}\n"
"---\n"
"- [2, 2, 2]\n"
"...\n"
"tarantool> -- Такая замена не сработает, поскольку замена новым кортежем {1, "
"2, 0} --\n"
"tarantool> -- старого кортежа по первичному ключу из индекса 'pk' {1, 1, 1}, "
"--\n"
"tarantool> -- приведет к созданию дубликата уникального вторичного ключа в "
"индексе 'sk_uniq': --\n"
"tarantool> -- ключ {2} используется и в новом кортеже, и в {2, 2, 2}. --\n"
"tarantool> s:replace{1, 2, 0}\n"
"---\n"
"- error: Duplicate key exists in unique index 'sk_uniq' in space 'test'\n"
"...\n"
"tarantool> s:truncate()\n"
"---\n"
"..."

#: ../doc/book/box/box_space.rst:3109
msgid "SELECT"
msgstr "SELECT"

#: ../doc/book/box/box_space.rst:3111
msgid ""
"``select`` works with any indexes (primary/secondary) and with any keys "
"(unique/non-unique, full/partial)."
msgstr ""
"``select`` (выборка) работает с любыми индексами (первичными/вторичными) и с "
"любыми ключами (уникальными/неуникальными, полными/компонентами)."

#: ../doc/book/box/box_space.rst:3114
msgid ""
"If a key is partial, then ``select`` searches by all keys, where the prefix "
"matches the specified key part."
msgstr ""
"Если задан компонент ключа, ``select`` выполняет поиск всех ключей, префикс "
"которых совпадает с указанным компонентом ключа."

#: ../doc/book/box/box_space.rst:3117
msgid ""
"tarantool> s:insert{1, 2, 3}\n"
"---\n"
"- [1, 2, 3]\n"
"...\n"
"tarantool> s:insert{4, 5, 6}\n"
"---\n"
"- [4, 5, 6]\n"
"...\n"
"tarantool> s:insert{7, 8, 9}\n"
"---\n"
"- [7, 8, 9]\n"
"...\n"
"tarantool> s:insert{10, 11, 9}\n"
"---\n"
"- [10, 11, 9]\n"
"...\n"
"tarantool> s:select{1}\n"
"---\n"
"- - [1, 2, 3]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 2, 3]\n"
"  - [4, 5, 6]\n"
"  - [7, 8, 9]\n"
"  - [10, 11, 9]\n"
"...\n"
"tarantool> s.index.pk:select{4}\n"
"---\n"
"- - [4, 5, 6]\n"
"...\n"
"tarantool> s.index.sk_uniq:select{8}\n"
"---\n"
"- - [7, 8, 9]\n"
"...\n"
"tarantool> s.index.sk_non_uniq:select{9}\n"
"---\n"
"- - [7, 8, 9]\n"
"  - [10, 11, 9]\n"
"..."
msgstr ""
"tarantool> s:insert{1, 2, 3}\n"
"---\n"
"- [1, 2, 3]\n"
"...\n"
"tarantool> s:insert{4, 5, 6}\n"
"---\n"
"- [4, 5, 6]\n"
"...\n"
"tarantool> s:insert{7, 8, 9}\n"
"---\n"
"- [7, 8, 9]\n"
"...\n"
"tarantool> s:insert{10, 11, 9}\n"
"---\n"
"- [10, 11, 9]\n"
"...\n"
"tarantool> s:select{1}\n"
"---\n"
"- - [1, 2, 3]\n"
"...\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 2, 3]\n"
"  - [4, 5, 6]\n"
"  - [7, 8, 9]\n"
"  - [10, 11, 9]\n"
"...\n"
"tarantool> s.index.pk:select{4}\n"
"---\n"
"- - [4, 5, 6]\n"
"...\n"
"tarantool> s.index.sk_uniq:select{8}\n"
"---\n"
"- - [7, 8, 9]\n"
"...\n"
"tarantool> s.index.sk_non_uniq:select{9}\n"
"---\n"
"- - [7, 8, 9]\n"
"  - [10, 11, 9]\n"
"..."
