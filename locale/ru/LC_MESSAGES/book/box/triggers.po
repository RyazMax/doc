# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-04 10:02+0000\n"
"PO-Revision-Date: 2019-12-20 21:24+0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"Generated-By: Babel 2.7.0\n"

#: ../doc/book/box/triggers.rst:6
msgid "Triggers"
msgstr "Триггеры"

#: ../doc/book/box/triggers.rst:8
msgid ""
"**Triggers**, also known as **callbacks**, are functions which the server "
"executes when certain events happen."
msgstr ""
"**Триггеры**, которые также называют **обратными вызовами**, представляют "
"собой функции, которые выполняет сервер при наступлении определенных событий."

#: ../doc/book/box/triggers.rst:11
msgid "There are six types of triggers in Tarantool:"
msgstr "В Tarantool'е есть шесть типов триггеров:"

#: ../doc/book/box/triggers.rst:13 ../doc/book/box/triggers.rst:33
msgid ""
":ref:`box.session.on_connect() <box_session-on_connect>` or :ref:`box."
"session.on_disconnect() <box_session-on_disconnect>`,"
msgstr ""
":ref:`box.session.on_connect() <box_session-on_connect>` (при установлении "
"соединени) или :ref:`box.session.on_disconnect() <box_session-"
"on_disconnect>` (при разрыве соединения),"

#: ../doc/book/box/triggers.rst:15 ../doc/book/box/triggers.rst:35
#, fuzzy
msgid ":ref:`box.session.on_auth() <box_session-on_auth>`,"
msgstr ""
"#-#-#-#-#  catalog.po (Tarantool 1.10)  #-#-#-#-#\n"
":ref:`box.session.on_auth() <box_session-on_auth>` (при аутентификации),\n"
"#-#-#-#-#  catalog.po (Tarantool 1.10)  #-#-#-#-#\n"
":ref:`box.session.on_auth() <box_session-on_auth>`,"

#: ../doc/book/box/triggers.rst:16 ../doc/book/box/triggers.rst:39
#, fuzzy
msgid ""
":ref:`space_object:on_replace() <box_space-on_replace>` or :ref:"
"`space_object:before_replace() <box_space-before_replace>`,"
msgstr ""
":ref:`space_object:on_replace() <box_space-on_replace>` (после замены) или :"
"ref:`space_object:before_replace() <box_space-before_replace>` (перед "
"заменой),"

#: ../doc/book/box/triggers.rst:18 ../doc/book/box/triggers.rst:41
#, fuzzy
msgid ""
":ref:`box.on_commit() <box-on_commit>` or :ref:`box.on_rollback() <box-"
"on_rollback>`,"
msgstr ""
":ref:`box.on_commit() <box-on_commit>` (при коммите) или :ref:`box."
"on_rollback() <box-on_rollback>` (при откате),"

#: ../doc/book/box/triggers.rst:20 ../doc/book/box/triggers.rst:36
#, fuzzy
msgid ""
":ref:`net.box.on_connect() <net_box-on_connect>` or :ref:`net.box."
"on_disconnect() <net_box-on_disconnect>`,"
msgstr ""
":ref:`net.box.on_connect() <net_box-on_connect>` или :ref:`net.box."
"on_disconnect() <net_box-on_disconnect>` или"

#: ../doc/book/box/triggers.rst:22 ../doc/book/box/triggers.rst:38
#, fuzzy
msgid ":ref:`net.box.on_schema_reload() <net_box-on_schema_reload>`,"
msgstr ":ref:`box.on_rollback() <box-on_rollback>`"

#: ../doc/book/box/triggers.rst:23 ../doc/book/box/triggers.rst:43
#, fuzzy
msgid ""
":ref:`box.ctl.on_schema_init() <box_ctl-on_schema_init>` or :ref:`box.ctl."
"on_shutdown() <box_ctl-on_shutdown>`,"
msgstr ""
":ref:`box.on_commit() <box-on_commit>` или :ref:`box.on_rollback() <box-"
"on_rollback>` или"

#: ../doc/book/box/triggers.rst:25 ../doc/book/box/triggers.rst:45
#, fuzzy
msgid ":ref:`swim_object:on_member_event() <swim-on_member_event>`."
msgstr ":ref:`space_object:on_replace() <box_space-on_replace>`"

#: ../doc/book/box/triggers.rst:27
msgid "All triggers have the following characteristics:"
msgstr "У всех триггеров есть следующие особенности:"

#: ../doc/book/box/triggers.rst:29
msgid ""
"Triggers associate a function with an event. The request to \"define a "
"trigger\" implies passing the trigger's function to one of the "
"\"on_event()\" functions:"
msgstr ""
"Триггеры связывают функцию с событием. Запрос \"определить триггер\" "
"подразумевает передачу функции триггера в одну из функций обработки событий "
"\"on_event()\":"

#: ../doc/book/box/triggers.rst:47
msgid ""
"Triggers are defined only by the :ref:`'admin' user <authentication-"
"owners_privileges>`."
msgstr ""
"Только :ref:`пользователь 'admin' <authentication-owners_privileges>` "
"определяет триггеры."

#: ../doc/book/box/triggers.rst:49
msgid ""
"Triggers are stored in the Tarantool instance's memory, not in the database. "
"Therefore triggers disappear when the instance is shut down. To make them "
"permanent, put function definitions and trigger settings into Tarantool's :"
"ref:`initialization script <index-init_label>`."
msgstr ""
"Триггеры хранятся в памяти экземпляра Tarantool'а, а не в базе данных. "
"Поэтому триггеры пропадают, когда экземпляр отключают. Чтобы сохранить их, "
"поместите определения функции и настройки триггера в :ref:`скрипт "
"инициализации <index-init_label>` Tarantool'а."

#: ../doc/book/box/triggers.rst:54
msgid ""
"Triggers have low overhead. If a trigger is not defined, then the overhead "
"is minimal: merely a pointer dereference and check. If a trigger is defined, "
"then its overhead is equivalent to the overhead of calling a function."
msgstr ""
"Триггеры не приводят к высокой затрате ресурсов. Если триггер не определен, "
"то затрата ресурсов минимальна: только разыменование указателя и проверка. "
"Если триггер определен, то затрата ресурсов аналогична вызову функции."

#: ../doc/book/box/triggers.rst:58
#, fuzzy
msgid ""
"There can be multiple triggers for one event. In this case, triggers are "
"executed in the reverse order that they were defined in. (Exception: member "
"triggers are executed in the order that they appear in the member list.)"
msgstr ""
"Для одного события можно определить несколько триггеров. В таком случае "
"триггеры выполняются в обратном порядке относительно того, как их определили."

#: ../doc/book/box/triggers.rst:62
msgid ""
"Triggers must work within the event context. However, effects are undefined "
"if a function contains requests which normally could not occur immediately "
"after the event, but only before the return from the event. For example, "
"putting `os.exit() <http://www.lua.org/manual/5.1/manual.html#pdf-os.exit>`_ "
"or :ref:`box.rollback() <box-rollback>` in a trigger function would be "
"bringing in requests outside the event context."
msgstr ""
"Триггеры должны работать в контексте события. Однако результат не определен, "
"если функция содержит запросы, которые при нормальных условиях не могут быть "
"выполнены непосредственно после события, а только после возврата из события. "
"Например, если указать `os.exit() <http://www.lua.org/manual/5.1/manual."
"html#pdf-os.exit>`_ или :ref:`box.rollback() <box-rollback>` в триггерной "
"функции, запросы не будут выполняться в контексте события."

#: ../doc/book/box/triggers.rst:69
msgid ""
"Triggers are replaceable. The request to \"redefine a trigger\" implies "
"passing a new trigger function and an old trigger function to one of the "
"\"on_event()\" functions."
msgstr ""
"Триггеры можно заменять. Запрос на \"замену триггера\" подразумевает "
"передачу новой триггерной функции и старой триггерной функции в одну из "
"функций обработки событий \"on_event()\"."

#: ../doc/book/box/triggers.rst:73
msgid ""
"The \"on_event()\" functions all have parameters which are function "
"pointers, and they all return function pointers. Remember that a Lua "
"function definition such as \"function f() x = x + 1 end\" is the same as "
"\"f = function () x = x + 1 end\" -- in both cases ``f`` gets a function "
"pointer. And \"trigger = box.session.on_connect(f)\" is the same as "
"\"trigger = box.session.on_connect(function () x = x + 1 end)\" -- in both "
"cases ``trigger`` gets the function pointer which was passed."
msgstr ""
"Во всех функциях обработки событий \"on_event()\" есть параметры, которые "
"представляют собой указатели функции, и все они возвращают указатели "
"функции. Следует запомнить, что определение Lua-функции, например, "
"\"function f() x = x + 1 end\" совпадает с \"f = function () x = x + 1 end\" "
"-- в обоих случаях ``f`` получит указатель функции. А \"trigger = box."
"session.on_connect(f)\" -- это то же самое, что \"trigger = box.session."
"on_connect(function () x = x + 1 end)\" -- в обоих случаях ``trigger`` "
"получит переданный указатель функции."

#: ../doc/book/box/triggers.rst:81
msgid ""
"You can call any \"on_event()\" function with no arguments to get a list of "
"its triggers. For example, use ``box.session.on_connect()`` to return a "
"table of all connect-trigger functions."
msgstr ""
"Если вызвать любую из \"on_event()\" функций без аргументов, то она вернет "
"список соответствующих триггеров. Например, ``box.session.on_connect()`` "
"вернет таблицу со всеми connect-trigger функциями."

# ; ../doc/book/box/box_session.rst:313
#: ../doc/book/box/triggers.rst:85
msgid "**Example**"
msgstr "**Пример**"

#: ../doc/book/box/triggers.rst:87
msgid "Here we log connect and disconnect events into Tarantool server log."
msgstr ""
"Здесь мы записываем события подключения и отключения в журнал на сервере "
"Tarantool'а."

#: ../doc/book/box/triggers.rst:89
#, fuzzy
msgid ""
"log = require('log')\n"
"\n"
"function on_connect_impl()\n"
"  log.info(\"connected \"..box.session.peer()..\", sid \"..box.session."
"id())\n"
"end\n"
"\n"
"function on_disconnect_impl()\n"
"  log.info(\"disconnected, sid \"..box.session.id())\n"
"end\n"
"\n"
"function on_auth_impl(user)\n"
"  log.info(\"authenticated sid \"..box.session.id()..\" as \"..user)\n"
"end\"\n"
"\n"
"function on_connect() pcall(on_connect_impl) end\n"
"function on_disconnect() pcall(on_disconnect_impl) end\n"
"function on_auth(user) pcall(on_auth_impl, user) end\n"
"\n"
"box.session.on_connect(on_connect)\n"
"box.session.on_disconnect(on_disconnect)\n"
"box.session.on_auth(on_auth)"
msgstr ""
"log = require('log')\n"
"\n"
"function on_connect_impl()\n"
"  log.info(\"connected \"..box.session.peer()..\", sid \"..box.session."
"id())\n"
"end\n"
"\n"
"function on_disconnect_impl()\n"
"  log.info(\"disconnected, sid \"..box.session.id())\n"
"end\n"
"\n"
"function on_auth_impl(user)\n"
"  log.info(\"authenticated sid \"..box.session.id()..\" as \"..user)\n"
"end\n"
"\n"
"function on_connect() pcall(on_connect_impl) end\n"
"function on_disconnect() pcall(on_disconnect_impl) end\n"
"function on_auth(user) pcall(on_auth_impl, user) end\n"
"\n"
"box.session.on_connect(on_connect)\n"
"box.session.on_disconnect(on_disconnect)\n"
"box.session.on_auth(on_auth)"
