# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-04 10:02+0000\n"
"PO-Revision-Date: 2019-12-06 16:16+0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"Generated-By: Babel 2.7.0\n"

#: ../doc/reference/reference_lua/clock.rst:5
msgid "Module `clock`"
msgstr "Модуль `clock`"

#: ../doc/reference/reference_lua/clock.rst:9
msgid "Overview"
msgstr "Общие сведения"

#: ../doc/reference/reference_lua/clock.rst:11
msgid ""
"The ``clock`` module returns time values derived from the Posix / C "
"CLOCK_GETTIME_ function or equivalent. Most functions in the module return a "
"number of seconds; functions whose names end in \"64\" return a 64-bit "
"number of nanoseconds."
msgstr ""
"Модуль ``clock`` возвращает значения времени, полученных из функции Posix / "
"C CLOCK_GETTIME_ или аналогичной. Большинство функций модуля возвращают "
"число секунд; функции, названия которых заканчиваются на \"64\", возвращают "
"64-разрадяное число наносекунд."

#: ../doc/reference/reference_lua/clock.rst:18
msgid "Index"
msgstr "Указатель"

#: ../doc/reference/reference_lua/clock.rst:20
msgid "Below is a list of all ``clock`` functions."
msgstr "Ниже приведен перечень всех функций модуля ``clock``."

#: ../doc/reference/reference_lua/clock.rst:28
msgid "Name"
msgstr "Имя"

#: ../doc/reference/reference_lua/clock.rst:28
msgid "Use"
msgstr "Назначение"

#: ../doc/reference/reference_lua/clock.rst:30
msgid ""
":ref:`clock.time() <clock-time>` |br| :ref:`clock.realtime() <clock-time>`"
msgstr ""
":ref:`clock.time() <clock-time>` |br| :ref:`clock.realtime() <clock-time>`"

#: ../doc/reference/reference_lua/clock.rst:31
msgid "Get the wall clock time in seconds"
msgstr "Получение физического времени в секундах"

#: ../doc/reference/reference_lua/clock.rst:35
msgid ""
":ref:`clock.time64() <clock-time>` |br| :ref:`clock.realtime64() <clock-"
"time>`"
msgstr ""
":ref:`clock.time64() <clock-time>` |br| :ref:`clock.realtime64() <clock-"
"time>`"

#: ../doc/reference/reference_lua/clock.rst:36
msgid "Get the wall clock time in nanoseconds"
msgstr "Получение физического времени в наносекундах"

#: ../doc/reference/reference_lua/clock.rst:40
msgid ":ref:`clock.monotonic() <clock-monotonic>`"
msgstr ":ref:`clock.monotonic() <clock-monotonic>`"

#: ../doc/reference/reference_lua/clock.rst:40
msgid "Get the monotonic time in seconds"
msgstr "Получение монотонного времени в секундах"

#: ../doc/reference/reference_lua/clock.rst:43
msgid ":ref:`clock.monotonic64() <clock-monotonic>`"
msgstr ":ref:`clock.monotonic64() <clock-monotonic>`"

#: ../doc/reference/reference_lua/clock.rst:43
msgid "Get the monotonic time in nanoseconds"
msgstr "Получение монотонного времени в наносекундах"

#: ../doc/reference/reference_lua/clock.rst:46
msgid ":ref:`clock.proc() <clock-proc>`"
msgstr ":ref:`clock.proc() <clock-proc>`"

#: ../doc/reference/reference_lua/clock.rst:46
msgid "Get the processor time in seconds"
msgstr "Получение времени процессора в секундах"

#: ../doc/reference/reference_lua/clock.rst:49
msgid ":ref:`clock.proc64() <clock-proc>`"
msgstr ":ref:`clock.proc64() <clock-proc>`"

#: ../doc/reference/reference_lua/clock.rst:49
msgid "Get the processor time in nanoseconds"
msgstr "Получение времени процессора в наносекундах"

#: ../doc/reference/reference_lua/clock.rst:52
msgid ":ref:`clock.thread() <clock-thread>`"
msgstr ":ref:`clock.thread() <clock-thread>`"

#: ../doc/reference/reference_lua/clock.rst:52
msgid "Get the thread time in seconds"
msgstr "Получение рабочего времени потока в секундах"

#: ../doc/reference/reference_lua/clock.rst:55
msgid ":ref:`clock.thread64() <clock-thread>`"
msgstr ":ref:`clock.thread64() <clock-thread>`"

#: ../doc/reference/reference_lua/clock.rst:55
msgid "Get the thread time in nanoseconds"
msgstr "Получение рабочего времени потока в наносекундах"

#: ../doc/reference/reference_lua/clock.rst:58
msgid ":ref:`clock.bench() <clock-bench>`"
msgstr ":ref:`clock.bench() <clock-bench>`"

#: ../doc/reference/reference_lua/clock.rst:58
msgid "Measure the time a function takes within a processor"
msgstr "Измерение времени, которое функция проводит в процессоре"

#: ../doc/reference/reference_lua/clock.rst:71
msgid ""
"The wall clock time. Derived from C function clock_gettime(CLOCK_REALTIME). "
"This is the best function for knowing what the official time is, as "
"determined by the system administrator."
msgstr ""
"Физическое время в секундах. Получено из C-функции "
"clock_gettime(CLOCK_REALTIME). Использование этой функции лучше всего "
"подходит для выяснения официального времени, как установлено системным "
"администратором."

#: ../doc/reference/reference_lua/clock.rst:0
msgid "return"
msgstr "возвращает"

#: ../doc/reference/reference_lua/clock.rst:75
msgid "seconds or nanoseconds since epoch (1970-01-01 00:00:00), adjusted."
msgstr ""
"секунды или наносекунды с начала отсчета (1970-01-01 00:00:00), значение "
"корректируется."

#: ../doc/reference/reference_lua/clock.rst:0
msgid "rtype"
msgstr "тип возвращаемого значения"

#: ../doc/reference/reference_lua/clock.rst:76
#: ../doc/reference/reference_lua/clock.rst:101
#: ../doc/reference/reference_lua/clock.rst:122
#: ../doc/reference/reference_lua/clock.rst:143
msgid "number or number64"
msgstr "число или 64-разрядное число"

#: ../doc/reference/reference_lua/clock.rst:78
#: ../doc/reference/reference_lua/clock.rst:103
#: ../doc/reference/reference_lua/clock.rst:124
#: ../doc/reference/reference_lua/clock.rst:145
#: ../doc/reference/reference_lua/clock.rst:167
msgid "**Example:**"
msgstr "**Пример:**"

#: ../doc/reference/reference_lua/clock.rst:80
msgid ""
"-- This will print an approximate number of years since 1970.\n"
"clock = require('clock')\n"
"print(clock.time() / (365*24*60*60))"
msgstr ""
"-- Результатом будет примерное число лет с 1970.\n"
"clock = require('clock')\n"
"print(clock.time() / (365*24*60*60))"

#: ../doc/reference/reference_lua/clock.rst:86
msgid ""
"See also :ref:`fiber.time64 <fiber-time64>` and the standard Lua function "
"`os.clock <http://www.lua.org/manual/5.1/manual.html#pdf-os.clock>`_."
msgstr ""
"См. также :ref:`fiber.time64 <fiber-time64>` и стандартную Lua-функцию `os."
"clock <http://www.lua.org/manual/5.1/manual.html#pdf-os.clock>`_."

#: ../doc/reference/reference_lua/clock.rst:94
msgid ""
"The monotonic time. Derived from C function clock_gettime(CLOCK_MONOTONIC). "
"Monotonic time is similar to wall clock time but is not affected by changes "
"to or from daylight saving time, or by changes done by a user. This is the "
"best function to use with benchmarks that need to calculate elapsed time."
msgstr ""
"Монотонное время. Получено из C-функции clock_gettime(CLOCK_MONOTONIC). "
"Монотонное время похоже на физическое время, но на него не влияют изменения "
"для перехода на летнее время или изменения, сделанные пользователем. Такую "
"функцию лучше всего использовать для эталонного тестирования, где необходимо "
"рассчитать затраченное время."

#: ../doc/reference/reference_lua/clock.rst:100
msgid ""
"seconds or nanoseconds since the last time that the computer was booted."
msgstr "секунды или наносекунды с момента последней загрузки компьютера."

#: ../doc/reference/reference_lua/clock.rst:105
msgid ""
"-- This will print nanoseconds since the start.\n"
"clock = require('clock')\n"
"print(clock.monotonic64())"
msgstr ""
"-- Результатом будет число наносекунд с запуска.\n"
"clock = require('clock')\n"
"print(clock.monotonic64())"

#: ../doc/reference/reference_lua/clock.rst:116
msgid ""
"The processor time. Derived from C function "
"``clock_gettime(CLOCK_PROCESS_CPUTIME_ID)``. This is the best function to "
"use with benchmarks that need to calculate how much time has been spent "
"within a CPU."
msgstr ""
"Время процессора. Получено из C-функции "
"``clock_gettime(CLOCK_PROCESS_CPUTIME_ID)``. Такую функцию лучше всего "
"использовать для эталонного тестирования, где необходимо рассчитать время, "
"затраченное на процессоре."

#: ../doc/reference/reference_lua/clock.rst:121
msgid "seconds or nanoseconds since processor start."
msgstr "секунды или наносекунды с момента начала работы процессора."

#: ../doc/reference/reference_lua/clock.rst:126
msgid ""
"-- This will print nanoseconds in the CPU since the start.\n"
"clock = require('clock')\n"
"print(clock.proc64())"
msgstr ""
"-- Результатом будет число наносекунд с запуска процессора.\n"
"clock = require('clock')\n"
"print(clock.proc64())"

#: ../doc/reference/reference_lua/clock.rst:137
msgid ""
"The thread time. Derived from C function "
"``clock_gettime(CLOCK_THREAD_CPUTIME_ID)``. This is the best function to use "
"with benchmarks that need to calculate how much time has been spent within a "
"thread within a CPU."
msgstr ""
"Рабочее время потока. Получено из C-функции "
"``clock_gettime(CLOCK_THREAD_CPUTIME_ID)``. Такую функцию лучше всего "
"использовать для эталонного тестирования, где необходимо рассчитать время, "
"затраченное потоком на процессоре."

#: ../doc/reference/reference_lua/clock.rst:142
msgid "seconds or nanoseconds since the transaction processor thread started."
msgstr ""
"секунды или наносекунды с момента начала работы потока процессора транзакций."

#: ../doc/reference/reference_lua/clock.rst:147
msgid ""
"-- This will print seconds in the thread since the start.\n"
"clock = require('clock')\n"
"print(clock.thread64())"
msgstr ""
"-- Результатом будет число секунд с момента начала работы потока.\n"
"clock = require('clock')\n"
"print(clock.thread64())"

#: ../doc/reference/reference_lua/clock.rst:157
msgid ""
"The time that a function takes within a processor. This function uses "
"``clock.proc()``, therefore it calculates elapsed CPU time. Therefore it is "
"not useful for showing actual elapsed time."
msgstr ""
"Время, которое функция проводит в процессоре. Данная функция использует "
"``clock.proc()``, то есть рассчитывает затраченное процессором время. Таким "
"образом, она не используется для отображения фактически затраченного времени."

#: ../doc/reference/reference_lua/clock.rst:0
msgid "Parameters"
msgstr "Параметры"

#: ../doc/reference/reference_lua/clock.rst:161
msgid "function or function reference"
msgstr "функция или ссылка на функцию"

#: ../doc/reference/reference_lua/clock.rst:162
msgid "whatever values are required by the function."
msgstr "значения, которые необходимы для функции."

#: ../doc/reference/reference_lua/clock.rst:164
msgid ""
"**table**. first element - seconds of CPU time, second element - whatever "
"the function returns."
msgstr ""
"**таблица**. Первый элемент -- время работы процессора в секундах, второй "
"элемент -- то, что возвращает функция."

#: ../doc/reference/reference_lua/clock.rst:169
msgid ""
"-- Benchmark a function which sleeps 10 seconds.\n"
"-- NB: bench() will not calculate sleep time.\n"
"-- So the returned value will be {a number less than 10, 88}.\n"
"clock = require('clock')\n"
"fiber = require('fiber')\n"
"function f(param)\n"
"  fiber.sleep(param)\n"
"  return 88\n"
"end\n"
"clock.bench(f, 10)"
msgstr ""
"-- Эталонное тестирование функции, которая находится в спящем режиме в "
"течение 10 секунд.\n"
"-- NB: bench() не будет рассчитывать время сна.\n"
"-- Поэтому вернется значение, которое будет {число менее 10, 88}.\n"
"clock = require('clock')\n"
"fiber = require('fiber')\n"
"function f(param)\n"
"  fiber.sleep(param)\n"
"  return 88\n"
"end\n"
"clock.bench(f, 10)"
