# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-03 19:10+0000\n"
"PO-Revision-Date: 2019-12-06 16:16+0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"Generated-By: Babel 2.7.0\n"
"X-Generator: Poedit 2.2.4\n"

#: ../doc/reference/reference_lua/string.rst:5
msgid "Module `string`"
msgstr "Модуль `string`"

#: ../doc/reference/reference_lua/string.rst:9
msgid "Overview"
msgstr "Общие сведения"

#: ../doc/reference/reference_lua/string.rst:13
msgid ""
"The :code:`string` module has everything in the `standard Lua string library "
"<https://www.lua.org/pil/20.html>`_, and some Tarantool extensions."
msgstr ""
"Модуль :code:`string` включает в себя всё из `стандартной библиотеки для "
"работы со строками в Lua <https://www.lua.org/pil/20.html>`_, а также "
"некоторые расширения специально для Tarantool'а."

#: ../doc/reference/reference_lua/string.rst:17
msgid ""
"In this section we only discuss the additional functions that the Tarantool "
"developers have added."
msgstr ""
"В данном разделе мы рассматриваем только дополнительные функции, добавленные "
"разработчиками Tarantool'а."

#: ../doc/reference/reference_lua/string.rst:20
msgid "Below is a list of all additional ``string`` functions."
msgstr "Ниже приведен перечень всех функций библиотеки ``string``."

#: ../doc/reference/reference_lua/string.rst:28
msgid "Name"
msgstr "Имя"

#: ../doc/reference/reference_lua/string.rst:28
msgid "Use"
msgstr "Назначение"

#: ../doc/reference/reference_lua/string.rst:30
msgid ":ref:`string.ljust() <string-ljust>`"
msgstr ":ref:`string.ljust() <string-ljust>`"

#: ../doc/reference/reference_lua/string.rst:30
msgid "Left-justify a string"
msgstr "Выравнивание строки по левому полю"

#: ../doc/reference/reference_lua/string.rst:33
msgid ":ref:`string.rjust() <string-rjust>`"
msgstr ":ref:`string.rjust() <string-rjust>`"

#: ../doc/reference/reference_lua/string.rst:33
msgid "Right-justify a string"
msgstr "Выравнивание строки по правому полю"

#: ../doc/reference/reference_lua/string.rst:36
msgid ":ref:`string.hex() <string-hex>`"
msgstr ":ref:`string.hex() <string-hex>`"

#: ../doc/reference/reference_lua/string.rst:36
msgid "Get the hexadecimal value of a string"
msgstr "Получение шестнадцатеричного значения строки"

#: ../doc/reference/reference_lua/string.rst:39
msgid ":ref:`string.startswith() <string-startswith>`"
msgstr ":ref:`string.startswith() <string-startswith>`"

#: ../doc/reference/reference_lua/string.rst:39
msgid "Check if a string starts with a given substring"
msgstr "Проверка, начинается ли строка с заданной подстроки"

#: ../doc/reference/reference_lua/string.rst:42
msgid ":ref:`string.endswith() <string-endswith>`"
msgstr ":ref:`string.endswith() <string-endswith>`"

#: ../doc/reference/reference_lua/string.rst:42
msgid "Check if a string ends with a given substring"
msgstr "Проверка, заканчивается ли строка на заданную подстроку"

#: ../doc/reference/reference_lua/string.rst:45
msgid ":ref:`string.lstrip() <string-lstrip>`"
msgstr ":ref:`string.lstrip() <string-lstrip>`"

#: ../doc/reference/reference_lua/string.rst:45
msgid "Remove spaces on the left of a string"
msgstr "Удаление пробелов слева от строки"

#: ../doc/reference/reference_lua/string.rst:48
msgid ":ref:`string.rstrip() <string-rstrip>`"
msgstr ":ref:`string.rstrip() <string-rstrip>`"

#: ../doc/reference/reference_lua/string.rst:48
msgid "Remove spaces on the right of a string"
msgstr "Удаление пробелов справа от строки"

#: ../doc/reference/reference_lua/string.rst:51
msgid ":ref:`string.split() <string-split>`"
msgstr ":ref:`string.split() <string-split>`"

#: ../doc/reference/reference_lua/string.rst:51
msgid "Split a string into a table of strings"
msgstr "Разделение строки на таблицу со строками"

#: ../doc/reference/reference_lua/string.rst:54
msgid ":ref:`string.strip() <string-strip>`"
msgstr ":ref:`string.strip() <string-strip>`"

#: ../doc/reference/reference_lua/string.rst:54
msgid "Remove spaces on the left and right of a string"
msgstr "Удаление пробелов слева и справа от строки"

#: ../doc/reference/reference_lua/string.rst:63
msgid "Return the string left-justified in a string of length ``width``."
msgstr ""
"Возврат строки, выровненной по левому краю, шириной, указанной в ``width``."

#: ../doc/reference/reference_lua/string.rst:0
msgid "Parameters"
msgstr "Параметры"

#: ../doc/reference/reference_lua/string.rst:65
msgid "the string to left-justify"
msgstr "строка для выравнивания по левому краю"

#: ../doc/reference/reference_lua/string.rst:66
msgid "the width of the string after left-justifying"
msgstr "ширина строки после выравнивания по левому краю"

#: ../doc/reference/reference_lua/string.rst:67
#: ../doc/reference/reference_lua/string.rst:92
msgid "a single character, default = 1 space"
msgstr "отдельный символ, по умолчанию = 1 пробел"

#: ../doc/reference/reference_lua/string.rst:0
msgid "Return"
msgstr "Возвращается"

#: ../doc/reference/reference_lua/string.rst:69
msgid "left-justified string (unchanged if width <= string length)"
msgstr ""
"выровненная по левому краю строка (не изменяется, если ширина <= длине "
"строки)"

#: ../doc/reference/reference_lua/string.rst:0
msgid "Rtype"
msgstr "Тип возвращаемого значения"

#: ../doc/reference/reference_lua/string.rst:70
#: ../doc/reference/reference_lua/string.rst:95
#: ../doc/reference/reference_lua/string.rst:118
#: ../doc/reference/reference_lua/string.rst:202
#: ../doc/reference/reference_lua/string.rst:225
#: ../doc/reference/reference_lua/string.rst:280
msgid "string"
msgstr "строка"

#: ../doc/reference/reference_lua/string.rst:72
#: ../doc/reference/reference_lua/string.rst:97
#: ../doc/reference/reference_lua/string.rst:120
#: ../doc/reference/reference_lua/string.rst:150
#: ../doc/reference/reference_lua/string.rst:180
#: ../doc/reference/reference_lua/string.rst:204
#: ../doc/reference/reference_lua/string.rst:227
#: ../doc/reference/reference_lua/string.rst:257
#: ../doc/reference/reference_lua/string.rst:282
msgid "**Example:**"
msgstr "**Пример:**"

#: ../doc/reference/reference_lua/string.rst:74
msgid ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.ljust(' A', 5)\n"
"---\n"
"- ' A   '\n"
"..."
msgstr ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.ljust(' A', 5)\n"
"---\n"
"- ' A   '\n"
"..."

#: ../doc/reference/reference_lua/string.rst:88
msgid "Return the string right-justified in a string of length ``width``."
msgstr ""
"Возврат строки, выровненной по правому краю, шириной, указанной в ``width``."

#: ../doc/reference/reference_lua/string.rst:90
msgid "the string to right-justify"
msgstr "строка для выравнивания по правому краю"

#: ../doc/reference/reference_lua/string.rst:91
msgid "the width of the string after right-justifying"
msgstr "ширина строки после выравнивания по правому краю"

#: ../doc/reference/reference_lua/string.rst:94
msgid "right-justified string (unchanged if width <= string length)"
msgstr ""
"выровненная по правому краю строка (не изменяется, если ширина <= длине "
"строки)"

#: ../doc/reference/reference_lua/string.rst:99
msgid ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.rjust('', 5, 'X')\n"
"---\n"
"- 'XXXXX'\n"
"..."
msgstr ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.rjust('', 5, 'X')\n"
"---\n"
"- 'XXXXX'\n"
"..."

#: ../doc/reference/reference_lua/string.rst:113
msgid "Return the hexadecimal value of the input string."
msgstr "Возврат шестнадцатеричного значения введенной строки."

#: ../doc/reference/reference_lua/string.rst:115
#: ../doc/reference/reference_lua/string.rst:199
#: ../doc/reference/reference_lua/string.rst:222
#: ../doc/reference/reference_lua/string.rst:277
msgid "the string to process"
msgstr "обрабатываемая строка"

#: ../doc/reference/reference_lua/string.rst:117
msgid "hexadecimal, 2 hex-digit characters for each input character"
msgstr ""
"шестнадцатеричное число, два символа шестнадцатеричных цифр для каждого "
"введенного символа"

#: ../doc/reference/reference_lua/string.rst:122
msgid ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.hex('ABC ')\n"
"---\n"
"- '41424320'\n"
"..."
msgstr ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.hex('ABC ')\n"
"---\n"
"- '41424320'\n"
"..."

#: ../doc/reference/reference_lua/string.rst:136
msgid ""
"Return True if ``input-string`` starts with ``start-string``, otherwise "
"return False."
msgstr ""
"Возврат true (правда), если ``input-string`` начинается со ``start-string``, "
"в противном случае, возврат false (ложь)."

#: ../doc/reference/reference_lua/string.rst:139
msgid "the string where ``start-string`` should be looked for"
msgstr "строка, где производится поиск данных из ``start-string``"

#: ../doc/reference/reference_lua/string.rst:140
#: ../doc/reference/reference_lua/string.rst:170
msgid "the string to look for"
msgstr "искомая строка"

#: ../doc/reference/reference_lua/string.rst:141
#: ../doc/reference/reference_lua/string.rst:171
msgid "position: where to start looking within ``input-string``"
msgstr "положение: где начинать искать в пределах ``input-string``"

#: ../doc/reference/reference_lua/string.rst:142
#: ../doc/reference/reference_lua/string.rst:172
msgid "position: where to end looking within ``input-string``"
msgstr "положение: где заканчивать искать в пределах ``input-string``"

#: ../doc/reference/reference_lua/string.rst:144
#: ../doc/reference/reference_lua/string.rst:174
msgid "true or false"
msgstr "true (правда) или false (ложь)"

#: ../doc/reference/reference_lua/string.rst:145
#: ../doc/reference/reference_lua/string.rst:175
msgid "boolean"
msgstr "boolean (логический)"

#: ../doc/reference/reference_lua/string.rst:147
#: ../doc/reference/reference_lua/string.rst:177
msgid ""
"``start-pos`` and ``end-pos`` may be negative, meaning the position should "
"be calculated from the end of the string."
msgstr ""
"Значения ``start-pos`` и ``end-pos`` могут быть отрицательными, что "
"означает, что положение вычисляется с конца строки."

#: ../doc/reference/reference_lua/string.rst:152
msgid ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.startswith(' A', 'A', 2, 5)\n"
"---\n"
"- true\n"
"..."
msgstr ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.startswith(' A', 'A', 2, 5)\n"
"---\n"
"- true\n"
"..."

#: ../doc/reference/reference_lua/string.rst:166
msgid ""
"Return True if ``input-string`` ends with ``end-string``, otherwise return "
"False."
msgstr ""
"Возврат true (правда), если ``input-string`` заканчивается на ``end-"
"string``, в противном случае, возврат false (ложь)."

#: ../doc/reference/reference_lua/string.rst:169
msgid "the string where ``end-string`` should be looked for"
msgstr "строка, где производится поиск данных из ``end-string``"

#: ../doc/reference/reference_lua/string.rst:182
msgid ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.endswith('Baa', 'aa')\n"
"---\n"
"- true\n"
"..."
msgstr ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.endswith('Baa', 'aa')\n"
"---\n"
"- true\n"
"..."

#: ../doc/reference/reference_lua/string.rst:197
msgid "Return the value of the input string, but without spaces on the left."
msgstr "Возврат значения введенной строки без пробелов слева."

#: ../doc/reference/reference_lua/string.rst:201
#: ../doc/reference/reference_lua/string.rst:224
#: ../doc/reference/reference_lua/string.rst:279
msgid "result after stripping spaces from input string"
msgstr "результат после удаления пробелов из введенной строки"

#: ../doc/reference/reference_lua/string.rst:206
msgid ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.lstrip(' ABC ')\n"
"---\n"
"- 'ABC '\n"
"..."
msgstr ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.lstrip(' ABC ')\n"
"---\n"
"- 'ABC '\n"
"..."

#: ../doc/reference/reference_lua/string.rst:220
msgid "Return the value of the input string, but without spaces on the right."
msgstr "Возврат значения введенной строки без пробелов справа."

#: ../doc/reference/reference_lua/string.rst:229
msgid ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.rstrip(' ABC ')\n"
"---\n"
"- ' ABC'\n"
"..."
msgstr ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.rstrip(' ABC ')\n"
"---\n"
"- ' ABC'\n"
"..."

#: ../doc/reference/reference_lua/string.rst:243
msgid ""
"Split ``input-string`` into one or more output strings in a table. The "
"places to split are the places where ``split-string`` occurs."
msgstr ""
"Разделение ``input-string`` на одну или более выводимых строк в таблице. "
"Места разделения указаны в ``split-string``."

#: ../doc/reference/reference_lua/string.rst:247
msgid "the string to split"
msgstr "строка для разделения"

#: ../doc/reference/reference_lua/string.rst:248
msgid "the string to find within ``input-string``. Default = space."
msgstr "искомая строка в пределах ``input-string``. По умолчанию = пробел."

#: ../doc/reference/reference_lua/string.rst:250
msgid ""
"maximum number of delimiters to process counting from the beginning of the "
"input string. Result will contain max + 1 parts maximum."
msgstr ""
"максимальное количество символов-разделителей от начала обрабатываемой "
"строки. Результат содержит не более max + 1 частей."

#: ../doc/reference/reference_lua/string.rst:254
msgid "table of strings that were split from ``input-string``"
msgstr "таблица строк, которые были разделены из ``input-string``"

#: ../doc/reference/reference_lua/string.rst:255
msgid "table"
msgstr "таблица"

#: ../doc/reference/reference_lua/string.rst:259
msgid ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.split(\"A:B C:D\", \":\", 2)\n"
"---\n"
"- - A\n"
"  - B\n"
"  - ' C:D'\n"
"..."
msgstr ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.split(\"A:B C:D\", \":\", 2)\n"
"---\n"
"- - A\n"
"  - B\n"
"  - ' C:D'\n"
"..."

#: ../doc/reference/reference_lua/string.rst:275
msgid ""
"Return the value of the input string, but without spaces on the left or the "
"right."
msgstr "Возврат значения введенной строки без пробелов слева или справа."

#: ../doc/reference/reference_lua/string.rst:284
msgid ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.strip(' ABC ')\n"
"---\n"
"- ABC\n"
"..."
msgstr ""
"tarantool> string = require('string')\n"
"---\n"
"...\n"
"tarantool> string.strip(' ABC ')\n"
"---\n"
"- ABC\n"
"..."
