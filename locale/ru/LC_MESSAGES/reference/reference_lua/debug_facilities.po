# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-03 19:10+0000\n"
"PO-Revision-Date: 2019-12-06 16:16+0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"Generated-By: Babel 2.7.0\n"
"X-Generator: Poedit 2.2.4\n"

#: ../doc/reference/reference_lua/debug_facilities.rst:5
msgid "Debug facilities"
msgstr "Средства отладки"

#: ../doc/reference/reference_lua/debug_facilities.rst:9
msgid "Overview"
msgstr "Общие сведения"

#: ../doc/reference/reference_lua/debug_facilities.rst:11
msgid ""
"Tarantool users can benefit from built-in debug facilities that are part of:"
msgstr ""
"Пользователи Tarantool'а могут воспользоваться преимуществами встроенных "
"средств отладки, которые составляют часть:"

#: ../doc/reference/reference_lua/debug_facilities.rst:13
msgid ""
"Lua (`debug <https://www.lua.org/manual/5.1/manual.html#5.9>`_ library, see "
"details below) and"
msgstr ""
"Lua (библиотека `отладки <https://www.lua.org/manual/5.1/manual.html#5.9>`_, "
"см. подробное описание ниже) и"

#: ../doc/reference/reference_lua/debug_facilities.rst:15
msgid "LuaJit (`debug.* <http://luajit.org/extensions.html>`_ functions)."
msgstr ""
"LuaJit (функции отладки `debug.* <http://luajit.org/extensions.html>`_)."

#: ../doc/reference/reference_lua/debug_facilities.rst:19
msgid ""
"The ``debug`` library provides an interface for debugging Lua programs. All "
"functions in this library reside in the ``debug`` table. Those functions "
"that operate on a thread have an optional first parameter that specifies the "
"thread to operate on. The default is always the current thread."
msgstr ""
"Библиотека ``debug`` предоставляет интерфейс для отладки Lua-программ. Все "
"функции этой библиотеки содержатся в таблице ``debug``. В функциях для "
"работы с потоками есть дополнительный первый параметр, в котором указывается "
"необходимый поток. По умолчанию, это всегда текущий поток."

#: ../doc/reference/reference_lua/debug_facilities.rst:26
msgid ""
"This library should be used only for debugging and profiling and not as a "
"regular programming tool, as the functions provided here can take too long "
"to run. Besides, several of these functions can compromise otherwise secure "
"code."
msgstr ""
"Библиотеку следует использовать только для отладки и профилирования, а не в "
"качестве программного средства, поскольку данные функции выполняются слишком "
"долго. Кроме того, некоторые из этих функций могут привести к нарушению "
"работы безопасного в других отношениях кода."

#: ../doc/reference/reference_lua/debug_facilities.rst:33
msgid "Index"
msgstr "Указатель"

#: ../doc/reference/reference_lua/debug_facilities.rst:35
msgid "Below is a list of all ``debug`` functions."
msgstr "Ниже приведен перечень всех функций библиотеки ``debug``."

#: ../doc/reference/reference_lua/debug_facilities.rst:43
msgid "Name"
msgstr "Имя"

#: ../doc/reference/reference_lua/debug_facilities.rst:43
msgid "Use"
msgstr "Назначение"

#: ../doc/reference/reference_lua/debug_facilities.rst:45
msgid ":ref:`debug.debug() <debug-debug>`"
msgstr ":ref:`debug.debug() <debug-debug>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:45
msgid "Enter an interactive mode"
msgstr "Вход в интерактивный режим"

#: ../doc/reference/reference_lua/debug_facilities.rst:48
msgid ":ref:`debug.getfenv() <debug-getfenv>`"
msgstr ":ref:`debug.getfenv() <debug-getfenv>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:48
msgid "Get an object's environment"
msgstr "Получение среды объекта"

#: ../doc/reference/reference_lua/debug_facilities.rst:51
msgid ":ref:`debug.gethook() <debug-gethook>`"
msgstr ":ref:`debug.gethook() <debug-gethook>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:51
msgid "Get a thread's current hook settings"
msgstr "Получение текущих настроек ловушки потока"

#: ../doc/reference/reference_lua/debug_facilities.rst:54
msgid ":ref:`debug.getinfo() <debug-getinfo>`"
msgstr ":ref:`debug.getinfo() <debug-getinfo>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:54
msgid "Get information about a function"
msgstr "Получение информации о функции"

#: ../doc/reference/reference_lua/debug_facilities.rst:57
msgid ":ref:`debug.getlocal() <debug-getlocal>`"
msgstr ":ref:`debug.getlocal() <debug-getlocal>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:57
msgid "Get a local variable's name and value"
msgstr "Получение имени и значения локальной переменной"

#: ../doc/reference/reference_lua/debug_facilities.rst:60
msgid ":ref:`debug.getmetatable() <debug-getmetatable>`"
msgstr ":ref:`debug.getmetatable() <debug-getmetatable>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:60
msgid "Get an object's metatable"
msgstr "Получение метатаблицы объекта"

#: ../doc/reference/reference_lua/debug_facilities.rst:63
msgid ":ref:`debug.getregistry() <debug-getregistry>`"
msgstr ":ref:`debug.getregistry() <debug-getregistry>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:63
msgid "Get the registry table"
msgstr "Получение таблицы реестра"

#: ../doc/reference/reference_lua/debug_facilities.rst:66
msgid ":ref:`debug.getupvalue() <debug-getupvalue>`"
msgstr ":ref:`debug.getupvalue() <debug-getupvalue>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:66
msgid "Get an upvalue's name and value"
msgstr "Получение имени и значения сопоставляющего значения"

#: ../doc/reference/reference_lua/debug_facilities.rst:69
msgid ":ref:`debug.setfenv() <debug-setfenv>`"
msgstr ":ref:`debug.setfenv() <debug-setfenv>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:69
msgid "Set an object's environment"
msgstr "Определение среды объекта"

#: ../doc/reference/reference_lua/debug_facilities.rst:72
msgid ":ref:`debug.sethook() <debug-sethook>`"
msgstr ":ref:`debug.sethook() <debug-sethook>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:72
msgid "Set a given function as a hook"
msgstr "Определение данной функции в качестве ловушки"

#: ../doc/reference/reference_lua/debug_facilities.rst:75
msgid ":ref:`debug.setlocal() <debug-setlocal>`"
msgstr ":ref:`debug.setlocal() <debug-setlocal>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:75
msgid "Assign a value to a local variable"
msgstr "Присваивание значения локальной переменной"

#: ../doc/reference/reference_lua/debug_facilities.rst:78
msgid ":ref:`debug.setmetatable() <debug-setmetatable>`"
msgstr ":ref:`debug.setmetatable() <debug-setmetatable>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:78
msgid "Set an object's metatable"
msgstr "Определение метатаблицы объекта"

#: ../doc/reference/reference_lua/debug_facilities.rst:81
msgid ":ref:`debug.setupvalue() <debug-setupvalue>`"
msgstr ":ref:`debug.setupvalue() <debug-setupvalue>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:81
msgid "Assign a value to an upvalue"
msgstr "Присваивание значения сопоставляющему значению"

#: ../doc/reference/reference_lua/debug_facilities.rst:84
msgid ":ref:`debug.traceback() <debug-traceback>`"
msgstr ":ref:`debug.traceback() <debug-traceback>`"

#: ../doc/reference/reference_lua/debug_facilities.rst:84
msgid "Get a traceback of the call stack"
msgstr "Получение обратной трассировки стека вызовов"

#: ../doc/reference/reference_lua/debug_facilities.rst:92
msgid ""
"Enters an interactive mode and runs each string that the user types in. The "
"user can, among other things, inspect global and local variables, change "
"their values and evaluate expressions."
msgstr ""
"Вход в интерактивный режим и выполнение каждой строки, которую печатает "
"пользователь. Пользователь может, в частности, проверять глобальные и "
"локальные переменные, изменять их значения и вычислять выражения."

#: ../doc/reference/reference_lua/debug_facilities.rst:96
msgid ""
"Enter ``cont`` to exit this function, so that the caller can continue its "
"execution."
msgstr ""
"Введите ``cont`` для выхода из данной функции, чтобы вызывающий клиент мог "
"продолжить выполнение."

#: ../doc/reference/reference_lua/debug_facilities.rst:101
msgid ""
"Commands for ``debug.debug()`` are not lexically nested within any function "
"and so have no direct access to local variables."
msgstr ""
"Команды для ``debug.debug()`` не вложены лексически в какую-либо функцию, "
"поэтому у них нет прямого доступа к локальным переменным."

#: ../doc/reference/reference_lua/debug_facilities.rst:0
msgid "Parameters"
msgstr "Параметры"

#: ../doc/reference/reference_lua/debug_facilities.rst:108
msgid "object to get the environment of"
msgstr "объект, для которого будет получена среда"

#: ../doc/reference/reference_lua/debug_facilities.rst:0
msgid "return"
msgstr "возвращает"

#: ../doc/reference/reference_lua/debug_facilities.rst:111
msgid "the environment of the ``object``"
msgstr "среда объекта ``object``"

#: ../doc/reference/reference_lua/debug_facilities.rst:117
msgid "the current hook settings of the ``thread`` as three values:"
msgstr "текущие настройки ловушки потока ``thread`` в виде трех значений:"

#: ../doc/reference/reference_lua/debug_facilities.rst:119
msgid "the current hook function"
msgstr "текущая функция-ловушка"

#: ../doc/reference/reference_lua/debug_facilities.rst:120
msgid "the current hook mask"
msgstr "текущая маска ловушки"

#: ../doc/reference/reference_lua/debug_facilities.rst:121
msgid "the current hook count as set by the ``debug.sethook()`` function"
msgstr "текущий счетчик ловушки, как определяет функция  ``debug.sethook()``"

#: ../doc/reference/reference_lua/debug_facilities.rst:127
msgid "function to get information on"
msgstr "функция, по которой будет получена информация"

#: ../doc/reference/reference_lua/debug_facilities.rst:129
msgid "what information on the ``function`` to return"
msgstr "какую информацию о функции ``function`` вернуть"

#: ../doc/reference/reference_lua/debug_facilities.rst:131
msgid "a table with information about the ``function``"
msgstr "таблица с информацией о функции ``function``"

#: ../doc/reference/reference_lua/debug_facilities.rst:133
msgid ""
"You can pass in a ``function`` directly, or you can give a number that "
"specifies a function running at level ``function`` of the call stack of the "
"given ``thread``: level 0 is the current function (``getinfo()`` itself), "
"level 1 is the function that called ``getinfo()``, and so on. If "
"``function`` is a number larger than the number of active functions, "
"``getinfo()`` returns ``nil``."
msgstr ""
"Можно передать функцию ``function`` напрямую или же передать число, которое "
"указывает на функцию, выполняемую на уровне ``function`` стека вызовов "
"данного потока ``thread``: уровень 0 -- это текущая функция (сама функция "
"``getinfo()``), уровень 1 -- это функция, которая вызвала ``getinfo()``, и т."
"д. Если для функции ``function`` указано число больше числа активных "
"функций, ``getinfo()`` вернет ``nil``."

#: ../doc/reference/reference_lua/debug_facilities.rst:140
msgid ""
"The default for ``what`` is to get all information available, except the "
"table of valid lines. If present, the option ``f`` adds a field named "
"``func`` with the function itself. If present, the option ``L`` adds a field "
"named ``activelines`` with the table of valid lines."
msgstr ""
"По умолчанию, ``what`` -- это вся доступная информация, кроме таблицы "
"допустимых строк. Если задать опцию ``f``, добавится поле под названием "
"``func`` с самой функцией. Если задать опцию ``L``, добавится поле под "
"названием ``activelines`` с таблицей доступных строк."

#: ../doc/reference/reference_lua/debug_facilities.rst:149
#: ../doc/reference/reference_lua/debug_facilities.rst:226
msgid "level of the stack"
msgstr "уровень стека"

#: ../doc/reference/reference_lua/debug_facilities.rst:150
#: ../doc/reference/reference_lua/debug_facilities.rst:227
msgid "index of the local variable"
msgstr "индекс локальной переменной"

#: ../doc/reference/reference_lua/debug_facilities.rst:152
msgid ""
"the name and the value of the local variable with the index ``local`` of the "
"function at level ``level`` of the stack or ``nil`` if there is no local "
"variable with the given index; raises an error if ``level`` is out of range"
msgstr ""
"имя и значение локальной переменной с индексом ``local`` функции на уровне "
"``level`` стека или ``nil``, если нет локальной переменной с указанным "
"индексом; появится ошибка, если уровень ``level`` вне диапазона"

#: ../doc/reference/reference_lua/debug_facilities.rst:159
#: ../doc/reference/reference_lua/debug_facilities.rst:237
msgid "You can call ``debug.getinfo()`` to check whether the level is valid."
msgstr "Можно вызвать ``debug.getinfo()`` для проверки доступности уровня."

#: ../doc/reference/reference_lua/debug_facilities.rst:165
msgid "object to get the metatable of"
msgstr "объект, для которого будет получена метатаблица"

#: ../doc/reference/reference_lua/debug_facilities.rst:168
msgid ""
"a metatable of the ``object`` or ``nil`` if it does not have a metatable"
msgstr ""
"метатаблица объекта ``object`` или ``nil``, если метатаблица отсутствует"

#: ../doc/reference/reference_lua/debug_facilities.rst:175
msgid "the registry table"
msgstr "таблица реестра"

#: ../doc/reference/reference_lua/debug_facilities.rst:181
msgid "function to get the upvalue of"
msgstr "функция, для которой будет получено сопоставляющее значение"

#: ../doc/reference/reference_lua/debug_facilities.rst:182
#: ../doc/reference/reference_lua/debug_facilities.rst:257
msgid "index of the function upvalue"
msgstr "индекс сопоставляющего значения функции"

#: ../doc/reference/reference_lua/debug_facilities.rst:184
msgid ""
"the name and the value of the upvalue with the index ``up`` of the function "
"``func`` or ``nil`` if there is no upvalue with the given index"
msgstr ""
"имя и значение сопоставляющего значения с индексом ``up`` функции ``func`` "
"или ``nil``, если нет сопоставляющего значения в пределах заданного индекса"

#: ../doc/reference/reference_lua/debug_facilities.rst:192
msgid "Sets the environment of the ``object`` to the ``table``."
msgstr "Определение среды объекта ``object`` для таблицы ``table``."

#: ../doc/reference/reference_lua/debug_facilities.rst:194
msgid "object to change the environment of"
msgstr "объект, среда которого будет изменена"

#: ../doc/reference/reference_lua/debug_facilities.rst:196
msgid "table to set the object environment to"
msgstr "таблица для определения среды объекта"

#: ../doc/reference/reference_lua/debug_facilities.rst:198
msgid "the ``object``"
msgstr "объект ``object``"

#: ../doc/reference/reference_lua/debug_facilities.rst:204
msgid ""
"Sets the given function as a hook.  When called without arguments, turns the "
"hook off."
msgstr ""
"Определение данной функции в качестве ловушки. При вызове без аргументов "
"ловушка отключается."

#: ../doc/reference/reference_lua/debug_facilities.rst:207
msgid "function to set as a hook"
msgstr "функция, которая будет определена в качестве ловушки"

#: ../doc/reference/reference_lua/debug_facilities.rst:208
msgid ""
"describes when the ``hook`` will be called; may have the following values:  "
"* ``c`` - the ``hook`` is called every time Lua calls a function * ``r`` - "
"the ``hook`` is called every time Lua returns from a function * ``l`` - the "
"``hook`` is called every time Lua enters a new line of code"
msgstr ""
"описание того, когда будет вызвана ловушка ``hook``; может принимать "
"следующие значения:  * ``c`` -- ловушка``hook`` вызывается каждый раз, когда "
"Lua вызывает функцию * ``r`` -- ловушка ``hook`` вызывается каждый раз, "
"когда Lua возвращается из функции * ``l`` -- ловушка ``hook`` вызывается "
"каждый раз, когда Lua переходит на новую строку кода"

#: ../doc/reference/reference_lua/debug_facilities.rst:208
msgid ""
"describes when the ``hook`` will be called; may have the following values:"
msgstr ""
"описание того, когда будет вызвана ловушка ``hook``; может принимать "
"следующие значения:"

#: ../doc/reference/reference_lua/debug_facilities.rst:211
msgid "``c`` - the ``hook`` is called every time Lua calls a function"
msgstr ""
"``c`` -- ловушка``hook`` вызывается каждый раз, когда Lua вызывает функцию"

#: ../doc/reference/reference_lua/debug_facilities.rst:212
msgid "``r`` - the ``hook`` is called every time Lua returns from a function"
msgstr ""
"``r`` -- ловушка ``hook`` вызывается каждый раз, когда Lua возвращается из "
"функции"

#: ../doc/reference/reference_lua/debug_facilities.rst:213
msgid "``l`` - the ``hook`` is called every time Lua enters a new line of code"
msgstr ""
"``l`` -- ловушка ``hook`` вызывается каждый раз, когда Lua переходит на "
"новую строку кода"

#: ../doc/reference/reference_lua/debug_facilities.rst:215
msgid ""
"describes when the ``hook`` will be called; when different from zero, the "
"``hook`` is called after every ``count`` instructions."
msgstr ""
"описание того, когда будет вызвана ловушка ``hook``; если отличается от "
"нуля, ловушка ``hook`` вызывается после каждой инструкции ``count``."

#: ../doc/reference/reference_lua/debug_facilities.rst:223
msgid ""
"Assigns the value ``value`` to the local variable with the index ``local`` "
"of the function at level ``level`` of the stack."
msgstr ""
"Присвоение значения ``value`` локальной переменной с индексом ``local`` "
"функции на уровне ``level`` стека"

#: ../doc/reference/reference_lua/debug_facilities.rst:228
msgid "value to assign to the local variable"
msgstr "значение, присваиваемое локальной переменной"

#: ../doc/reference/reference_lua/debug_facilities.rst:231
msgid ""
"the name of the local variable or ``nil`` if there is no local variable with "
"the given index; raises an error if ``level`` is out of range"
msgstr ""
"имя локальной переменной или ``nil``, если локальная переменная с заданным "
"индексом отсутствует; возникает ошибка, если уровень ``level`` вне диапазона"

#: ../doc/reference/reference_lua/debug_facilities.rst:243
msgid "Sets the metatable of the ``object`` to the ``table``."
msgstr "Определение метатаблицы объекта ``object`` для таблицы ``table``."

#: ../doc/reference/reference_lua/debug_facilities.rst:245
msgid "object to change the metatable of"
msgstr "объект, метатаблица которого будет изменена"

#: ../doc/reference/reference_lua/debug_facilities.rst:247
msgid "table to set the object metatable to"
msgstr "таблица для определения метатаблицы объекта"

#: ../doc/reference/reference_lua/debug_facilities.rst:253
msgid ""
"Assigns the value ``value`` to the upvalue with the index ``up`` of the "
"function ``func``."
msgstr ""
"Присвоение значения ``value`` сопоставляющему значению с индексом ``up`` "
"функции ``func``."

#: ../doc/reference/reference_lua/debug_facilities.rst:256
msgid "function to set the upvalue of"
msgstr "функция, для которой будет определено сопоставляющее значение"

#: ../doc/reference/reference_lua/debug_facilities.rst:258
msgid "value to assign to the function upvalue"
msgstr "значение, присваиваемое сопоставляющему значению функции"

#: ../doc/reference/reference_lua/debug_facilities.rst:261
msgid ""
"the name of the upvalue or ``nil`` if there is no upvalue with the given "
"index"
msgstr ""
"имя сопоставляющего значения или ``nil``, если сопоставляющее значение с "
"данным индексом отсутствует"

#: ../doc/reference/reference_lua/debug_facilities.rst:268
msgid "an optional message prepended to the traceback"
msgstr "необязательное сообщение, добавленное к началу обратной трассировки"

#: ../doc/reference/reference_lua/debug_facilities.rst:269
msgid "specifies at which level to start the traceback (default is 1)"
msgstr ""
"указывает на каком уровне начинать обратную трассировку (по умолчанию, 1)"

#: ../doc/reference/reference_lua/debug_facilities.rst:272
msgid "a string with a traceback of the call stack"
msgstr "строка с обратной трассировкой стека вызовов"
