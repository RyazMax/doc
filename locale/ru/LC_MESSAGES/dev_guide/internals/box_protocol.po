# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-04 10:02+0000\n"
"PO-Revision-Date: 2019-12-20 21:24+0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"Generated-By: Babel 2.7.0\n"

#: ../doc/dev_guide/internals/box_protocol.rst:7
#, fuzzy
msgid "Binary protocol"
msgstr "Бинарный протокол Tarantool'а"

#: ../doc/dev_guide/internals/box_protocol.rst:9
#, fuzzy
msgid "The binary protocol in Tarantool is a binary request/response protocol."
msgstr ""
"Бинарный протокол Tarantool'а представляет собой бинарный запросно-ответный "
"протокол."

#: ../doc/dev_guide/internals/box_protocol.rst:15
msgid "Notation in diagrams"
msgstr "Система обозначений в схематическом представлении"

#: ../doc/dev_guide/internals/box_protocol.rst:17
msgid ""
"0    X\n"
"+----+\n"
"|    | - X + 1 bytes\n"
"+----+\n"
" TYPE - type of MsgPack value (if it is a MsgPack object)\n"
"\n"
"+====+\n"
"|    | - Variable size MsgPack object\n"
"+====+\n"
" TYPE - type of MsgPack value\n"
"\n"
"+~~~~+\n"
"|    | - Variable size MsgPack Array/Map\n"
"+~~~~+\n"
" TYPE - type of MsgPack value"
msgstr ""
"0    X\n"
"+----+\n"
"|    | - X + 1 байт\n"
"+----+\n"
" TYPE - тип MsgPack-значения (если это MsgPack-объект)\n"
"\n"
"+====+\n"
"|    | - MsgPack-объект изменяемого размера\n"
"+====+\n"
" TYPE - тип MsgPack-значения\n"
"\n"
"+~~~~+\n"
"|    | - Массив или ассоциативный массив в формате MsgPack изменяемого "
"размера\n"
"+~~~~+\n"
" TYPE - тип MsgPack-значения"

#: ../doc/dev_guide/internals/box_protocol.rst:36
msgid "MsgPack data types:"
msgstr "Типы MsgPack-данных:"

#: ../doc/dev_guide/internals/box_protocol.rst:38
msgid "**MP_INT** - Integer"
msgstr "**MP_INT** - целое число"

#: ../doc/dev_guide/internals/box_protocol.rst:39
msgid "**MP_MAP** - Map"
msgstr "**MP_MAP** - ассоциативный массив"

#: ../doc/dev_guide/internals/box_protocol.rst:40
msgid "**MP_ARR** - Array"
msgstr "**MP_ARR** - массив"

#: ../doc/dev_guide/internals/box_protocol.rst:41
msgid "**MP_STRING** - String"
msgstr "**MP_STRING** - строка"

#: ../doc/dev_guide/internals/box_protocol.rst:42
msgid "**MP_FIXSTR** - Fixed size string"
msgstr "**MP_FIXSTR** - строка фиксированной длины"

#: ../doc/dev_guide/internals/box_protocol.rst:43
msgid "**MP_OBJECT** - Any MsgPack object"
msgstr "**MP_OBJECT** - любой MsgPack-объект"

#: ../doc/dev_guide/internals/box_protocol.rst:44
msgid "**MP_BIN** - MsgPack binary format"
msgstr "**MP_BIN** - бинарный формат MsgPack"

#: ../doc/dev_guide/internals/box_protocol.rst:48
msgid "Encoding of Tarantool-specific data types"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:50
msgid ""
"Some of the data types used in Tarantool are application-specific in terms "
"of the MsgPack standard. For these data types, we use the following "
"representation."
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:56
msgid "Decimals"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:58
msgid ""
"MsgPack EXT type ``MP_EXT`` together with the extension type ``MP_DECIMAL`` "
"is used as a record header."
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:61
msgid "MP_DECIMAL is 1."
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:63
msgid ""
"`MsgPack spec <https://github.com/msgpack/msgpack/blob/master/spec.md#ext-"
"format-family>`_ defines two kinds of types:"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:66
msgid ""
"``fixext 1/2/4/8/16`` types have fixed length so the length is not encoded "
"explicitly;"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:67
msgid "``ext 8/16/32`` types require the data length to be encoded."
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:69
msgid "``MP_EXP`` + optional ``length`` imply using one of these types."
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:71
msgid "The decimal MsgPack representation looks like this:"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:73
msgid ""
"+--------+-------------------+------------+===============+\n"
"| MP_EXT | length (optional) | MP_DECIMAL | PackedDecimal |\n"
"+--------+-------------------+------------+===============+"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:79
msgid ""
"Here ``length`` is the length of ``PackedDecimal`` field, and it is of type "
"``MP_UINT``, when encoded explicitly (i.e. when the type is ``ext 8/16/32``)."
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:82
msgid "``PackedDecimal`` has the following structure:"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:84
msgid ""
" <--- length bytes -->\n"
"+-------+=============+\n"
"| scale |     BCD     |\n"
"+-------+=============+"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:91
msgid ""
"Here ``scale`` is either ``MP_INT`` or ``MP_UINT``. |br| ``scale`` = -"
"exponent (exponent negated!)"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:94
msgid ""
"``BCD`` is a sequence of bytes representing decimal digits of the encoded "
"number (each byte represents two decimal digits each encoded using 4 bits), "
"so ``byte >> 4`` is the first digit and ``byte & 0x0f`` is the second digit. "
"The leftmost digit in the array is the most significant. The rightmost digit "
"in the array is the least significant."
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:100
msgid ""
"The first byte of the ``BCD`` array contains the first digit of the number, "
"represented as follows:"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:103
msgid ""
"|  4 bits           |  4 bits           |\n"
"   = 0x                = the 1st digit"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:108
msgid ""
"The last byte of the ``BCD`` array contains the last digit of the number and "
"the ``nibble``, represented as follows:"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:111
msgid ""
"|  4 bits           |  4 bits           |\n"
"   = the last digit    = nibble"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:116
msgid "The ``nibble`` represents the number's sign:"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:118
msgid "``0x0a``, ``0x0c``, ``0x0e``, ``0x0f`` stand for plus,"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:119
msgid "``0x0b`` and ``0x0d`` stand for minus."
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:121
#, fuzzy
msgid "**Examples**"
msgstr "**Пример:**"

#: ../doc/dev_guide/internals/box_protocol.rst:123
msgid ""
"The decimal ``-12.34`` will be encoded as ``0xd6,0x01,0x02,0x01,0x23,0x4d``:"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:125
msgid ""
"|MP_EXT (fixext 4) | MP_DECIMAL | scale |  1   |  2,3 |  4 (minus) |\n"
"|       0xd6       |    0x01    | 0x02  | 0x01 | 0x23 | 0x4d       |"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:130
msgid ""
"The decimal 0.000000000000000000000000000000000010 will be encoded as "
"``0xc7,0x03,0x01,0x24,0x01,0x0c``:"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:133
msgid ""
"| MP_EXT (ext 8) | length | MP_DECIMAL | scale |  1   | 0 (plus) |\n"
"|      0xc7      |  0x03  |    0x01    | 0x24  | 0x01 | 0x0c     |"
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:140
msgid "Greeting packet"
msgstr "Пакет приветствия"

#: ../doc/dev_guide/internals/box_protocol.rst:142
msgid ""
"TARANTOOL'S GREETING:\n"
"\n"
"0                                     63\n"
"+--------------------------------------+\n"
"|                                      |\n"
"| Tarantool Greeting (server version)  |\n"
"|               64 bytes               |\n"
"+---------------------+----------------+\n"
"|                     |                |\n"
"| BASE64 encoded SALT |      NULL      |\n"
"|      44 bytes       |                |\n"
"+---------------------+----------------+\n"
"64                  107              127"
msgstr ""
"ПРИВЕТСТВИЕ TARANTOOL'А:\n"
" \n"
" 0                                     63\n"
" +--------------------------------------+\n"
" |                                      |\n"
" | Приветствие Tarantool'а (версия сервера)  |\n"
" |               64 байта               |\n"
" +---------------------+----------------+\n"
" |                     |                |\n"
" | СОЛЬ в кодировке BASE64 |      NULL      |\n"
" |      44 байта       |                |\n"
" +---------------------+----------------+\n"
" 64                  107              127"

#: ../doc/dev_guide/internals/box_protocol.rst:158
msgid ""
"The server instance begins the dialogue by sending a fixed-size (128-byte) "
"text greeting to the client. The greeting always contains two 64-byte lines "
"of ASCII text, each line ending with a newline character (:code:`\\n`). The "
"first line contains the instance version and protocol type. The second line "
"contains up to 44 bytes of base64-encoded random string, to use in the "
"authentication packet, and ends with up to 23 spaces."
msgstr ""
"Экземпляр сервера начинает диалог с отправки клиенту текста приветствия "
"фиксированного размера (128 байтов). Приветствие всегда содержит две 64-"
"байтные строки текста в формате ASCII, каждая строка заканчивается символом "
"разрыва строки (:code:`\\n`). Первая строка описывает версию экземпляра и "
"тип протокола. Вторая строка содержит случайную строку в кодировке base64 "
"размером до 44 байтов для использования в пакете аутентификации и "
"заканчивается на пробелы (до 23)."

#: ../doc/dev_guide/internals/box_protocol.rst:168
msgid "Unified packet structure"
msgstr "Унифицированная структура пакета"

#: ../doc/dev_guide/internals/box_protocol.rst:170
msgid ""
"Once a greeting is read, the protocol becomes pure request/response and "
"features a complete access to Tarantool functionality, including:"
msgstr ""
"После того, как приветствие прочитано, протокол становится простым запросно-"
"ответным протоколом и предоставляет полный доступ к функциям Tarantool'а, "
"включая:"

#: ../doc/dev_guide/internals/box_protocol.rst:173
msgid ""
"request multiplexing, e.g. ability to asynchronously issue multiple requests "
"via the same connection"
msgstr ""
"мультиплексирование запросов, т.е. возможность асинхронной отправки "
"множества запросов по одному соединению;"

#: ../doc/dev_guide/internals/box_protocol.rst:175
msgid "response format that supports zero-copy writes"
msgstr ""
"формат ответа, который поддерживает запись в режиме без копирования (zero-"
"copy)."

#: ../doc/dev_guide/internals/box_protocol.rst:177
msgid ""
"The protocol uses `msgpack <http://msgpack.org>`_ for data structures and "
"encoding."
msgstr ""
"Для структуризации и кодирования данных протокол использует формат данных "
"`msgpack <http://msgpack.org>`_."

#: ../doc/dev_guide/internals/box_protocol.rst:180
#, fuzzy
msgid ""
"The protocol uses maps that contain some integer constants as keys. These "
"constants are defined in `src/box/iproto_constants.h <https://github.com/"
"tarantool/tarantool/blob/2.3/src/box/iproto_constants.h>`_. We list common "
"constants here:"
msgstr ""
"Протокол использует ассоциативные массивы, которые содержат несколько "
"целочисленных постоянных, в качестве ключей. Эти постоянные указаны по "
"ссылке `src/box/iproto_constants.h <https://github.com/tarantool/tarantool/"
"blob/1.9/src/box/iproto_constants.h>`_. Ниже приведены часто используемые "
"постоянные:"

#: ../doc/dev_guide/internals/box_protocol.rst:185
#, fuzzy
msgid ""
"-- user keys\n"
"<iproto_sync>          ::= 0x01\n"
"<iproto_schema_id>     ::= 0x05  /* also known as schema_version */\n"
"<iproto_space_id>      ::= 0x10\n"
"<iproto_index_id>      ::= 0x11\n"
"<iproto_limit>         ::= 0x12\n"
"<iproto_offset>        ::= 0x13\n"
"<iproto_iterator>      ::= 0x14\n"
"<iproto_key>           ::= 0x20\n"
"<iproto_tuple>         ::= 0x21\n"
"<iproto_function_name> ::= 0x22\n"
"<iproto_username>      ::= 0x23\n"
"<iproto_expr>          ::= 0x27 /* also known as expression */\n"
"<iproto_ops>           ::= 0x28\n"
"<iproto_data>          ::= 0x30\n"
"<iproto_error>         ::= 0x31\n"
"<iproto_metadata>      ::= 0x32\n"
"<iproto_bind_metadata> ::= 0x33\n"
"<iproto_bind_count>    ::= 0x34\n"
"<iproto_sql_text>      ::= 0x40\n"
"<iproto_sql_bind>      ::= 0x41\n"
"<iproto_sql_info>      ::= 0x42\n"
"<iproto_stmt_id>       ::= 0x43\n"
"<iproto_replica_anon>  ::= 0x50"
msgstr ""
"-- пользовательские ключи\n"
"<iproto_sync>          ::= 0x01\n"
"<iproto_schema_id>     ::= 0x05  /* также schema_version */\n"
"<iproto_space_id>      ::= 0x10\n"
"<iproto_index_id>      ::= 0x11\n"
"<iproto_limit>         ::= 0x12\n"
"<iproto_offset>        ::= 0x13\n"
"<iproto_iterator>      ::= 0x14\n"
"<iproto_key>           ::= 0x20\n"
"<iproto_tuple>         ::= 0x21\n"
"<iproto_function_name> ::= 0x22\n"
"<iproto_username>      ::= 0x23\n"
"<iproto_expr>          ::= 0x27 /* также expression */\n"
"<iproto_ops>           ::= 0x28\n"
"<iproto_data>          ::= 0x30\n"
"<iproto_error>         ::= 0x31"

#: ../doc/dev_guide/internals/box_protocol.rst:212
#, fuzzy
msgid ""
"-- -- Value for <code> key in request can be:\n"
"-- User command codes\n"
"<iproto_select>         ::= 0x01\n"
"<iproto_insert>         ::= 0x02\n"
"<iproto_replace>        ::= 0x03\n"
"<iproto_update>         ::= 0x04\n"
"<iproto_delete>         ::= 0x05\n"
"<iproto_call_16>        ::= 0x06 /* as used in version 1.6 */\n"
"<iproto_auth>           ::= 0x07\n"
"<iproto_eval>           ::= 0x08\n"
"<iproto_upsert>         ::= 0x09\n"
"<iproto_call>           ::= 0x0a\n"
"<iproto_execute>        ::= 0x0b\n"
"<iproto_nop>            ::= 0x0c\n"
"<iproto_prepare>        ::= 0x0d\n"
"<iproto_type_stat_max>  ::= 0x0e\n"
"-- Admin command codes\n"
"-- (including codes for replica-set initialization and master election)\n"
"<iproto_ping>           ::= 0x40\n"
"<iproto_join>           ::= 0x41 /* i.e. replication join */\n"
"<iproto_subscribe>      ::= 0x42\n"
"<iproto_request_vote>   ::= 0x43\n"
"<iproto_fetch_snapshot> ::= 0x45\n"
"<iproto_register>       ::= 0x46\n"
"\n"
"-- -- Value for <code> key in response can be:\n"
"<iproto_ok>           ::= 0x00\n"
"<iproto_type_error>   ::= 0x8XXX /* where XXX is a value in errcode.h */"
msgstr ""
"-- -- Значение ключа <code> в запросе может быть следующим:\n"
"-- Ключи для команд пользователя\n"
"<iproto_select>       ::= 0x01\n"
"<iproto_insert>       ::= 0x02\n"
"<iproto_replace>      ::= 0x03\n"
"<iproto_update>       ::= 0x04\n"
"<iproto_delete>       ::= 0x05\n"
"<iproto_call_16>      ::= 0x06 /* as used in version 1.6 */\n"
"<iproto_auth>         ::= 0x07\n"
"<iproto_eval>         ::= 0x08\n"
"<iproto_upsert>       ::= 0x09\n"
"<iproto_call>         ::= 0x0a\n"
"-- Коды для команд администратора\n"
"-- (включая коды для инициализации набора реплик и выбора мастера)\n"
"<iproto_ping>         ::= 0x40\n"
"<iproto_join>         ::= 0x41 /* i.e. replication join */\n"
"<iproto_subscribe>    ::= 0x42\n"
"<iproto_request_vote> ::= 0x43\n"
"\n"
"-- -- Значение для ключа <code> в ответе может быть следующим:\n"
"<iproto_ok>           ::= 0x00\n"
"<iproto_type_error>   ::= 0x8XXX /* где XXX -- это значение в errcode.h */"

#: ../doc/dev_guide/internals/box_protocol.rst:243
msgid "Both :code:`<header>` and :code:`<body>` are msgpack maps:"
msgstr ""
"И заголовок :code:`<header>` и тело сообщения :code:`<body>` представляют "
"собой ассоциативные массивы в формате msgpack:"

#: ../doc/dev_guide/internals/box_protocol.rst:245
msgid ""
"Request/Response:\n"
"\n"
"0        5\n"
"+--------+ +============+ +===================================+\n"
"| BODY + | |            | |                                   |\n"
"| HEADER | |   HEADER   | |               BODY                |\n"
"|  SIZE  | |            | |                                   |\n"
"+--------+ +============+ +===================================+\n"
"  MP_INT       MP_MAP                     MP_MAP"
msgstr ""
"Запрос / ответ:\n"
" \n"
"0        5\n"
"+--------+ +============+ +===================================+\n"
"| BODY + | |            | |                                   |\n"
"| HEADER | |   HEADER   | |               BODY                |\n"
"|  SIZE  | |            | |                                   |\n"
"+--------+ +============+ +===================================+\n"
"  MP_INT       MP_MAP                     MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:257
msgid ""
"UNIFIED HEADER:\n"
"\n"
"+================+================+=====================+\n"
"|                |                |                     |\n"
"|   0x00: CODE   |   0x01: SYNC   |    0x05: SCHEMA_ID  |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT |  MP_INT: MP_INT     |\n"
"|                |                |                     |\n"
"+================+================+=====================+\n"
"                          MP_MAP"
msgstr ""
"УНИФИЦИРОВАННЫЙ ЗАГОЛОВОК:\n"
"\n"
"+================+================+=====================+\n"
"|                |                |                     |\n"
"|   0x00: CODE   |   0x01: SYNC   |    0x05: SCHEMA_ID  |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT |  MP_INT: MP_INT     |\n"
"|                |                |                     |\n"
"+================+================+=====================+\n"
"                          MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:269
msgid ""
"They only differ in the allowed set of keys and values. The key defines the "
"type of value that follows. If a body has no keys, the entire msgpack map "
"for the body may be missing. Such is the case, for example, for a <ping> "
"request. ``schema_id`` may be absent in the request's header, meaning that "
"there will be no version checking, but it must be present in the response. "
"If ``schema_id`` is sent in the header, then it will be checked."
msgstr ""
"Они различаются лишь набором допустимых ключей и значений. Ключ определяет "
"тип следующего за ним значения. Если в теле сообщения нет ключей, может "
"отсутствовать весь ассоциативный массив в формате msgpack для тела "
"сообщения. Так и случится при запросе проверки связи <ping>. ``schema_id`` "
"может отсутствовать в заголовке запроса, что означает отсутствие проверки "
"версии, но этот ключ обязательно должен присутствовать в ответе. Если "
"``schema_id`` отправляется в заголовке, будет выполнена соответствующая "
"проверка."

#: ../doc/dev_guide/internals/box_protocol.rst:280
msgid "Authentication"
msgstr "Аутентификация"

#: ../doc/dev_guide/internals/box_protocol.rst:282
msgid ""
"When a client connects to the server instance, the instance responds with a "
"128-byte text greeting message. Part of the greeting is base-64 encoded "
"session salt - a random string which can be used for authentication. The "
"length of decoded salt (44 bytes) exceeds the amount necessary to sign the "
"authentication message (first 20 bytes). An excess is reserved for future "
"authentication schemas."
msgstr ""
"Когда клиент подключается к экземпляру сервера, экземпляр отвечает 128-"
"байтным текстовым сообщением приветствия. Часть приветствия представляет "
"собой закодированное в формате base-64 значение соль для сессии (случайная "
"строка), которое можно использовать для аутентификации. Длина "
"расшифрованного значения соль (44 байта) выходит за пределы сообщения для "
"аутентификации (первые 20 байтов). Остаток предназначается для будущих схем "
"аутентификации."

#: ../doc/dev_guide/internals/box_protocol.rst:289
msgid ""
"PREPARE SCRAMBLE:\n"
"\n"
"    LEN(ENCODED_SALT) = 44;\n"
"    LEN(SCRAMBLE)     = 20;\n"
"\n"
"prepare 'chap-sha1' scramble:\n"
"\n"
"    salt = base64_decode(encoded_salt);\n"
"    step_1 = sha1(password);\n"
"    step_2 = sha1(step_1);\n"
"    step_3 = sha1(salt, step_2);\n"
"    scramble = xor(step_1, step_3);\n"
"    return scramble;\n"
"\n"
"AUTHORIZATION BODY: CODE = 0x07\n"
"\n"
"+==================+====================================+\n"
"|                  |        +-------------+-----------+ |\n"
"|  (KEY)           | (TUPLE)|  len == 9   | len == 20 | |\n"
"|   0x23:USERNAME  |   0x21:| \"chap-sha1\" |  SCRAMBLE | |\n"
"| MP_INT:MP_STRING | MP_INT:|  MP_STRING  |  MP_BIN   | |\n"
"|                  |        +-------------+-----------+ |\n"
"|                  |                   MP_ARRAY         |\n"
"+==================+====================================+\n"
"                        MP_MAP"
msgstr ""
"ПОДГОТОВКА КОДИРОВАНИЯ:\n"
"\n"
"    LEN(ENCODED_SALT) = 44;\n"
"    LEN(SCRAMBLE)     = 20;\n"
"\n"
"подготовить кодирование 'chap-sha1':\n"
"\n"
"    salt = base64_decode(encoded_salt);\n"
"    step_1 = sha1(password);\n"
"    step_2 = sha1(step_1);\n"
"    step_3 = sha1(salt, step_2);\n"
"    scramble = xor(step_1, step_3);\n"
"    return scramble;\n"
"\n"
"ТЕЛО СООБЩЕНИЯ АВТОРИЗАЦИИ: CODE = 0x07\n"
"\n"
"+==================+====================================+\n"
"|                  |        +-------------+-----------+ |\n"
"|  (KEY)           | (TUPLE)|  len == 9   | len == 20 | |\n"
"|   0x23:USERNAME  |   0x21:| \"chap-sha1\" |  SCRAMBLE | |\n"
"| MP_INT:MP_STRING | MP_INT:|  MP_STRING  |  MP_BIN   | |\n"
"|                  |        +-------------+-----------+ |\n"
"|                  |                   MP_ARRAY         |\n"
"+==================+====================================+\n"
"                        MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:317
msgid ""
":code:`<key>` holds the user name. :code:`<tuple>` must be an array of 2 "
"fields: authentication mechanism (\"chap-sha1\" is the only supported "
"mechanism right now) and password, encrypted according to the specified "
"mechanism. Authentication in Tarantool is optional, if no authentication is "
"performed, session user is 'guest'. The instance responds to authentication "
"packet with a standard response with 0 tuples."
msgstr ""
":code:`<key>` содержит имя пользователя. :code:`<tuple>` должен представлять "
"собой массив из 2 полей: механизм аутентификации (в данный момент "
"поддерживается только механизм \"chap-sha1\") и пароль, закодированный в "
"соответствии с указанным механизмом. Аутентификация в Tarantool'е "
"необязательна: если аутентификация не проводится, то пользователем в сессии "
"будет 'guest'. Экземпляр отвечает на пакет аутентификации стандартным "
"ответом с 0 кортежей."

#: ../doc/dev_guide/internals/box_protocol.rst:325
msgid "Requests"
msgstr "Запросы"

#: ../doc/dev_guide/internals/box_protocol.rst:327
msgid "SELECT: CODE - 0x01 Find tuples matching the search pattern"
msgstr "SELECT: CODE - 0x01 Поиск кортежей, соответствующих шаблону поиска"

#: ../doc/dev_guide/internals/box_protocol.rst:330
msgid ""
"SELECT BODY:\n"
"\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID |   0x12: LIMIT    |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_INT   |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x13: OFFSET   |   0x14: ITERATOR |   0x20: KEY      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"                          MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ ВЫБОРКИ SELECT:\n"
"\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID |   0x12: LIMIT    |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_INT   |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x13: OFFSET   |   0x14: ITERATOR |   0x20: KEY      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"                          MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:347
msgid ""
"INSERT:  CODE - 0x02 Inserts tuple into the space, if no tuple with same "
"unique keys exists. Otherwise throw *duplicate key* error."
msgstr ""
"INSERT:  CODE - 0x02 Вставка кортежа в спейс, если нет кортежей с такими же "
"уникальными ключами. Если есть, выдать ошибку *duplicate key* (повторяющееся "
"значение ключа)."

#: ../doc/dev_guide/internals/box_protocol.rst:349
msgid ""
"REPLACE: CODE - 0x03 Insert a tuple into the space or replace an existing "
"one."
msgstr ""
"REPLACE: CODE - 0x03 Вставка кортежа в спейс или замена существующего "
"кортежа."

#: ../doc/dev_guide/internals/box_protocol.rst:352
msgid ""
"INSERT/REPLACE BODY:\n"
"\n"
"+==================+==================+\n"
"|                  |                  |\n"
"|   0x10: SPACE_ID |   0x21: TUPLE    |\n"
"| MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |\n"
"+==================+==================+\n"
"                 MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ ВСТАВКИ/ЗАМЕНЫ INSERT/REPLACE:\n"
"\n"
"+==================+==================+\n"
"|                  |                  |\n"
"|   0x10: SPACE_ID |   0x21: TUPLE    |\n"
"| MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |\n"
"+==================+==================+\n"
"                 MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:365
msgid "UPDATE: CODE - 0x04 Update a tuple"
msgstr "UPDATE: CODE - 0x04 Обновление кортежа"

#: ../doc/dev_guide/internals/box_protocol.rst:368
msgid ""
"UPDATE BODY:\n"
"\n"
"+==================+=======================+\n"
"|                  |                       |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT        |\n"
"|                  |                       |\n"
"+==================+=======================+\n"
"|                  |          +~~~~~~~~~~+ |\n"
"|                  |          |          | |\n"
"|                  | (TUPLE)  |    OP    | |\n"
"|   0x20: KEY      |    0x21: |          | |\n"
"| MP_INT: MP_ARRAY |  MP_INT: +~~~~~~~~~~+ |\n"
"|                  |            MP_ARRAY   |\n"
"+==================+=======================+\n"
"                 MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ ОБНОВЛЕНИЯ UPDATE:\n"
"\n"
"+==================+=======================+\n"
"|                  |                       |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT        |\n"
"|                  |                       |\n"
"+==================+=======================+\n"
"|                  |          +~~~~~~~~~~+ |\n"
"|                  |          |          | |\n"
"|                  | (TUPLE)  |    OP    | |\n"
"|   0x20: KEY      |    0x21: |          | |\n"
"| MP_INT: MP_ARRAY |  MP_INT: +~~~~~~~~~~+ |\n"
"|                  |            MP_ARRAY   |\n"
"+==================+=======================+\n"
"                 MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:387
msgid ""
"OP:\n"
"    Works only for integer fields:\n"
"    * Addition    OP = '+' . space[key][field_no] += argument\n"
"    * Subtraction OP = '-' . space[key][field_no] -= argument\n"
"    * Bitwise AND OP = '&' . space[key][field_no] &= argument\n"
"    * Bitwise XOR OP = '^' . space[key][field_no] ^= argument\n"
"    * Bitwise OR  OP = '|' . space[key][field_no] |= argument\n"
"    Works on any fields:\n"
"    * Delete      OP = '#'\n"
"      delete <argument> fields starting\n"
"      from <field_no> in the space[<key>]\n"
"\n"
"0           2\n"
"+-----------+==========+==========+\n"
"|           |          |          |\n"
"|    OP     | FIELD_NO | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  |\n"
"|           |          |          |\n"
"+-----------+==========+==========+\n"
"              MP_ARRAY"
msgstr ""
"OP:\n"
"    Работает только для целочисленных полей:\n"
"    * Сложение    OP = '+' . space[key][field_no] += argument\n"
"    * Вычитание OP = '-' . space[key][field_no] -= argument\n"
"    * Побитовое И OP = '&' . space[key][field_no] &= argument\n"
"    * Исключающее ИЛИ OP = '^' . space[key][field_no] ^= argument\n"
"    * Побитовое ИЛИ  OP = '|' . space[key][field_no] |= аргумент\n"
"    Работает для любых полей:\n"
"    * Удаление      OP = '#'\n"
"      удалить поля <argument>, начиная\n"
"      с поля <field_no> в спейсе с ключом space[<key>]\n"
"\n"
"0           2\n"
"+-----------+==========+==========+\n"
"|           |          |          |\n"
"|    OP     | FIELD_NO | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  |\n"
"|           |          |          |\n"
"+-----------+==========+==========+\n"
"              MP_ARRAY"

#: ../doc/dev_guide/internals/box_protocol.rst:410
msgid ""
"Note that ``FIELD_NO`` is one based (starts from 1) unlike indices numbers "
"which are usually zero based."
msgstr ""

#: ../doc/dev_guide/internals/box_protocol.rst:412
msgid ""
"    * Insert      OP = '!'\n"
"      insert <argument> before <field_no>\n"
"    * Assign      OP = '='\n"
"      assign <argument> to field <field_no>.\n"
"      will extend the tuple if <field_no> == <max_field_no> + 1\n"
"\n"
"0           2\n"
"+-----------+==========+===========+\n"
"|           |          |           |\n"
"|    OP     | FIELD_NO | ARGUMENT  |\n"
"| MP_FIXSTR |  MP_INT  | MP_OBJECT |\n"
"|           |          |           |\n"
"+-----------+==========+===========+\n"
"              MP_ARRAY\n"
"\n"
"    Works on string fields:\n"
"    * Splice      OP = ':'\n"
"      take the string from space[key][field_no] and\n"
"      substitute <offset> bytes from <position> with <argument>"
msgstr ""
"    * Вставка      OP = '!'\n"
"      вставить <argument> до поля <field_no>\n"
"    * Присвоение      OP = '='\n"
"      присвоить <argument> полю <field_no>.\n"
"      увеличит кортеж, если <field_no> == <max_field_no> + 1\n"
"\n"
"0           2\n"
"+-----------+==========+===========+\n"
"|           |          |           |\n"
"|    OP     | FIELD_NO | ARGUMENT  |\n"
"| MP_FIXSTR |  MP_INT  | MP_OBJECT |\n"
"|           |          |           |\n"
"+-----------+==========+===========+\n"
"              MP_ARRAY\n"
"\n"
"    Работает со строковыми полями:\n"
"    * Разделение      OP = ':'\n"
"      взять строку из space[key][field_no] и\n"
"      заменить <offset> байтов из положения <position> на <argument>"

#: ../doc/dev_guide/internals/box_protocol.rst:434
msgid ""
"0           2\n"
"+-----------+==========+==========+========+==========+\n"
"|           |          |          |        |          |\n"
"|    ':'    | FIELD_NO | POSITION | OFFSET | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  | MP_INT |  MP_STR  |\n"
"|           |          |          |        |          |\n"
"+-----------+==========+==========+========+==========+\n"
"                         MP_ARRAY"
msgstr ""
"0           2\n"
"+-----------+==========+==========+========+==========+\n"
"|           |          |          |        |          |\n"
"|    ':'    | FIELD_NO | POSITION | OFFSET | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  | MP_INT |  MP_STR  |\n"
"|           |          |          |        |          |\n"
"+-----------+==========+==========+========+==========+\n"
"                         MP_ARRAY"

#: ../doc/dev_guide/internals/box_protocol.rst:446
msgid ""
"It is an error to specify an argument of a type that differs from the "
"expected type."
msgstr ""
"Указать аргумент типа, который отличается от ожидаемого типа, будет ошибкой."

#: ../doc/dev_guide/internals/box_protocol.rst:448
msgid "DELETE: CODE - 0x05 Delete a tuple"
msgstr "DELETE: CODE - 0x05 Удаление кортежа"

#: ../doc/dev_guide/internals/box_protocol.rst:451
msgid ""
"DELETE BODY:\n"
"\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID |   0x20: KEY      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"                          MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ УДАЛЕНИЯ DELETE:\n"
"\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID |   0x20: KEY      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"                          MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:464
msgid ""
"CALL_16: CODE - 0x06 Call a stored function, returning an array of tuples. "
"This is deprecated; CALL (0x0a) is recommended instead."
msgstr ""
"CALL_16: CODE - 0x06 Вызов хранимой функции с возвратом массива кортежей. "
"Объявлен устаревшим; рекомендуется использовать CALL (0x0a)."

#: ../doc/dev_guide/internals/box_protocol.rst:467
msgid ""
"CALL_16 BODY:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x22: FUNCTION_NAME |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ CALL_16:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x22: FUNCTION_NAME |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:481
msgid "EVAL: CODE - 0x08 Evaulate Lua expression"
msgstr "EVAL: CODE - 0x08 Оценка Lua-выражения"

#: ../doc/dev_guide/internals/box_protocol.rst:484
msgid ""
"EVAL BODY:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x27: EXPRESSION    |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ EVAL:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x27: EXPRESSION    |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:497
msgid ""
"UPSERT: CODE - 0x09 Update tuple if it would be found elsewhere try to "
"insert tuple. Always use primary index for key."
msgstr ""
"UPSERT: CODE - 0x09 Обновление кортежа, если он уже существует, попытка "
"вставить кортеж. Всегда используйте первичный индекс."

#: ../doc/dev_guide/internals/box_protocol.rst:500
msgid ""
"UPSERT BODY:\n"
"\n"
"+==================+==================+==========================+\n"
"|                  |                  |             +~~~~~~~~~~+ |\n"
"|                  |                  |             |          | |\n"
"|   0x10: SPACE_ID |   0x21: TUPLE    |       (OPS) |    OP    | |\n"
"| MP_INT: MP_INT   | MP_INT: MP_ARRAY |       0x28: |          | |\n"
"|                  |                  |     MP_INT: +~~~~~~~~~~+ |\n"
"|                  |                  |               MP_ARRAY   |\n"
"+==================+==================+==========================+\n"
"                                MP_MAP\n"
"\n"
"Operations structure same as for UPDATE operation.\n"
"   0           2\n"
"+-----------+==========+==========+\n"
"|           |          |          |\n"
"|    OP     | FIELD_NO | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  |\n"
"|           |          |          |\n"
"+-----------+==========+==========+\n"
"              MP_ARRAY\n"
"\n"
"Supported operations:\n"
"\n"
"'+' - add a value to a numeric field. If the filed is not numeric, it's\n"
"      changed to 0 first. If the field does not exist, the operation is\n"
"      skipped. There is no error in case of overflow either, the value\n"
"      simply wraps around in C style. The range of the integer is MsgPack:\n"
"      from -2^63 to 2^64-1\n"
"'-' - same as the previous, but subtract a value\n"
"'=' - assign a field to a value. The field must exist, if it does not "
"exist,\n"
"      the operation is skipped.\n"
"'!' - insert a field. It's only possible to insert a field if this create "
"no\n"
"      nil \"gaps\" between fields. E.g. it's possible to add a field "
"between\n"
"      existing fields or as the last field of the tuple.\n"
"'#' - delete a field. If the field does not exist, the operation is "
"skipped.\n"
"      It's not possible to change with update operations a part of the "
"primary\n"
"      key (this is validated before performing upsert)."
msgstr ""
"ТЕЛО СООБЩЕНИЯ ОБНОВЛЕНИЯ И ВСТАВКИ UPSERT:\n"
"\n"
"+==================+==================+==========================+\n"
"|                  |                  |             +~~~~~~~~~~+ |\n"
"|                  |                  |             |          | |\n"
"|   0x10: SPACE_ID |   0x21: TUPLE    |       (OPS) |    OP    | |\n"
"| MP_INT: MP_INT   | MP_INT: MP_ARRAY |       0x28: |          | |\n"
"|                  |                  |     MP_INT: +~~~~~~~~~~+ |\n"
"|                  |                  |               MP_ARRAY   |\n"
"+==================+==================+==========================+\n"
"                                MP_MAP\n"
"\n"
"Структура операции аналогична структуре операции обновления UPDATE.\n"
"   0           2\n"
"+-----------+==========+==========+\n"
"|           |          |          |\n"
"|    OP     | FIELD_NO | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  |\n"
"|           |          |          |\n"
"+-----------+==========+==========+\n"
"              MP_ARRAY\n"
"\n"
"Поддерживаются следующие операции:\n"
"\n"
"'+' - прибавление значения к числовому полю. Если поле не является числовым, "
"оно\n"
"      сначала изменяется на 0. Если поле отсутствует, операция\n"
"      пропускается. В случае переполнения ошибки также не будет, значение\n"
"      просто переносится в стиле языка C. Диапазон целых чисел в формате "
"MsgPack:\n"
"      от -2^63 до 2^64-1\n"
"'-' - как в предыдущей операции, но значение вычитается\n"
"'=' - присвоение значения полю. Если поле отсутствует,\n"
"      операция пропускается.\n"
"'!' - вставка поля. Можно вставить поле, если при этом не будут созданы\n"
"      промежутки с нулевым значением nil между полями. Например, можно "
"добавить поле между\n"
"      существующими полями или последнее поле в кортеже.\n"
"'#' - удаление поля. Если поле отсутствует, операция пропускается.\n"
"      Нельзя с помощью операции обновления update изменить компонент "
"первичного\n"
"      ключа (это проверяется перед выполнением операции upsert)."

#: ../doc/dev_guide/internals/box_protocol.rst:541
msgid ""
"CALL: CODE - 0x0a Similar to CALL_16, but -- like EVAL, CALL returns a list "
"of values, unconverted"
msgstr ""
"CALL: CODE - 0x0a Аналог CALL_16, но как и операция EVAL, CALL возвращает "
"список неконвертированных значений"

#: ../doc/dev_guide/internals/box_protocol.rst:544
msgid ""
"CALL BODY:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x22: FUNCTION_NAME |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ CALL:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x22: FUNCTION_NAME |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:559
msgid "Response packet structure"
msgstr "Структура пакета ответа"

#: ../doc/dev_guide/internals/box_protocol.rst:561
msgid "We will show whole packets here:"
msgstr "Здесь мы продемонстрируем пакеты полностью:"

#: ../doc/dev_guide/internals/box_protocol.rst:563
msgid ""
"OK:    LEN + HEADER + BODY\n"
"\n"
"0      5                                          OPTIONAL\n"
"+------++================+================++===================+\n"
"|      ||                |                ||                   |\n"
"| BODY ||   0x00: 0x00   |   0x01: SYNC   ||   0x30: DATA      |\n"
"|HEADER|| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_OBJECT |\n"
"| SIZE ||                |                ||                   |\n"
"+------++================+================++===================+\n"
" MP_INT                MP_MAP                      MP_MAP"
msgstr ""
"OK:    LEN + HEADER + BODY\n"
"\n"
"0      5                                          OPTIONAL\n"
"+------++================+================++===================+\n"
"|      ||                |                ||                   |\n"
"| BODY ||   0x00: 0x00   |   0x01: SYNC   ||   0x30: DATA      |\n"
"|HEADER|| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_OBJECT |\n"
"| SIZE ||                |                ||                   |\n"
"+------++================+================++===================+\n"
" MP_INT                MP_MAP                      MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:577
msgid ""
"Set of tuples in the response :code:`<data>` expects a msgpack array of "
"tuples as value EVAL command returns arbitrary `MP_ARRAY` with arbitrary "
"MsgPack values."
msgstr ""
"Предполагается, что набор кортежей в ответе :code:`<data>` будет "
"представлять собой msgpack-массив кортежей, поскольку команда EVAL "
"возвращается произвольный MsgPack-массив `MP_ARRAY` с произвольными MsgPack-"
"значениями."

#: ../doc/dev_guide/internals/box_protocol.rst:580
msgid ""
"ERROR: LEN + HEADER + BODY\n"
"\n"
"0      5\n"
"+------++================+================++===================+\n"
"|      ||                |                ||                   |\n"
"| BODY ||   0x00: 0x8XXX |   0x01: SYNC   ||   0x31: ERROR     |\n"
"|HEADER|| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_STRING |\n"
"| SIZE ||                |                ||                   |\n"
"+------++================+================++===================+\n"
" MP_INT                MP_MAP                      MP_MAP\n"
"\n"
"Where 0xXXX is ERRCODE."
msgstr ""
"ОШИБКА: LEN + HEADER + BODY\n"
"\n"
"0      5\n"
"+------++================+================++===================+\n"
"|      ||                |                ||                   |\n"
"| BODY ||   0x00: 0x8XXX |   0x01: SYNC   ||   0x31: ERROR     |\n"
"|HEADER|| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_STRING |\n"
"| SIZE ||                |                ||                   |\n"
"+------++================+================++===================+\n"
" MP_INT                MP_MAP                      MP_MAP\n"
"\n"
"Где 0xXXX -- это код ошибки ERRCODE."

#: ../doc/dev_guide/internals/box_protocol.rst:595
msgid ""
"An error message is present in the response only if there is an error; :code:"
"`<error>` expects as value a msgpack string."
msgstr ""
"Сообщение об ошибке будет включено в ответ только в случае ошибки; "
"предполагается, что значение :code:`<error>` будет msgpack-строкой."

#: ../doc/dev_guide/internals/box_protocol.rst:598
#, fuzzy
msgid ""
"Convenience macros which define hexadecimal constants for return codes can "
"be found in `src/box/errcode.h <https://github.com/tarantool/tarantool/"
"blob/2.1/src/box/errcode.h>`_"
msgstr ""
"Удобные макросы для определения шестнадцатеричных постоянных для "
"возвращаемых кодов можно найти по ссылке `src/box/errcode.h <https://github."
"com/tarantool/tarantool/blob/1.10/src/box/errcode.h>`_"

#: ../doc/dev_guide/internals/box_protocol.rst:604
msgid "Replication packet structure"
msgstr "Структура пакета при репликации"

#: ../doc/dev_guide/internals/box_protocol.rst:606
#, fuzzy
msgid ""
"-- replication keys\n"
"<server_id>    ::= 0x02\n"
"<lsn>          ::= 0x03\n"
"<timestamp>    ::= 0x04\n"
"<server_uuid>  ::= 0x24\n"
"<cluster_uuid> ::= 0x25\n"
"<vclock>       ::= 0x26"
msgstr ""
"-- ключи для репликации\n"
" <server_id>     ::= 0x02\n"
" <lsn>           ::= 0x03\n"
" <timestamp>     ::= 0x04\n"
" <server_uuid>   ::= 0x24\n"
" <cluster_uuid>  ::= 0x25\n"
" <vclock>        ::= 0x26"

#: ../doc/dev_guide/internals/box_protocol.rst:616
#, fuzzy
msgid ""
"-- replication codes\n"
"<join>         ::= 0x41\n"
"<subscribe>    ::= 0x42"
msgstr ""
"-- коды для репликации\n"
"<join>      ::= 0x41\n"
"<subscribe> ::= 0x42"

#: ../doc/dev_guide/internals/box_protocol.rst:623
msgid ""
"JOIN:\n"
"\n"
"In the beginning you must send initial JOIN\n"
"               HEADER                      BODY\n"
"+================+================++===================+\n"
"|                |                ||   SERVER_UUID     |\n"
"|   0x00: 0x41   |   0x01: SYNC   ||   0x24: UUID      |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_STRING |\n"
"|                |                ||                   |\n"
"+================+================++===================+\n"
"               MP_MAP                     MP_MAP\n"
"\n"
"Then instance, which we connect to, will send last SNAP file by, simply,\n"
"creating a number of INSERTs (with additional LSN and ServerID)\n"
"(don't reply). Then it'll send a vclock's MP_MAP and close a socket.\n"
"\n"
"+================+================++============================+\n"
"|                |                ||        +~~~~~~~~~~~~~~~~~+ |\n"
"|                |                ||        |                 | |\n"
"|   0x00: 0x00   |   0x01: SYNC   ||   0x26:| SRV_ID: SRV_LSN | |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT:| MP_INT: MP_INT  | |\n"
"|                |                ||        +~~~~~~~~~~~~~~~~~+ |\n"
"|                |                ||               MP_MAP       |\n"
"+================+================++============================+\n"
"               MP_MAP                      MP_MAP\n"
"\n"
"SUBSCRIBE:\n"
"\n"
"Then you must send SUBSCRIBE:\n"
"\n"
"                              HEADER\n"
"+===================+===================+\n"
"|                   |                   |\n"
"|     0x00: 0x42    |    0x01: SYNC     |\n"
"|   MP_INT: MP_INT  |  MP_INT: MP_INT   |\n"
"|                   |                   |\n"
"+===================+===================+\n"
"|    SERVER_UUID    |    CLUSTER_UUID   |\n"
"|   0x24: UUID      |   0x25: UUID      |\n"
"| MP_INT: MP_STRING | MP_INT: MP_STRING |\n"
"|                   |                   |\n"
"+===================+===================+\n"
"                 MP_MAP\n"
"\n"
"      BODY\n"
"+================+\n"
"|                |\n"
"|   0x26: VCLOCK |\n"
"| MP_INT: MP_INT |\n"
"|                |\n"
"+================+\n"
"      MP_MAP\n"
"\n"
"Then you must process every query that'll came through other masters.\n"
"Every request between masters will have Additional LSN and SERVER_ID."
msgstr ""
"JOIN:\n"
"\n"
"Сначала необходимо отправить изначальный запрос JOIN\n"
"               HEADER                      BODY\n"
"+================+================++===================+\n"
"|                |                ||   SERVER_UUID     |\n"
"|   0x00: 0x41   |   0x01: SYNC   ||   0x24: UUID      |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_STRING |\n"
"|                |                ||                   |\n"
"+================+================++===================+\n"
"               MP_MAP                     MP_MAP\n"
"\n"
"Затем экземпляр, к которому мы подключаемся, отправит последний файл снимка "
"SNAP,\n"
"просто создав количество запросов вставки INSERT (с дополнительным LSN и "
"ServerID)\n"
"(не отвечайте). Затем он отправит MP_MAP из vclock и закроет сокет.\n"
"\n"
"+================+================++============================+\n"
"|                |                ||        +~~~~~~~~~~~~~~~~~+ |\n"
"|                |                ||        |                 | |\n"
"|   0x00: 0x00   |   0x01: SYNC   ||   0x26:| SRV_ID: SRV_LSN | |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT:| MP_INT: MP_INT  | |\n"
"|                |                ||        +~~~~~~~~~~~~~~~~~+ |\n"
"|                |                ||               MP_MAP       |\n"
"+================+================++============================+\n"
"               MP_MAP                      MP_MAP\n"
"\n"
"SUBSCRIBE:\n"
"\n"
"Далее необходимо отправить запрос SUBSCRIBE:\n"
"\n"
"                              HEADER\n"
"+===================+===================+\n"
"|                   |                   |\n"
"|     0x00: 0x42    |    0x01: SYNC     |\n"
"|   MP_INT: MP_INT  |  MP_INT: MP_INT   |\n"
"|                   |                   |\n"
"+===================+===================+\n"
"|    SERVER_UUID    |    CLUSTER_UUID   |\n"
"|   0x24: UUID      |   0x25: UUID      |\n"
"| MP_INT: MP_STRING | MP_INT: MP_STRING |\n"
"|                   |                   |\n"
"+===================+===================+\n"
"                 MP_MAP\n"
"\n"
"      BODY\n"
"+================+\n"
"|                |\n"
"|   0x26: VCLOCK |\n"
"| MP_INT: MP_INT |\n"
"|                |\n"
"+================+\n"
"      MP_MAP\n"
"\n"
" Затем следует обработать каждый запрос, который пришел от других мастеров.\n"
" Каждый запрос между мастерами получит дополнительный LSN и SERVER_ID."

#: ../doc/dev_guide/internals/box_protocol.rst:683
msgid "XLOG / SNAP"
msgstr "XLOG / SNAP"

#: ../doc/dev_guide/internals/box_protocol.rst:685
msgid "XLOG and SNAP files have nearly the same format. The header looks like:"
msgstr ""
"Файлы форматов XLOG и SNAP выглядят практически одинаково. Заголовок "
"выглядит следующим образом:"

#: ../doc/dev_guide/internals/box_protocol.rst:687
msgid ""
"<type>\\n                  SNAP\\n or XLOG\\n\n"
"<version>\\n               currently 0.13\\n\n"
"Server: <server_uuid>\\n   where UUID is a 36-byte string\n"
"VClock: <vclock_map>\\n    e.g. {1: 0}\\n\n"
"\\n"
msgstr ""
"<type>\\n                  SNAP\\n или XLOG\\n\n"
"<version>\\n               в данный момент 0.13\\n\n"
"Server: <server_uuid>\\n   где UUID -- это 36-байтная строка\n"
"VClock: <vclock_map>\\n    например, {1: 0}\\n\n"
"\\n"

#: ../doc/dev_guide/internals/box_protocol.rst:695
msgid ""
"After the file header come the data tuples. Tuples begin with a row marker "
"``0xd5ba0bab`` and the last tuple may be followed by an EOF marker "
"``0xd510aded``. Thus, between the file header and the EOF marker, there may "
"be data tuples that have this form:"
msgstr ""
"После файла заголовка идут кортежи с данными. Кортежи начинаются с маркера "
"строки ``0xd5ba0bab``, а после последнего кортежа может стоять маркер конца "
"файла ``0xd510aded``. Таким образом, между заголовком файла и маркером конца "
"файла могут быть кортежи с данными в следующем виде:"

#: ../doc/dev_guide/internals/box_protocol.rst:702
msgid ""
"0            3 4                                         17\n"
"+-------------+========+============+===========+=========+\n"
"|             |        |            |           |         |\n"
"| 0xd5ba0bab  | LENGTH | CRC32 PREV | CRC32 CUR | PADDING |\n"
"|             |        |            |           |         |\n"
"+-------------+========+============+===========+=========+\n"
"  MP_FIXEXT2    MP_INT     MP_INT       MP_INT      ---\n"
"\n"
"+============+ +===================================+\n"
"|            | |                                   |\n"
"|   HEADER   | |                BODY               |\n"
"|            | |                                   |\n"
"+============+ +===================================+\n"
"    MP_MAP                     MP_MAP"
msgstr ""
"0            3 4                                         17\n"
"+-------------+========+============+===========+=========+\n"
"|             |        |            |           |         |\n"
"| 0xd5ba0bab  | LENGTH | CRC32 PREV | CRC32 CUR | PADDING |\n"
"|             |        |            |           |         |\n"
"+-------------+========+============+===========+=========+\n"
"  MP_FIXEXT2    MP_INT     MP_INT       MP_INT      ---\n"
"\n"
"+============+ +===================================+\n"
"|            | |                                   |\n"
"|   HEADER   | |                BODY               |\n"
"|            | |                                   |\n"
"+============+ +===================================+\n"
"    MP_MAP                     MP_MAP"

#: ../doc/dev_guide/internals/box_protocol.rst:719
msgid "See the example in the following section."
msgstr "См. пример в предыдущем разделе."
