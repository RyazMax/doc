# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-03 19:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../doc/book/app_server/contributing_module.rst:5
msgid "Contributing a module"
msgstr ""

#: ../doc/book/app_server/contributing_module.rst:7
msgid "We have already discussed :ref:`how to create a simple module in Lua for local usage <app_server-modules>`. Now let's discuss how to create a more advanced Tarantool module and then get it published on `Tarantool rocks page <http://tarantool.org/rocks.html>`_ and included in `official Tarantool images <http://github.com/tarantool/docker>`_ for Docker."
msgstr ""

#: ../doc/book/app_server/contributing_module.rst:14
msgid "To help our contributors, we have created `modulekit <http://github.com/tarantool/modulekit>`_, a set of templates for creating Tarantool modules in Lua and C."
msgstr ""

#: ../doc/book/app_server/contributing_module.rst:20
msgid "As a prerequisite for using ``modulekit``, install ``tarantool-dev`` package first. For example, in Ubuntu say:"
msgstr ""

#: ../doc/book/app_server/contributing_module.rst:23
msgid "$ sudo apt-get install tarantool-dev"
msgstr ""

#: ../doc/book/app_server/contributing_module.rst:31
msgid "Contributing a module in Lua"
msgstr ""

#: ../doc/book/app_server/contributing_module.rst:33
msgid "See `README in \"luakit\" branch of tarantool/modulekit repository <http://github.com/tarantool/modulekit/blob/luakit/README.md>`_ for detailed instructions and examples."
msgstr ""

#: ../doc/book/app_server/contributing_module.rst:41
msgid "Contributing a module in C"
msgstr ""

#: ../doc/book/app_server/contributing_module.rst:43
msgid "In some cases, you may want to create a Tarantool module in C rather than in Lua. For example, to work with specific hardware or low-level system interfaces."
msgstr ""

#: ../doc/book/app_server/contributing_module.rst:46
msgid "See `README in \"ckit\" branch of tarantool/modulekit repository <http://github.com/tarantool/modulekit/blob/ckit/README.md>`_ for detailed instructions and examples."
msgstr ""

#: ../doc/book/app_server/contributing_module.rst:52
msgid "You can also create modules with C++, provided that the code does not throw exceptions."
msgstr ""

